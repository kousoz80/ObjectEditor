<?xml version="1.0" encoding="Shift_JIS" ?>
<!-- なんちゃってXML version 0.1( ObjectEditor専用 ) -->
<xobject>
<ID>project</ID>
<x0>0</x0>
<y0>0</y0>
<width>200</width>
<height>100</height>
<ID_maker>5</ID_maker>
<objectname>NewApplication</objectname>
<description>新規のアプリケーション</description>
<プロパティ>
<ID>properties</ID>
<LookandFeel>javax.swing.plaf.metal.MetalLookAndFeel</LookandFeel>
<MainWinx0>0</MainWinx0>
<MainWiny0>0</MainWiny0>
<MainWinWidth>1024</MainWinWidth>
<MainWinHeight>740</MainWinHeight>
<MesgWinx0>0</MesgWinx0>
<MesgWiny0>0</MesgWiny0>
<MesgWinWidth>1024</MesgWinWidth>
<MesgWinHeight>745</MesgWinHeight>
<FileWinx0>36</FileWinx0>
<FileWiny0>478</FileWiny0>
<FileWinWidth>578</FileWinWidth>
<FileWinHeight>262</FileWinHeight>
<EditWinx0>347</EditWinx0>
<EditWiny0>0</EditWiny0>
<EditWinWidth>676</EditWinWidth>
<EditWinHeight>541</EditWinHeight>
<PropWinx0>1</PropWinx0>
<PropWiny0>1</PropWiny0>
<PropWinWidth>615</PropWinWidth>
<PropWinHeight>448</PropWinHeight>
<DividerLocation1>2</DividerLocation1>
<DividerLocation2>2</DividerLocation2>
<ToolBarVisible>1</ToolBarVisible>
<ViewSourceAtCompile>0</ViewSourceAtCompile>
<NoSourceCreate>0</NoSourceCreate>
<JavaEditCommand>leafpad</JavaEditCommand>
<JavaViewCommand></JavaViewCommand>
<HelpCommand>xdg-open ./help/manual.html</HelpCommand>
<ApplicationType>0</ApplicationType>
<CompileCommand0>./compile_java</CompileCommand0>
<RunCommand0>./run_java</RunCommand0>
<GUIDesignerCommand0>java -jar guidsin.jar -java</GUIDesignerCommand0>
<ImportFiles0> import java.awt.*;
 import java.awt.event.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.geom.*;
import java.awt.print.*;
import javax.swing.border.*;
import javax.swing.filechooser.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.image.BufferedImage;
import javax.sound.sampled.*;

class Starter{
  public static void main( String args[] ){
    %AppName% ap = new %AppName%();
    ap.ARGS = args;
    ap.Start();
  }
}
</ImportFiles0>
<ProgramStartupCode0> String[] ARGS;
</ProgramStartupCode0>
<NativeHelpCommand0></NativeHelpCommand0>
<CompileCommand1></CompileCommand1>
<RunCommand1></RunCommand1>
<GUIDesignerCommand1>java -jar guidsin.jar -applet</GUIDesignerCommand1>
<ImportFiles1> import java.awt.*;
 import java.awt.event.*;
 import java.applet.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
 public class javatext extends Applet {
   %AppName% ap;
   public void init() {
     ap = new %AppName%();
     ap.APPLET = this;
     ap.Start();
   }
 }
</ImportFiles1>
<ProgramStartupCode1> Applet APPLET;
</ProgramStartupCode1>
<NativeHelpCommand1></NativeHelpCommand1>
<CompileCommand2></CompileCommand2>
<RunCommand2></RunCommand2>
<GUIDesignerCommand2></GUIDesignerCommand2>
<ImportFiles2>#include &lt;stdio.h&gt;

void Startup();
</ImportFiles2>
<ProgramStartupCode2>int main(){
 Startup();
 %AppName%::Start();
 }
</ProgramStartupCode2>
<NativeHelpCommand2></NativeHelpCommand2>
<CompileCommand3></CompileCommand3>
<RunCommand3></RunCommand3>
<GUIDesignerCommand3>java -jar guidsin.jar -cpp</GUIDesignerCommand3>
<ImportFiles3>#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;math.h&gt;
#include &quot;Ekagen.h&quot;
void Startup();
</ImportFiles3>
<ProgramStartupCode3>void Emain(){
Startup();
%AppName%::Start();
}
</ProgramStartupCode3>
<NativeHelpCommand3></NativeHelpCommand3>
<MoveStep>8</MoveStep>
<ImageEditCommand>mtpaint</ImageEditCommand>
<CompilerFileName>javac.exe</CompilerFileName>
<CompileCommand4>./compile_android Test com example test</CompileCommand4>
<RunCommand4>./run_android Test com example test</RunCommand4>
<GUIDesignerCommand4>java -jar guidsin.jar -android</GUIDesignerCommand4>
<ImportFiles4>package com.example.test;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.widget.Button;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.widget.EditText;
import android.text.SpannableStringBuilder;
import android.text.TextWatcher;
import android.text.Editable;
import android.graphics.Matrix;
import android.graphics.Typeface;
import android.graphics.RectF;
import android.graphics.BitmapFactory;
import java.io.*;
 import java.net.*;
import java.util.*;
import java.text.SimpleDateFormat;
import android.media.MediaPlayer;
import android.os.Handler;
import android.content.res.Configuration;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.app.Activity;
import android.graphics.Color;

import android.widget.AbsoluteLayout;
import android.widget.*;
import android.view.Gravity;
import android.view.View.OnClickListener;

import android.hardware.Camera;

public class HelloWorld extends Activity {
  public void onCreate(Bundle bundle) {
    super.onCreate(bundle);
    %AppName% ap = new %AppName%();
    ap.ACTIVITY = this;
    ap.Start();
  }
}
</ImportFiles4>
<ProgramStartupCode4>Activity ACTIVITY;
</ProgramStartupCode4>
<NativeHelpCommand4>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.test&quot;
    android:versionCode=&quot;1&quot;
    android:versionName=&quot;1.0&quot; &gt;

    
    
  &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.camera&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.usb.host&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot;/&gt;
  &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;

  &lt;uses-sdk android:minSdkVersion=&quot;3&quot; android:targetSdkVersion=&quot;21&quot;/&gt;
  
 
    &lt;application android:label=&quot;@string/app_name&quot; &gt;
        &lt;activity
            android:name=&quot;HelloWorld&quot;
            android:label=&quot;@string/app_name&quot; &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</NativeHelpCommand4>
<HtmlEditCommand></HtmlEditCommand>
<CompileCommand5></CompileCommand5>
<RunCommand5></RunCommand5>
<GUIDesignerCommand5></GUIDesignerCommand5>
<ImportFiles5></ImportFiles5>
<ProgramStartupCode5>gosub @_PSTART
end
</ProgramStartupCode5>
<NativeHelpCommand5></NativeHelpCommand5>
<NoOptimizePin>0</NoOptimizePin>
<CompileCommand6>./compile_c</CompileCommand6>
<RunCommand6>./run_c</RunCommand6>
<GUIDesignerCommand6></GUIDesignerCommand6>
<ImportFiles6>#include &lt;setjmp.h&gt;
#include &lt;pthread.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;math.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;netdb.h&gt;

#include &lt;X11/Xlib.h&gt;
#include &lt;X11/Xutil.h&gt;
#include &lt;X11/Xlocale.h&gt; /* ロケール用ヘッダーファイル */
#include &lt;X11/xpm.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;signal.h&gt;
#include &lt;unistd.h&gt;
#include &lt;termios.h&gt;
#include &lt;errno.h&gt;
</ImportFiles6>
<ProgramStartupCode6>int ARGC; char** ARGV;
int main( int argc, char** argv ){
  ARGC=argc;
  ARGV=argv;
  _PSTART();
}
</ProgramStartupCode6>
<NativeHelpCommand6></NativeHelpCommand6>
<IDF_LocalVariable5>\</IDF_LocalVariable5>
<IDF_LocalVariable7>\</IDF_LocalVariable7>
<CompileCommand7></CompileCommand7>
<RunCommand7></RunCommand7>
<GUIDesignerCommand7></GUIDesignerCommand7>
<ImportFiles7></ImportFiles7>
<ProgramStartupCode7></ProgramStartupCode7>
<NativeHelpCommand7></NativeHelpCommand7>
</プロパティ>
<codeclip>
<ID>_CSTART</ID>
<x0>10</x0>
<y0>10</y0>
<width>80</width>
<height>24</height>
<codetext> String[] ARGS;
</codetext>
</codeclip>
<pin>
<ID>_PSTART</ID>
<x0>10</x0>
<y0>40</y0>
<width>55</width>
<height>24</height>
<text>Start()</text>
<px>50</px>
<py>50</py>
</pin>
<aobject>
<ID>_A0</ID>
<x0>145</x0>
<y0>44</y0>
<width>280</width>
<objectname>GUI</objectname>
<description>GUIオブジェクト
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created(JFrame f)</text>
<px>0</px>
<py>54</py>
</pin>
<pin>
<ID>_PGUIclosed</ID>
<x0>310</x0>
<y0>0</y0>
<width>180</width>
<height>26</height>
<text>GUI_closed()</text>
<px>100</px>
<py>6</py>
</pin>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>GUIを作成する
</description>
<codetext>XGUI x = new XGUI();

</codetext>
</operation>
<pin>
<ID>_PT_AREA0</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>T_AREA0_created(JTextArea t)</text>
<px>0</px>
<py>72</py>
</pin>
<pin>
<ID>_PBUTTON1</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>BUTTON1_created(JButton b)</text>
<px>0</px>
<py>90</py>
</pin>
<pin>
<ID>_PABUTTON1</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>BUTTON1_clicked()</text>
<px>0</px>
<py>108</py>
</pin>
<pin>
<ID>_PBUTTON2</ID>
<x0>0</x0>
<y0>194</y0>
<width>200</width>
<height>26</height>
<text>BUTTON2_created(JButton b)</text>
<px>0</px>
<py>126</py>
</pin>
<pin>
<ID>_PABUTTON2</ID>
<x0>0</x0>
<y0>222</y0>
<width>200</width>
<height>26</height>
<text>BUTTON2_clicked()</text>
<px>0</px>
<py>144</py>
</pin>
<codeclip>
<ID>_CXSTART</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>26</height>
<codetext> class XGUI extends JFrame implements WindowListener{
 JPanel cnt;
T_AREA0 IT_AREA0;
 class T_AREA0 extends JTextArea{
 JScrollPane scrl;
  T_AREA0(){
 setOpaque( true );
 setName(  &quot;T_AREA0&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;Text&quot; );
 scrl = new JScrollPane( this );
 T_AREA0_created( this );
}
}
BUTTON1 IBUTTON1;
 class BUTTON1 extends JButton implements ActionListener{
  BUTTON1(){
 setOpaque( true );
 setName(  &quot;BUTTON1&quot; );
 setFont( new Font( &quot;Dialog&quot;, 1, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;BUTTON1&quot; );
 addActionListener( this );
 BUTTON1_created( this );
}
 public void actionPerformed( ActionEvent e ){ BUTTON1_clicked(); }
}
BUTTON2 IBUTTON2;
 class BUTTON2 extends JButton implements ActionListener{
  BUTTON2(){
 setOpaque( true );
 setName(  &quot;BUTTON2&quot; );
 setFont( new Font( &quot;Dialog&quot;, 1, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;BUTTON2&quot; );
 addActionListener( this );
 BUTTON2_created( this );
}
 public void actionPerformed( ActionEvent e ){ BUTTON2_clicked(); }
}
 XGUI(){
 setTitle(&quot;NoTitle&quot;);
 cnt = new JPanel( new BorderLayout() );
 cnt.setPreferredSize(  new  Dimension( 400, 298 ) );
 ((Component)cnt).setBackground( new Color( 252, 253, 186 ) );
 IT_AREA0 = new T_AREA0();
 cnt.add( IT_AREA0.scrl, 0 );
 cnt.getLayout().removeLayoutComponent( IT_AREA0.scrl );
 (  IT_AREA0.scrl ).setBounds( 17, 15, 335, 207 );
 IBUTTON1 = new BUTTON1();
 cnt.add( IBUTTON1, 0 );
 cnt.getLayout().removeLayoutComponent( IBUTTON1 );
 IBUTTON1.setBounds( 28, 238, 140, 35 );
 IBUTTON2 = new BUTTON2();
 cnt.add( IBUTTON2, 0 );
 cnt.getLayout().removeLayoutComponent( IBUTTON2 );
 IBUTTON2.setBounds( 178, 238, 140, 35 );
 setContentPane( cnt );
 pack();
 addWindowListener( this );
 setVisible( true );
 GUI_created( this );
}
 public void windowActivated( WindowEvent e ){}
 public void windowClosed( WindowEvent e ){}
 public void windowClosing( WindowEvent e ){ GUI_closed(); }
 public void windowDeactivated( WindowEvent e ){}
 public void windowDeiconified( WindowEvent e ){}
 public void windowIconified( WindowEvent e ){}
 public void windowOpened( WindowEvent e ){}
}
</codetext>
</codeclip>
<ID_maker>25</ID_maker>
<height>166</height>
<レイアウト>NoTitle
400
298
252
253
186
xxscale=1
TEXTAREA;T_AREA0;Text;17;15;335;207;51;51;51;255;255;255;Dialog;12;1;1;1;JTextArea;
BUTTON;BUTTON1;BUTTON1;28;238;140;35;51;51;51;192;192;192;Dialog;12;null;0;0;1;1;1;JButton;
BUTTON;BUTTON2;BUTTON2;178;238;140;35;51;51;51;192;192;192;Dialog;12;null;0;0;1;1;1;JButton;
</レイアウト>
</aobject>
<relation>
<ID>_R1</ID>
<pin1name>_PSTART</pin1name>
<pin2name>_A0(_Pstart)</pin2name>
</relation>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>481</x0>
<y0>28</y0>
<width>129</width>
<height>73</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 終了する
System.exit(0);
</codetext>
</operation>
<relation>
<ID>_R3</ID>
<pin1name>_A0(_PGUIclosed)</pin1name>
<pin2name>_O2</pin2name>
</relation>
<ImgIcon>
<ID>_I4</ID>
<x0>437</x0>
<y0>118</y0>
<width>188</width>
<height>147</height>
<image>ppinppaoaaabkegejegeaabacaaaaabaaabaaaaapplnaadeaaiagagahagafaia
hahahajajaiakamaebnamalalamajbcbdbpaebnbkbpbobnbkbmbmbacecochcac
ccmcdcmbmbichdjcmcadbdedededpbhcjdndidcdmdocddedcdpplnaadebajaja
jamalamaibnanaibcdbcmbbccdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd
cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdppam
aabbiabaoabaebdabaccaacabbbadabbbappemaapbaaaabafababababababaaa
aaaaaaaaaaaaaabacadaeafagahaiajakalappemaaflabaacabadadacaeadafa
faeaeaaaaabanhbacadaaaeabbfacbbcbdbegadbbfbghaccbhebcdbibjbkiadc
ceblbmfbcfbnapecddcgchcijakagbhbibjbkbfcgchcicjckcedfdgdhdidjdkd
deeefegeheiejekedfefffgfhfifjfkfdgegfggghgigjgkgdhehfhghhhihjhkh
dieifigihiiijikicjdjejfjgjhjijjjkjckdkekfkgkhkikjkkkcldlelflglhl
iljlklcmdmemfmgmhmimjmkmcndnenfngnhninjnknbocodoeofogohoiojokobp
cpdpepfpgphpipjpkpppemaapbbaaadabababababababababaaaaaaaaaaaaaba
cadaeafagahaiajakalappemaaflbbaacabacaeaeadaeahafaeaeaaabacahhaa
bacadabbeafabcbdgacbbebfhabgbhdbcccdbiiaebcebjbkblbmjadcddcfapfb
cgchbnkagbecedbofcbphbibjbkbgchcicjckcfdgdhdidjdkddeeefegeheieje
kedfefffgfhfifjfkfdgegfggghgigjgkgdhehfhghhhihjhkhcidieifigihiii
jikicjdjejfjgjhjijjjkjckdkekfkgkhkikjkkkcldlelflglhliljlklcmdmem
fmgmhmimjmkmcndnenfngnhninjnkncodoeofogohoiojokocpdpepfpgphpipjp
kpppknaamadabaaacabbdabbaapdaahpkpicckaikaicckaikaicckaikaicckai
kaicckaikaicckaikaicckaikaicckaikaicnmebaabffeebaabffeebaabffeeb
aabffeebaabffeebaabffeebaabffeebaabffeebaabffeebaabffeebaabffeeb
aabffeebaabffeebaabffeebaabffegcaeakfaeknmhemcjkeafgeoagikdkecoj
fnpmmnippmkelichbmhdnjicidinbadapdmfcfmgjgnbfcbdnnbfleddfadajlid
okccpglbkghbmaacalcnhpmeppaaehdlehhpgmkcelgnkjoihkobfdnjjejjpapd
hgaehbapimgohjcdladdmkolbpobjjagfmggklaedmikdahhcpmkgmbpoogihiga
joklgpfipicpmkifedniocmnbanbdkcblddldjmpkokmfmaaibabiknbbijkhofg
chkjbnipdofebjaihbmcdddnbdadnklingcfkmcpadapmngmampimfpbimhnobgp
gnogpdjhmgekpbdekihkocbiekomboeipclbgpccdemiopebdhliejepfgfhbgfj
agohmjdndpnoofjggdnjmkknemoebjmkklimbacmkdooeaopfdfjpgdopbgbjghl
cahnifcjfdeobaiceiehpmkhkgigmfhkalbfkjcohmiifliobkjfhnmelflldhim
ejidofbdiofaofelbpgkjjkccknnjlglmjmjibincbbakpcojkjejagkehepefjg
ccimbifjbidfimacfpfbfcadkaicckaikaicckaikaicckaikaicckaikaicckai
kaicckaikaicckaikaicckaikaicckaikaiceknoonaiabmjkacmgnmlleoajjkc
knlncmhphlnocnkncbhdbakonhfaffgnfdjneojlnghcceieoofdabaeljbhbcbg
pfcfnhnhkcfinjniolgimicbgfmlenmngglfjijdbgojahpahnpifkeefknggifj
impgmcogfpdanbomllfhamjdkiknmnfjkcpagghokjgjbbpgcafjginngdojfien
ogmpjoibdljljhibmlpjonedobpepbhifdnaglkfgfobcnaioainbjpehpejdhme
ecdjgjecnpigimmdmahoonoidkebaiadbdcnkiicakcamioaenbfaeaafcoeefao
kpcnkmccilfickojfbbjifagbljbpgcmcjkiaacmneddhfapmpnkfhdknfnlnoik
jdlpebmmlebaojdimdkainalfneppmbblfoogbbpmklifjgjabbdccbjenmblhhp
jkfjknccjfifdilnfbhjjkihihofkmfhncbbfmglhkjbmnbpdiflfgndbimpigda
cepmkejlelhhpjdeenemoghmijoginalodamhgkibnelbpegbhmnnpdjifglhjpe
ijablkeciljajcfpcfoabhfpmknghdcfhiifmilmjacppocgfcfcpiibkcdmjkmp
cpndlocfjenopgaglpodjkkaimakagnemifjkpbhgnkjdjdbhemfmkibgaeaabjh
eaobenkobonkokfhpcnaadmanklhbkholcadfcfomiobembacjlclkalenngfpld
ieoonkegcbeedoacoidkinoigmeloeeoinplfejbckikbefeebafbafeebafbafe
ebafbafeebafbafebcacdfmdenecaijhnbhefkaajefeedaddcachojolebjaela
feebhifkaabcidokhgfmkfepgllanafieigenggemononiebaogmhkcihojobjjp
gngmjkikfefkjghjhbdncadgbilaajkdmjghfbemkfonnmhglggdhlchmdnnhedf
bggpicinmhbnemaeaopabeojkglfalcnocknknhebolibdfgeapjigenooailglk
diniemaijdpdjjhmcnbjgebnbienmjdjkokgldlhjemcanjihplbjjoaegggkokh
dopbmeenilamgaclogmoeklabigjpgklmlbjffmcfkhdhddfkehkbdjkamdagnmk
mnidpipellggibemegppaakcnmapomoeminohndhogedmaenaafhdonkibnbniid
mamibpepdkmiaipeodgiaidbebejcpaaekamakeafmfcidmimabinejdmojakpgh
akcakiddmjbfmiepakcaajldemcmiginjiabcjhkpbcndibjfmgcjdnahmebbabj
colghcbnpoaobpgfojnkkbjdbbnngeakajdmmdblhmoelghgchlemahhbbmbhmcd
gimeghnbhedpnkgjennkognoohgmjobjcdjhihacagcbbdnplgniapmopkpgbhnh
akoelenepgjcabjlibmmdgbkpbkmeihanfbkcigbbemjlkdbejidpdoikhgnfcfp
nlhneifdjdfdnfjdmekjmeeklblibfnialoaooaahohcpiomhkhfihlbehmededa
dipodfbmiknenahmljddhbnialnbadoahedofmjaelembndnifonbmikjfdejhmg
lpaojjdedkbamidianfnmmhndangihonkbhnmicbmbjghbnogohehcececniaihf
inbhknllbmdifpobfpkkhhfclkoackkikceiebbffeaaebbffeaaebbffeaadejc
lajbdgdjeldbhmmhhfgjpmnhkkpikbkfkgclekknfgnkmolkgacnjncdkkojbamf
aoegbpojmlhnlkgdiabmjoonmlljgmklgdfllhdonagpapnmbcahplfgfgdcmgih
jbhcdnjdhmkfaaeplolnipedlojbogoopfegbbocgomgehebnnpdbfflfnnccbko
kmbohcbikpcdmjdpjonomfghpjokihljifnlgldneobnfemlbbollmhnileokdai
beaaobjlaobpponfgipjgkjfjoghgmlbicgbialijjkaacamjmmdmjaffabpcndi
cnpicmdicnaiidppaagbnelbonkndemcfibchlgcjhafojfcoffiiepognikighl
lanhkkodnkbhobngdkccldfcdcbadcdchcpbiifblikknmpckimpbhncmjmefefj
cjeiejpkcfdhimnplcdkbdgmbjhemaaejhbdnaikkdbhfpfpmkekoolmlededehf
ojlapjpcjmaabjmjbjondlaijdaadicnfjebacecmagggjjefaelncbdgmhennnm
bcjjodgcnllfnacbehoffgbjiedoalfmpddmbbeiapmomcgeleaanedhhhgbhnof
cdenpcedlojemelgngabcjjfnhbaecngobmpdhnfhcfiecpacklekgjegcfneijf
mddjbijmfmecmablnhbdelnldleabofcecmbhpfmehgdkpehpaignfomeglnojnl
ndlcmiipdidcjniogdkhcjdbljjfffiigpmcbanpnaehglhhdgcfcnnkpoakmhhm
ccaiebhhcoaiacfceenoabjdagoebamdcfejaaaoapnhkcndkegdlegfllbidhed
dabhjbgmhekhkjkmgoncpepehbajabihcaaeldobejaacmjaeabadjkfkbigglbb
aljjbemhobnlkgejlmachljhccjpekafiepfafhafdkfcmkonagfennmjalakcdj
olodijccaiecljjgnjcimaocoekcfkmocllfeeocdbijenaidmjpfnanijimdalo
ojenaijcfajbbegfeafbodhimikiaamifbihcjeflpoibadajpbnkpgfgdnjldjo
kjmmkjedeoelcbbladielhoaekkainbjcmieabmiciahjapoaeiabedfjlgaibch
iamohekemmbpcfnlfjgnpjokjnaimkbkdgilbhaneomidjkfekbainbjgngjcoin
kgkjfdomljpjjjdlacogaooihecpakeamcpkjiabmhmkbkbinbdpppaahnakmimi
dgnkafanhgddiogbbncbmagjlocldepnacpjopnlpfpmhkfkdafclfihfdldhedn
oghnchhoehhaidkcnpiikpmbgfhifioghklgjbmgpgnbekklcldjjmjhlblkbpaj
bhepidmkakopdfmkkkiejcimhpfmiednfdhjkimopooncfglhnafpbedoafiipda
epebconnimignobegagjkjiaacbbmighhkgfikajckkijcaibffeebaabffeebaa
eiegdfiedamidfdliebedckiaaomfnohmnehjmnmhiejocfjjedebccmdipiofpn
kfpkdkofmnmnjobpljgoglhdbiaejjngfooakkheplcgjhlkhjgpjcphdgndekpi
ccecbnejgcgdbcgibejbhablgoilncpbjekdheembgjgekncamclgipnhbncdccb
ibdjhmhcjkjokpanhafkdafjobcojkkokjeikfggljndeomnecieiffnonckilpm
pbnfllbejgfkacimnlcgnkpibejellackfdldbdmgbgicngngphpeanlmonoachc
klcjienklcjjeenakaobmahikiflbldgciiaafagccfamddgkjomenomnplgpebe
anbchcapccblkhdldedfkmkcinmdojnadhojadfnohdmcgbcdipcddnjblbinnnl
lokkcgbahgjdaabamjkhoblcbjdncgkbhopicjcccklelffcdppbmdaihmdckjfd
eaehopgaapjnanelcfocibjefhehmhjmmbfpbmjbaanpddifkpecpfdgbpoklkgk
fblnebakomeihpmbdamploplommnaaaadagkhaaaehokdefmldelpocbjgkfejkg
fbmbljjhifoabkpijbmpjkephbcfpbfblffchnfiooeekmjbebikacepeodofdpi
aodpodiibpjghffekjcnpobbjnlmmjaiemegdijoamfdlnpfjnfcmndbknjcnpmn
jiajkhdibibjkphnhbhkcmkppodiocepimlaocjkgkimcnaeamaogieadohkogie
mpjginocghbaeacfmgajogoemipdmlpdnkbhhndjjeaophcbmkdlfoepndcemebl
daijifapjagpidokhidmkncnlgkppfpobaoiopmnijfomiapchnloekdcphedole
congodnddfdmhhbdlejbhhafieaachaakohadnnkgcjahjceaajidhlajiagahka
alhodcpkcpoklgifelpjfeengallgkjklggeacmfcmldickophfjhgiohjhlohjb
hlelfjnjpkehlegldmklcanokgpachhabednechnchbcgiihjbbfcjlhlefidmeb
jdaabblojonpihckdmanekpkfbemjafhmgcoieecjbeaghpmdgbfcloachgepafb
bibojkeganfhjgmpfdohiehlcgegelbjoihdcaahhaploflcekegkckealbmaada
opohejbahicolijapcelflllainoojmmgamfahpeiknmnemddoafbnacenbcacaa
akbboohapdpifbnkcbpkjjjiaddgagchpadhmfpkhinfnooofdniccjoblgiggei
objamajedodpaknafnbhmdjakcmjcaakdbpodfjnkmagllocahhhocpnpmkijman
ogfafmlicmjhihindimobankoamijjpmonpbomekmaniebnhlihffnepgojddgoc
afkhdanmlgaibeacfpgablhkccpdiieoiccmmmbahciolcngppaagnodlhobjcai
cncdbdkobhaflgaffdhngieekkjeiggkmfbbioibgggkhapjgmhkchoaliaheieg
caieobipbkoghaffdgahhjghbfmenjjbbelkfdbibojakbnecagadgojaklhchlg
ohglpedegdflgbkiicgkbafeebafbaiejgjgbdomigbaigckkiaaciheifbnnjii
kaakcjpeaabagnijnidbopgpndmkiaeakddoajnhfmbemklnfdoojinhmghkgogj
hbbeomjdackigoodlbnnjjmpcdgjfgblncminidamambnombdadjepakoapngllh
hnbbnkpbelipknjnifbpkgbihidodjnfglchkdopfdfmnfaimhpgjhojanhmpign
gkdeoifogjjbnjoidhdpgffdbmhcfmglblojcigbhmaobenkflaaileahhmkndbe
gjpbkbifciahofgcdapnbjjfiojfnklkmfokpjekpmehdoiajkdipjoffnlebooj
fjgpnhccngnedpgoonjlhcndahpafblecomahljehklnifmkeenkmnakbhpneakb
iobkkdojnjbgfaflnjaikckkoabeibjmebacpgdedkaaaoapbhifolicbnppaahl
mdpdfdgkcpokiabjoabhimeogfdhmfipnkjmlnmgablhbjoehipebpnboogfgpmp
lnhmfnciaachndjciipkbonhohonneoaiafdjacioflfcojdaajdecdjpiapkkgl
ipbnolgcnpnjhbmgkdeinhlhcbbapdjjkkkfoibijgaopocbkflomooblgjgmnfm
ahjabojaamgfhmhnjpgnpmniefbmgkjnkogpkomaglcjlkjpdiokcniapdbkgkaj
iimhhfdkpefgihmdffdkgeofopfnphphoghkcaihklalodhkilfpjokfkjobhldg
conbndfdlcgckmmjjidoaccihkildchndjhnpkkglnhlejmfkfdeaddmhaaejend
cpgalgajbphagigodljlkdppaahidhpgnhjadpgcglpieikldaikbgdnidionhkl
anamlmkllgphhaihblcgjjefigkleoojlfbchacgblmbegehaamjoikglenjhaff
apmgpmnhakbljlcndpgoleggmmadlimjblbfjmmdcgelnofdngpbhmkbmgkjnhmm
lenaoodmijecgmiplnmbabnhbehokifmapekkfnlmlhpkbfcooaljoiklnfofnmf
hjcbbchcpgeaaoeobhcejbphffkbphniepbalhfkoenafpdljaanajdelcociemf
obhemdlhfnnopahfpeabiojkehdkngemaemcimbenalldaacnpnadgkoohabhnoc
fghdkfehnodggheiadbjpamabeomiaibimhcnkdhhfledopahakolinkmnkfjbno
ibcgioemmncboehddgbkfpfpjkigfbpigefgaoppaaoegmjlpehbgeednooelmlf
aaaiifdcdgilgohlbkmlllmlfllelmlfchgncpaikmbeaomaahndkkojnljgocdk
bollejilmeiaajcloimlaokjpebgdklcdmclijfljdajpjfpdkihhoblokiimiid
nbaeidfbimighdcaneoegbhapbllffhmjoopfdinilemilpbonopejacgggankcd
kfihcngmjgoadaooaagnepeigbmcmlgijbgajlpajbnaopacblaeieacdjhmcngl
eplbdnfhcgbgejdiecjfjbhccjickbgeajkciajmjbhcfkoekilbmejlibmogmdl
pcmffmmdidecfgainplgcgpcdjlejlcgcdiadcbpccbigbmhabjeapenecojmopd
dfnffcdhofgaceojkbdiahkoifpilpiohnlelfhecgobcobnfeebemebbffeaaeb
bffeaaebbfiejnhmnbigaaagiabmjooffhaocgncmdlfconendpicaafkmhkjkao
egopggnlnajihadahlgcblngmhndhgpgpkpenkhmgolaljeikaaoglhfcpkpdgcp
aknaalchdddimfffjojadolgclihgaiappaankghakciddgmldhfdbcocfglojlc
blbhminnjkcendbhdfbcnklmblbopnkcchbaoklfemoodgbpojjiocadbabdpjjk
dcmplcphgekllfbkahaiabbpkmbeobcijlpkobelajncnlmmdeehajmenkhmmfca
jamkojfinjocllkbkoodpccnmcjikmcmkbdeoimnbanfpgnnbabeiobdjpkadppp
aamakobnlgojecelmljicleemamboblkimfmkhbbafchdhhnanfnnceiemmnnhjg
pedchaecobflcflfhkjiiiifjbhimeaijhkknojknfbafjclhcmjchbhaeifohnk
fklflgkfmggnhbaielcfaioaidacoieipbkfcomgkjcpjahcapgeclfodkilmili
lccnjdajchaendcdaenblkgldlnlkljlfjcjlgbfcboahhegkjjkpkiobjlogjod
gfpoccooddkljaamjpdkogjjobhmgckjbbljaolhhmlpebkpnednogkldlajakec
fpbecmpjemhfgfldaobiojjdpkgcnfheffaphfmiacljlfelpchkkmojlfonfmgj
kapeghjomipjnkkhfkflmmhbahfcfmmllkecmedajcdfojnagbalomhhlfapnhoj
jkchhjgnpmfcgjfkdajacckjgbknladaajlblpambjimoklefmhbklfnejajpnkg
gbaaofjfnblofhmgfkcfafkdgajmecoiddoifjkohiajifdgdcbjkjhmilmlkllj
mhdfjgbpneobbhnilpbinppdkeabifdicmonocdnmdhffkhejhbgahladopagbae
fgdcokbejonmogkmjkmdnembikclgedmmamkkdoigiilgiapmijgkkokhkdkceed
loojhdekdgkaammbcpfaghbjedclccjadbnamngpomkdopehflfboikacodmgfap
edpiodljgokokdedoijfnomnogihbajdbcienolnfbjlngdhjgokighlcbinoecl
jidgbmmiabjfoajdeakhkijomijhcemidajcibacmieohfdbikipgclhnfgenfhe
dmhhggkmjgoaeghlpmooijfpjmepjdedededomdcdmbidjlfgdnoaibpkmhfnbbp
kjepjadhgpmioajeahodfjamihignehcniocaojlfflfillfcdeihceaeodpmjka
epegpipmllfhhoaagapdfilcfbngoadafmdnbkbpmladciiapiidkpbjcfjghjgg
dndfdfmjmchikjkmgneohdopecenpghjekcdfaealhkhefnmgcdgjfbiiobajbjk
kbinlofdhgpbogfldapbddcabdlfhbcnljpfnamfiehagcaeplpjfblmnfkmogfd
nbidjkidkajlnkpoebldgcciajhkgcjefnainbgmgejgnkjehgffaklflanfobon
mdagnojmmpjefdikkhefahaaalgmaagmebphkcajepnkgjgmmgkficckijfaebbf
aefaebbfaefabcjbpoleiegekhafgahcjifljaelpmoaonnnlnmjlembeglkbbcj
padgepmkelbpncfmpkdmlmnhogeohendjneljfibbccmdlbblnlncckllhijbcll
glgjjaajedcfjcgfdfankibomlohglklhfeingedleeeindllembadgmdkidafge
heeoigdafldnogfmgpljngghkkebneibahakeomamignhfjiepgkolallpnemlfe
pongbmigbhhnhciknkndcdmnjfjoghgjhmmkbhkcdpbmaophfpkkjombehomjcfd
ahhekjipdedfjifplhijekldhcegkabpojoaopfphidopkebifjfipdlneanegmf
jmddpcmjlnalblgiacichcpndpdobjdihfodacdkipdgfmkppeiincajlijgjeoi
foafahpenfemoaflgophjbepgnobfcelhnbofglhnegfmnkdajjelnccaijboekd
mbfbpdpjfkggdkhhggnfepjlfldopjablfiplbemieoncbenaogjcpafgfcofaba
gnccbdoihedhojnjkgekojacipbmmkeepkogocbknigiaobcjidfacoijljdpdnk
hgmppaapfpgklldojffcoliilenafijlnjbfgibeajallamjkpegbjoolcjogpln
mbmginafaehcaknbklgfjifcbkkddleolcpjjbipkplajonggghnfpfdilminoeh
hbeaagnphafbpbmpgcodmddgdiconadfppaacapaipfnnokggnlhplebloklcini
blligjnbidmddanplcebomdeaaebaooinedefjnidkoekoholebkihpocoebkdel
gbgnkfdjonmnieoainhckabohimhcjhadppkfgcliphjgppbgcdnfmkpefkpnamm
akmgnjoplhjhldegidlphkaaaphehoofddbolpjgehpldbigkjaijpdkgjpemcmi
ehompdcmolijfnellhnalhoelgnakegnldlijgeffgmbcaddinoiaooijlgknjbn
dbnijjmmiplhgmkbhbemlanipfhegbgoignklblgjbadgffhecnikmbeomjajbob
emefklfkompjapdndmhnkhljjjekclhfbangdkgmaoifaobadjandbpfkdjgkpob
klodacpfjoobfbhdbfmnlnmnlmkbedoghfmgkgeocaemghamnblglehmkppdoiep
lhlgfgbpndmnhpgbokeogecochbpgikodhamaahpjbjblokigheekgkhhikiopjc
nilekecldlapmfpifhlkofgkdoeajejlbkeaoalbmbcakdfhmkfbbnopddpmkgjb
oggblnpddmjlhhkhhphafbonmpjcapnkhjhimhpbdgahalhegplpileidlpeaiif
hoajakoiampbbppkaebgiiinoiakmbkhepbkechbhgimkdhikimpphhkkgdhinmf
lokpcjnneeahiohlhckanhaiidnpkcplmphcobndofolbcfnilppaahkdjopfddk
lkjodppnihhkmfenbeldfadnbiojdhoiflkikbafinbdcjilkofalekjkfkbkkhh
hfgdmcodgcmhbegiehoindofkobopmccjdefjdbgpnmieghnkkiphcdonfficpgk
pjcoajehlpfpjpkbeomieehmbnllbklohnpimhhnhjigpljgcnmdleekkgfedehm
jcbbaiheeaobflphdoofnilggkihojlalkafiihladjkigenagdimicjndoineef
nfbnmjdkdggkglbpoghjekmhbfijpmbccjlbgobbjicgaggfadpekmoekdciiefb
jokhgkdkgblibknnkodlkmdciakaooogddojdoeppkhjmhbcckpmcopbebjoknmf
jbnaedlmjlaiidffhaeceoehibnpbhpfgennkffecopobbokjiecmgkpggojbkhc
aofihhibamodmlmbopfdcdnfhigbahajkokjjebnongfolfekjchnfbimojepohf
mckamnjobfkladehmgaiamcinakhllipdcdmcnlniipboemijkmfagoifnbmiphj
amdjipkggffnehdaliecfafkdlgmaeobonjjikbhfgjknciielcfhnkndlmibhca
oiohfjhnkgkkechjpecfodcpcihadomfhlbiibofkfpelkfalcnbgmefdainoiia
hmenpbkmkllldiplpfbncogmbahiidkpbbnejanjakibaadghkebbpnenbjccmfl
lfibfpkaicckijcmkiicakcakiicakcakiicakgahlnnhcndlkhccfdldnegihpk
flicconmiijgdccjoeeaagaijafdokgeheipgnofhlhknipfeenlalhcigilfidk
homnobelaalmnndhoednnknkokogogffbgilagblidbmmapedcibnkeebcajfbac
jkbmhagnilnmladmdjnfipgdnbdcemgdlmolgdlcobdncjakegcajaiobhnfngel
lefaelafokkeckeilboijedabidjaembpkoiemcdnmdklfpeibighgjlkcjpjbdo
fbimihdjdmgpgjalonipphffcfkpnebohdgbdjdbnmllaagaanpedaojaeooddnf
pjiiankoobacdnnkoieaghhkpmejpjdeamhmcolchdgfgipapbofmnjgiglflpcd
jnkenmkdcbnkgofhaaobilaoepikkocfmddkbofnklippacoegjenhldncnifpdl
feeamoadclcbefdodienbbkikpbecinmjbmfcimkpdceidfmihmiohkbkbnkokbk
boniafclknknimpkbgohcdofhaaadodcjkhaodflanioopodllapmmjickipgojb
acihapajkokkfiakjjjhknifminoecoaopepdnilfdngbfbmkokfgajlhgoklggh
nmhkiegpchmmfgficmeoabgepacpoklgmoahdllangaimfjkknbnbjdpcahefklh
hgnifdnfkgppaalehlenmhlbikjnmngmpllocomfjdfgjdacmiegdigmkdfhnmjh
ehkhjikijopohnaeililenhohcjdfiaimaideamjdgfbmjdofnlbdfojgjgggipj
fkjjmpbebonngdddjjfnkjhfpijkkadkpkgofelhnnnnnmolpjcghphfdhecgdap
bcjgecggamafhaecnpaapkicapflfjhkhiocoomdlfdolclplelfjpafhmmaggaf
mdfldcfjlabmecbikianllnfpecoeiloeggnhnkdphfibndinemcbnjpdhofalac
kkikidkcnljmdcmjahkcdkckccogmohgcmlchahgbppajihgglihhngfoljhngkj
fejpkjcbfmbibmhoeaojndbhfmfhofndapcpihdkbmkjoiljhlcdelofeghcjkcb
jcmnmlkpcbbdponffdflmlgfglbnlncmlldgjicekcoiadaaamjkiaeadgidnddh
ppaalockkpmndigiipffjkppaajgipgbcmjbibnkfnoinghgnioinbjbjaaaadko
oajdbmhognllcmbedfcijddonkjhgmllbonpdfdmopgcdjfmojhbaimfjjefgcbk
gkaahakngaphgnjcimdmbilohnjpmoioobmdapopmlcmicpgodpmkhhkpahgghmd
jkejaombfboglhoiheeadnolhldaimocelpgabjfihdjmfaijgddnmjgedpmecch
kceombhngdbcpigcgcnfdlgmcemlegchjahmeahfanohfdobhckdhhknmlncdhng
goikgciefgmfpoibhohahnnblcdmeofnhnpecjlelnnljaeoengcageghhcelill
gkjemdbakjjigeooioonmjepdlfdehnocdncpegmobpbbnlndimbpglcciaedcib
mbenphbbmhpkbbipkicplaibkbhocfiljahglgibmbfinipiijondmdipmflneck
lgkbohpidhbhhhpbjjokipcmmopakconmmgbiebimdcadmaihajbhpfmfhohnbap
fjhphinkooflllindollbpncgpbpabeafjflgfecmohapleceolpcojkigiidjll
anemapohdjpgaonngbifmocionihoinoopmmnfaelcabecoindaajdjdkoohaidg
fnedlhibmlndekdengnihpocdaomeoeoeleicaempjikkkobnaapffhkgidglhhk
hgpjbfilfcfogjgenccioeiedaalfbjlikejnafidabhkokhcnmgijlkllbbnhgl
chchibaalhkablpgnhgoalciaeoaaodhbjajkgiimbkamhacjhiojhimaodgdnnl
ggekoomgcomkahgnhfjofkiplpifbnhclnfbelhkomflbeaicdamegbafpjmmplg
ekklnmglllgkoehooofeelpjdhmigncgihkhlmemolicoljljllihbgfakmkdbjk
acjkamgmohfjfanpmngkhmlphdifggliffhlahdgehmbjeibjdhapibgnmkfpedh
jbpgdgdnbmhakjfhegigkbemkbommjhjabbjajadlopjklchgepdkehnnkgfgkbg
feebdfaackkiicaackkiicaackkiicbapakemmfnfllendccimnnpfjefocmnfdg
hcmnmjbaipkjdnhcdafdfmmhmenappaaiagjdhkmnfaejngpoaoaphkaaamoafjc
afameobjmjojephklcjbhmmmamahkdegengbcdjimgnceoimdmeemkbdooddgfil
ccaiidjjmpjciklokdemhjklnjkpekldmelgmakceffijmgmoejhfdeninjggpkp
ngkklnkfgmbbeboheckppjkfllkipakedejlemigeohdmimpaekikkbgnnjbajbb
cjoeoaadnhlcgfcpknlaimobonihdgkjgblombiijbpeenoblcpciegapngmkpmo
cdfgohcncfiebiopacbaeapibknkglibechheagncdbnljcegnidjlolibipofje
mialjfleggmochkfcnbocoeclhaodopkhlebipollbiokiamfdgmpkccpiaonhge
cfhkfpjonfhhjdaodfajnbendjfgilokgiofdjaopnoajodjjinoellibgidppaa
gjclcaoonhcpjejdokbkaalaaiaadaaiaaaabaffbgeabbfmlfofhbkjjgmngmje
oambkipdkbpgndkpcfhondddoecmilmibahadncnblflpioaioknknngeneplmle
mkmadaecaealkpmbegohmbgnandafdebdkaamibfbhdkeidjboonnilbdblgbhkk
kngcbdfolnkgcdgmakkhaapafbmemhmcapdmmefcllgicpepdicjocokonaephca
jhokoobediajnadednmdcflledbfgeohjjckjgkledcgncgdgmoncnadieemicha
oghojknplggfdbmiahjaameopikhhikiojeceacbppaakcoaifdjaifagcineocj
kfdbjmhhnamkcelfjjgfadoehbhcjbndaifpmkjonfhgnjjjnfifhoacoailokga
hpemkdhdkimpmfgphnhbnofboiojbemiookcobafiepdbfmffpgldkjkhmdolkji
pjcfffblcbooeaolebhkakndipfbkgjcakmingjklonhahbdenepfpikfhncgena
lblegjopeoaiffjejidhcinmoiciblfobpglnjlcjeobpimaknfianaaeboicdhf
idfpmdohgkjkihchomlpfmofacgjdpemabijgbangikiimadkcpamepjohmlefik
lkinfclcncoedlbmgpcnhecklijlalgcnldhldjcibkcpabeipmagffkophjjgjk
eejmbhcbglgehdagegpankmfefiabkefagaaaaaadgebkpjnlcdcjjhllhijkjpa
gimgmdldgpbjageclachbojnnfclbadadaobmjgfnoebdfaackkiicaackkiicaa
ckkiicaackkiicaaoklhgmghhadfapfkmpicddicmimldgnpbkimokgijkkgicpf
penjdfjkcehaeoigdalbamhnpnknodbbaljjoimekgcgpgkkapphfjehakeohfbb
apbmfnmlacjimjkdpmocaoldcbhmpilonfklmiaaddaelafeebjjakoaldgmjibh
gknlojnligfionfnmichakpbjhlbjbhcjokihncigopnafeloicpfndmfmaceafb
jmjbhmcendjlnkldgjningeojgiainebgjimimhmcnmlchpmgfolapdhjmpkkcnm
bhckmfmmdglgeghokmeompdmindpcndlkjfefmdlencemjajjdopejfpmieombff
nhpbkfdnfhlpbgodpjchcjniakclgaeaoknhaeeokhgfakaeibmiagpikhoioffm
dpoddkdgmeoafppcfeecojdiepakaaldafbhpnecdfeehldhjjljgmjcfbbpeikn
iebggfbcfkacaocfnnipomgnecgacnhbilacegaiekcgklndblaociiibefpcafi
iehnlddgbeepbfmekakjofhkgblkighcmifbndkaajbehabplkmkbahamdancadi
amdaiobdgeaeckamffcjddomkccaeigheogfdiicogijgcjkkgkboipjfkceggnl
jlieejcaahmmgabhjocfanenciidlamjbiamloojppaakeaomddfcojmfhjbeobn
edheodkfnbhlhddcakeocihajkmkpbabihpmcfbpgglpneedjmfggkcjffeoecgi
fhmbcaiajoafjocnjkdngnibaacamdcibhlmobhondnehccgfjhpggmegpgjablo
bdjnmlkaimkoaahcbkndpmgnelpbjeelbbjpfgfbajoagaidgockenedjhflnfbf
gbenbjeciaecimookddofpnkfdldcogedcmagaecibeobbbmdkbgjkddlkaplmkf
lnjgalflflclcekoekgbmbdbojddgnpkihjejnmpbflkoomdeidepmmhhnbcjgih
ngdkifcpghgjdapknlehknnfcnjgopddhgdgcpoffmmbigpebpgdjaidlkgieooe
noobaijcjgakdiopganjkjenemicckkigaebbffeaaebbffeaaebbffeaaebbffe
aabcidikjnbenihimfdimpkkceddhebeaeobnhapinijgghnnkcdddfbjoamodei
egopgknleamboipnfijhnmnlflhphiolcciebnknleocpjlkgdmekiekeicgddom
kddgibgonlbbiadcacdjfpnoaeoafdhicopcebjgopkbgljfpkpjbadlflhedfki
nnpkkdbpmpgfhlkfopjjpgjhabigkjhcfcblcjgahfideknnajfcghbfhjgmpjap
njimknoehimbjmkbajdnmfbpaibaeapkcokcoklkbcddfcmiianaeldafciaimnc
omdhmpkoebbnakanmidpipkhopleehjlbmajfbaaegehnpnacfnfgdhpgopdknke
emcjjedohcndlggbookgfjflacnhkdnemdjejhekmfolhjahadmmjmcmildaidac
hnbfdkihpmofdnehpihlihgjanndijamjfbocfjenbcdkhbamfflomkjpmocpjma
hpnojdkjbobfdkaaabbepmnllheeghgddonelehdfiobbaibcemiakjkibioheke
ilgkjcjeghcdehpjibiokncmgigijoabbjajnbaifdhlmbgncpnhjmbnpimgadok
pccfipjfbolkiphmbjeagncbgamnpklgjcaalhfaecokndaadaaaagagbhafbeap
cmlhadfapkkifhicaindkadcpaenkhdndlfbbniofabajbnanecgkicdpfaafhnm
bhleaonhngmbfbbpnjipbfmpcaonmdphkdehojdaenoochocmhnfikimhiclemli
kpdpkepmalgcllnjmfhjgpbhdbolkobcoifmamokhhffiphibonobcmfnmbhmlik
omdceokjomhjboodbjahimogfhnagffhibmcpiahaabhiokeaiheaokgfppjdmpa
iainimegneicieemfhojjgfchmdnbhidgkckhmihmjfcpnfmnldflfnjaoapepbd
hmobiepcadldhjglbhkipgfigblgpnhbeeolccolnhbekfgcamjlacakidmbbami
hffklmbonagacmgmoolfnekciafkbdbdkmocjaacmbhfcjjmngphhgjhnaanelbg
iaoeleciilhcendocnbkgkojdknendabhlbpdejgokpfiflniepkebpgeiifimkn
bandaaikepgmigpcofcahkgoeohgfllcmcdndlelghbncenojmahjnhmjoafnicd
epoedllielhfofihfdncgkkmiopglnofolfjokjfmfkdcohdbjdgmhoiiaecdadf
logppadkihojigfkhamohhekmmcjbjficfpennkphnddmhniecbcocpkekcdgbnp
anaeodhppghnfbioohnccljhopkbjfhmjhdcnckmmklfekdcgonagmkgcjklbcll
ddjjadjdeanghcmddiinoigmflnkbchjbfaleikcbjnhagonfgjlaccjhmjbdajo
efcoapgidlncekdddekkbkjehbkcibaaaeppaagcmklfippdpfciehilneofedfh
eofbgmadkhhplojeldcdlnklpcknmhifdnaoijjfkogldplfongeeechpoamlbkl
eolhaghnakifofdmikjfhmfhoglnckajfgoedhoflfjhaonogcjnocfpnfkfjook
fdjaabcikamigbaadgplkfoomldbhbdjbonbndbhmibkidkpcjlgiflljjjeeceh
ehbffebfbcfeebafbafeebafbafeebafbafeebafbafeebafdaahkdohehilhmcn
oiepelaanjlkciipniekmfmfjnlfkggfbhgjilflmgabjdcmdbcjbhpnakokkpij
kmjbiebgbjoigidjhfanjginapeklllfakeecljbebpaklbeofjjnmganfldghdn
bapmoelfpklonfpjemngpajeopkmkbejpigplhiijebdeibcdedjenabkdkjdpni
kdnhddbfhlihfodlkldddobaejabhaolfefgicelkfhjdhhkapgpojfdpicblfde
kgfidcelbgbhdcdbajgeieamlognnlmiagaghfhjmhhdjlilalflilcllgjcojje
egodnfommniknbejpjognekhehbgemlggoablfmbaobhkjilnciadjolemelejel
ffiimecfbnfeaaibekfmncebaacnbaibdcacgnghflfkoklkgknlbkagbiiijdln
mjcgeliknojeekcmhodjihdlcepieeiedccbgajedpilbacibhmfeokfheojdage
lajcaofgblkigpnhlfaeblgnkfgcllgedggbceajbhgnilpdibihjdehloidpfde
gljljhjbomapeihlpbkejmfmpnceenllmjcljobhgcflgkemkmjffmcmblafdhan
oiflmoofccbnhnlfbnfkdlmcefojefoijdnblcdbcmofobdncgnifdbadgfhnaon
anibnfhgachpacobfnjnbbfmmfgfkjjinlpefbkigogojnegbljlghcigoanejfh
ecmiepbmeabpcffkmpinpbjomdkhooikmloghjkfhkkihgbjmgfklglbgblnddce
ilecaombpjomjlieooedlpnlkfknimljljlfjepboacpfgghoimjkjgifledpede
hklljlgjfpaoblbionjhojaekaichcoikhkjgpnaobenjnjggdgnmmllmebhaige
dhdiefmlndbkjokjgfljkaiffacjmdfgggidfcbipokjmnfbekffmieoooncebbf
efiebffeebaabffeebaabffeebaabffeebaabffegcheikakdapdgdddlememnll
pimednioaaekedfljbocfcaaicjnoineaadedhfglgghbiogngdojjbeimoaakdo
dpgkhefkincmbdnbekkandcabahfigekeaadbmebjaclecefmfhokaadkcmfdgfk
ncebeccabfieoegakgfkfkfpnkmpodngfkemddfmmjpgjidmocohckijjfoonffm
ibkkpjigpinmbbjhlimlcibmchcdaelomphmhokecpckcdlkkdcihmkajabmhcpk
epedpafjgjjkkcmjhbafmeiffeedchmgcgniblbikndmikidionhkkonheikakne
edkdkijcmikmdkmcaeobhoebaamobfkikficbabdnmfdoibahchlmfdfjopakeaa
copkelnikflnifnglffejnmdhfegflnmnldmbgchaaaabipikggoflpbjbighngd
hdajkokdehbfomebakiajjlmmamidaoijhpkdehnmghkenedlflilgjfeocihgmf
lcemaeagdhomlcljappnbinonknkccnhkfjnfgjljijmbfgclbmbapihndnedekf
ejojgipmdiafhkfimkdicacdbifjiedcaaepaohnhejfblpfjfljgkclkiihodbn
kbfoakhflbfniheopkafjdpbnjigfnnceidnlflifeebdfabbffeebaabffeebaa
bffeebaabffeebbakaepgoilnfpgbmknomnkmkpmlhlgcolkllieeglnglnndano
meicmbbgameocikhhhoknnommndlehfbhoofebfnflpffbihkkdpffhbcjfeekln
djeagfdkekmjhhnbpiachopkidionafeoehfigolhkgfgbfdccfkcfnafcfbnkfn
hpjnlcfphbopfbpniiliphimnophppaabjpdipfohhgljgfcflmiadlmddmebpgm
fbekbglmajkdpjpkkfkloakddnlfbkbmckadmighccnkjhgnclnjelmocjmpbjdm
ihlhemkhgidldonhkghnkhppaahgjfpincdfigimmhfilofphfokpkbfjgdnoeil
gdfifaannimlckppaahhghidpmglbhmfhaaieoiemdjgcoikfkbcfgcjaokljkko
efmdmjppaadodmdpfbcnjgohkcpihfbpgfbkdkbmkgkflbfejpokfjcpfkilfabh
oioachkdppaajaikeinlnnofokgoipkincefhpdcooekljlphjkogfappajiocmd
hedklegpconanoelfkfcdojbhafjidnobmhmfnneggkoojkdgnckfnocelnodddm
hlhbpamagiddddoglnbjpnaadghapkonfblfcmlgocljbpddemkhegihjapcpoap
ldchibphiodmofgjceoiakcfhieddkolfmgfgpehlchdkmekkjnelcnlocdjiojh
ekkjhnemdjibhjlpcadnigjbambgmjnhmdkmgnappknihjemhbddjghlgjpidgjk
emcdcgjddmbamibjajaddhinopmlhnpfncemafgajhecfefejbfciiaahfgjjohp
gfkphnfmiopoelflpnlgnglbjafgpekleolcocphgdafndghbpbjnmncdgfcpoof
goejnpojccmjjlakdkkmljnepfoohhggplmimpfgikjgnephfggbnichbcifaphl
dkahmigbofjllnoijanbkphnjcbopogblmbopomafcmjkpnccokniejfojbphdgc
nonpkamjbamjdgeahdogflenmpcfllcjlfnbpdgeeioplpafilfflnkoakmihgdn
golcjpefopndfloidmboemglblbggffdciechapkoaaiohciejjpjlfofcncbjnl
hajecfeifgfapoodpogkhjidnfgacmoppcibjflinecfddchmkfcfieomcmegnmo
lacbihgmiehcdioidhpmaahnhebpgeooknonhooeilcinockfnnglnehlejbjmin
khgjepjoipcpndieomfndcopemblappgiidkcfnkmbbdheldoafkghdipilpeojm
jpfnppaanbmnjoplkngopnoebljfmpdehhibiiklppaalmeddcpkgknohkpkafjd
ecbammmhedeogjhodecjnjkhdhkgkonmehiomopoeochbpbmdhpgjgbkndoilkdh
ebkpnlempjigkjjbjblfldbngaahjhknjekokhdjingngofkhklgodjbbppchidk
djemhbhpjgjhehkkkmcpiliboaaicihdmbcilbhaodfjlmjooeopogbilbgdeekf
dkkcpioecgmdohmdopfdenlggjopdckdgmhjikihdimogjgnghhbkccofojamdgb
dfancbchghoiinjbeoendmboolhldnephdemfehklmihjnhkklhfkhelnkfkepdn
dginpeaangpkidiphmadnfkagmmbmpnmdhmlpackhdiphnakfebhmbgnjocdilbd
klgigfhaciialoofnecopeldhmonockbogmjkogngnbdoljpblfjonphijimbfpp
aanhfhnkkoplchbnnnojocpfjekdjoencnlcgfpmhfdnpocglldnnooocgjdjedg
hfdfkoianmfgihojpnnfkldndgpfpaonfelgfhgocipoaceaebbmimjbgfhofclh
ghokpfboppaaiiglemmhddkkggnagemmijbnegdochoiamepecoandampmmdhndk
ojdbfofmmfechkdamafejdafmkoopkhgfhfnfddnencpnachppaagmojmboihden
mlheiajhidoiibbkgfhhdcokhahjdnbpepkpffdapkihknfccdoflojgeggdjhlj
oggjfcdjogahpagjiklfjkdabjkjmnbgfbpngmjicjmpgiiebcpfdllcehmnfbpe
opmmhoapgpnkpldbipkbpbbbkoghhlblmmncfkpecjgfjnpjfdbddnjbmbgppmpl
alokhhjakmooncjocnhookblebjgikcemkcbgohfchclcnlpecplbolmalgdllhh
aoigkjlnafglljhfehcfhlidnplnnaameobgphllnoopfddmlokphpmimhodjmob
bknkjoopdhnilmcbgcgodcidomgdehpmcpgppkeeapolcimhhdfkocmjhlchmnkk
ldcddlaigdeohoaaoannphcblgcibplenbdbcokalgkhfjmjhlkfehbjfinicidi
foglmnaghgileodpnpdomnfffnnebendjjpmcifjhdofaffocfoinkigoklpfcnh
oidhdmhhofccgnmlnfbhhhgknflnnioeifddeccnocebakinbdninlihofnnlkhn
mdbdpgcoiecfdoopcblblkjhmnfjbdibgaadjdimpdicgppkmdapggbkpgphbpgd
gogpkmenlnlnnedbmhfiaeacbgcdihdogjjbpdkfgpofonelapbpnedhoffohgfb
kfikjkcpicgkhjfefhfochkgicckklpaebicckkiaaicckkiaaicckkiaaicckki
aapkccpgibpdehbpkidplipkaakokngfdkfdhpfifhpgcljhnkgjhlajmhakdpmo
bembapiadognnlhbpmmnbhglekacngnmmejkjkncledmcgnngdjpobpiehfndnlp
pmednhlacoffimcphohnnobfpadfibbmpbmegepalonfhihiedlnnohcleoihnaf
pllhjodigbddidjdeohojbecdjoionfnglgaidebapbhkeedjpnfdnednkkifjfe
kmcocjcpjeohhenjihljbmkffigpelknomjiihglhjchpiocnhemaidmibimacob
bhbidnaliofepgihdfcmanihlglelgefphgdcodfoljhiibmghppaabajoopfddn
hokijgmdehbkcfkemfimdhfmffmjfbgdepgfmpgdbdnkmphdbgpgcolfnjghadpp
aamgojpdncjmpghjibbfdnopaajcmdjeeknflokfjedlelenfkalhjihpgkdmcho
dahleaobohflcloehbndnmdcmamhnnkojlffmkfgnohcfhgdfplfmhpihdpiboef
hpoioapkcolblmelnbgibempjnkjllndlbdmknhhhinomdnjkdmnccojjfpimcho
enojfppkmpjdedcmlaoaflkaaboijkkbenfmffmkmkonnjglpfbidmkgodmaenfh
pehbpekklenhmbgfjokgbnjfclegmlogefniemagoalabdmbkpkhgfmcopeabpoe
hkdhoapjlklgbhmnjgbhiepbjhpmkjaepohpkhaobjlmmbhgmdhnkkooaofdbadl
fmoaejpfmmcnibkmankegnbnjfjghlbkiejogncllfhmeagjbpmdbhdgcgcdcihb
nbadldcgjlpfhbjfloalonknoniplhpehlilijemapomcnkcgalaajhfgoecmbnh
oohiapokpnlonmoainjbgkbofhfgbkfimceedkfdfcpkdjinbpipodkblopbinkb
lhfmfhnaolfkmapojdjfoacedjhlmbaichgefmmokhpjoeogofihldgmklkofkok
blnklffdakahoefneodgolcaocphdbkifphdjbcejgafopmocfgpbdkehmlfmmlc
lmonghnlnnelkfpfblgmihlkdmkjgmhkhglgbgdkpnfcnkijcajcencijameoaei
chkhnhonbapmgcelmpddboljpbnajflilhffggbjoljgfgpgmlhohninkhpaopnl
eheccfbbdikjfkeanjomhfofekdkjmlhpcpmencomhnfaoihmhdeidnlelljmokl
kjbaclbgajlbnbbahmhkikeolhcoklneobomgolmkeciknoooolejjdkaepkddai
lapjdmppaahnkojegoelpioafaociennjebegeoeleikhkkfekdkibjennncmloi
lcfmonjaobccjlliafflkllgnekebbfifjdhgidaajoaoabejmaooijjndkgoinj
dkmpbekigpjnpgfdllpeblhmkcjbeficmcioiaimpmgjoaieimloofaipigoocjg
jnbmekjolknnfhfdifkkmlolomgfghknkogpepebgpokdffmanipkjehgldiaelp
idhfnnholmadhahgneilomphknmolhhfkfpafbofheiamnkajllclkibcnejbked
cnoennompecmobnakdebdnpfofmnnppkcfilhmljocadebphehohdcepmbkanobd
oijghakehhafjccekckcimlcffnjjfdhnmnnoickkikcmicmkiicakcakiicakpa
ppjn</image>
</ImgIcon>
</xobject>
