<?xml version="1.0" encoding="Shift_JIS" ?>
<!-- なんちゃってXML version 0.1( ObjectEditor専用 ) -->
<xobject>
<ID>project</ID>
<x0>0</x0>
<y0>0</y0>
<width>200</width>
<height>100</height>
<ID_maker>2</ID_maker>
<objectname>GUIDesigner</objectname>
<description>新規のアプリケーション</description>
<codeclip>
<ID>_CSTART</ID>
<x0>10</x0>
<y0>10</y0>
<width>80</width>
<height>24</height>
<codetext> String[] ARGS;
</codetext>
</codeclip>
<pin>
<ID>_PSTART</ID>
<x0>10</x0>
<y0>40</y0>
<width>55</width>
<height>24</height>
<text>Start()</text>
<px>50</px>
<py>50</py>
</pin>
<xobject>
<ID>_X0</ID>
<x0>203</x0>
<y0>75</y0>
<width>148</width>
<height>60</height>
<ID_maker>146</ID_maker>
<objectname>GUIDesigner11</objectname>
<description>ウィンドウにGUIコンポーネントを貼り付けてレイアウトを決めるためのツール
レイアウトが決まったらObjectEditor用のファイルを出力する

主要な2つの部分からなる
･ EditWindow   コンポーネントのレイアウトを編集する
   貼り付けたコンポーネントの位置や大きさをマウスで変える

･ MainWindow
  コンポーネントをEditWindに貼り付けたり、ファイルの作成をするボタンを持つ

 コンポーネントの種類が表示してあるボタンをクリックするとプロパティウィンドウが開き、
 さらにEditWindowをクリックするとクリックしたところにコンポーネントが貼り付けられる

 ･開くボタンをクリックするとレイアウト情報をロードする
 ･保存ボタンをクリックするとレイアウト情報をセーブする
 ･削除ボタンをクリックしてコンポーネントをクリックすると
 クリックしたコンポーネントは消去される
 ･変換ボタンをクリックするとObjectEditorのファイルが作成される
 ･終了ボタンをクリックするとプログラムを終了する


コンポーネントの種類は
･Label
･Button
･TextField
･TextArea(スクロールバー付き）
･CheckBox
･HSlider
･VSlider
･List(スクロールバー付き)

注意
コンパイルするためには パッケージ&quot;javax.swing.tree&quot;と&quot;javax.swing.border&quot;, &quot;java.net&quot;のインポートが必要
</description>
<aobject>
<ID>_A18</ID>
<x0>612</x0>
<y0>101</y0>
<width>127</width>
<height>30</height>
<ID_maker>9</ID_maker>
<objectname>初期化</objectname>
<description>コンポーネントＩＤを０にする
Starinに信号が入力されたらID_makerを０にしてStartOutに信号を出力する
初期化する</description>
<action>
<ID>_A3</ID>
<comp1name>_P1</comp1name>
<comp2name>_O0</comp2name>
</action>
<operation>
<ID>_O0</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>126</x0>
<y0>56</y0>
<width>170</width>
<height>95</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>130</inpinx0>
<inpiny0>76</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>46</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ID_makerを0にする
// アプリケーションタイプの
// 判別
ID_maker = 0;
AppTyp = 0;


if(ARGS.length != 0 ){
  if( ARGS[0].equals( &quot;-java&quot; ) )    AppTyp=0;
  if( ARGS[0].equals( &quot;-applet&quot; ) )  AppTyp=1;
  if( ARGS[0].equals( &quot;-cpp&quot; ) )     AppTyp=2;
  if( ARGS[0].equals( &quot;-android&quot; ) ) AppTyp=3;
}

// Look&amp;FeelをMetalに変更する
try {
UIManager.setLookAndFeel(new MetalLookAndFeel());
} catch (UnsupportedLookAndFeelException e) {
e.printStackTrace();
}
</codetext>
</operation>
<pin>
<ID>_P1</ID>
<x0>331</x0>
<y0>116</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>74</px>
<py>5</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<codeclip>
<ID>_C17</ID>
<x0>0</x0>
<y0>21</y0>
<width>243</width>
<height>23</height>
<codetext>int ID_maker; //コンポーネントＩＤ番号
</codetext>
</codeclip>
<codeclip>
<ID>_C24</ID>
<x0>0</x0>
<y0>64</y0>
<width>316</width>
<height>23</height>
<codetext>class XFile extends File{// Fileクラスの拡張クラス
  
    //コンストラクタ宣言
    XFile( String fname ){ super( fname );}
    XFile( File fil, String fname ){ super( fil, fname );}
    XFile( File fil ){ super( fil.getParentFile(), fil.getName() ); }

    //ディレクトリを作成する
    public boolean mkdir(){ return( super.mkdir() ); }

    //ディレクトリかどうか調べる
    public boolean isDirectory(){ return( super.isDirectory() ); }

    //ファイルかどうか調べる
    public boolean isFile(){ return( super.isFile() ); }

    //親のPathを返す
    public XFile getParentfile(){
      File pf1, pf2;
      pf1 = super.getParentFile();
      if( pf1 == null ) return( null );
      pf2 = pf1.getParentFile();
      if( pf2 == null ) return( new XFile( pf1.getName() ) );
      return( new XFile( pf2, pf1.getName() ) );
    }

    //ディレクトリのリストを取り出す
    public XFile[] listFile(){
      int i;
      File[]   files = super.listFiles();
      if( files == null ) return( null );
      XFile[] xfiles = new XFile[ files.length ];
      for( i = 0; i&lt;files.length; i++){
        xfiles[i] = new XFile( this, files[i].getName() );
      } 
      return( xfiles );
    }

    // 中身ごとディレクトリを削除
    public void Xdelete(){
      int i;
      XFile[] files;
      if( this.isDirectory() ){
        files = listFile();
        if( files!= null ) for( i=0; i&lt;files.length; i++ ) { files[i].Xdelete(); }
      }
      boolean b = super.delete();
    }

    // 中身ごとディレクトリをコピー  
    public void Xcopy( XFile d ){
      int i;
      XFile[] files;
      XFile dst = d;

      if( this.isDirectory() ){
        files = listFile();
        dst.Xdelete();
        dst.mkdir();
        if( files == null ) return;
        for( i=0; i&lt;files.length; i++ ) files[i].Xcopy( new XFile( dst, files[i].getName() ) );
      }

      else if( this.isFile() ){
        try{
        BufferedReader din  = new BufferedReader( new FileReader( this ) );
        BufferedWriter dout = new BufferedWriter( new FileWriter( dst  ) );
        while( din.ready() ) dout.write( din.read() );
        din.close();
        dout.close();
        } catch( IOException e ){  }
      }
    }

    //ファイルとファイルを結合する
    public void Xappend( XFile apfile ){
      XFile tmpfile = new XFile( getParentfile(), &quot;_TEMP_&quot; );
      try{
      BufferedWriter dout = new BufferedWriter( new FileWriter( tmpfile ) );
      BufferedReader din  = new BufferedReader( new FileReader( this ) );
      while( din.ready() ) dout.write( din.read() );
      din.close();
      din  = new BufferedReader( new FileReader( apfile ) );
      while( din.ready() ) dout.write( din.read() );
      din.close();
      dout.close();
      } catch( IOException e ){  }
      tmpfile.Xcopy( this );
      tmpfile.Xdelete();
    }

    //ファイルと文字列を結合する
    public void Xappend( String str ){
      if( this.isDirectory() ) return;
      else if( this.isFile() ){
        XFile tmpfile = new XFile( getParentfile(), &quot;_TEMP_&quot; );
        try{
        BufferedWriter dout = new BufferedWriter( new FileWriter( tmpfile ) );
        BufferedReader din  = new BufferedReader( new FileReader( this ) );
        while( din.ready() ) dout.write( din.read() );
        din.close();
        dout.write( str );
        dout.close();
        } catch( IOException e ){ System.out.println( e ); }
        tmpfile.Xcopy( this );
        tmpfile.Xdelete();
      }
      else{
        try{
        BufferedWriter dout  = new BufferedWriter( new FileWriter( this ) );
        dout.write( str );
        dout.close();
        } catch( IOException e ){ System.out.println( e ); }
      }
    }

}//~XFile
</codetext>
</codeclip>
<pin>
<ID>_PX7</ID>
<x0>681</x0>
<y0>57</y0>
<width>47</width>
<height>25</height>
<text>Start()</text>
<px>8</px>
<py>33</py>
</pin>
<relation>
<ID>_R21</ID>
<pin1name>_PX7</pin1name>
<pin2name>_A18(_P1)</pin2name>
</relation>
<xobject>
<ID>_X36</ID>
<x0>563</x0>
<y0>259</y0>
<width>193</width>
<height>125</height>
<ID_maker>86</ID_maker>
<objectname>CommandButtons</objectname>
<description></description>
<xobject>
<ID>_X39</ID>
<x0>107</x0>
<y0>69</y0>
<width>195</width>
<height>46</height>
<ID_maker>20</ID_maker>
<objectname>LoadButton</objectname>
<description>ObjectDesignerのファイルを作成するボタン</description>
<pin>
<ID>_PX8</ID>
<x0>132</x0>
<y0>198</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>9</px>
<py>26</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>326</x0>
<y0>84</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>156</px>
<py>4</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>12</x0>
<y0>107</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>65</px>
<py>26</py>
</pin>
<aobject>
<ID>_A15</ID>
<x0>151</x0>
<y0>78</y0>
<width>157</width>
<height>84</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>68</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>96</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>25</px>
<py>44</py>
</pin>
</aobject>
<codeclip>
<ID>_C16</ID>
<x0>130</x0>
<y0>37</y0>
<width>190</width>
<height>29</height>
<codetext>String ButtonName=&quot;開く&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R17</ID>
<pin1name>_A15(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_PX8</pin1name>
<pin2name>_A15(_PX11)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_A15(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X51</ID>
<x0>107</x0>
<y0>114</y0>
<width>195</width>
<height>48</height>
<ID_maker>20</ID_maker>
<objectname>SaveButton</objectname>
<description>ObjectDesignerのファイルを作成するボタン</description>
<pin>
<ID>_PX8</ID>
<x0>132</x0>
<y0>198</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>9</px>
<py>25</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>326</x0>
<y0>84</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>158</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>12</x0>
<y0>107</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>65</px>
<py>24</py>
</pin>
<aobject>
<ID>_A15</ID>
<x0>151</x0>
<y0>78</y0>
<width>157</width>
<height>84</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>68</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>96</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>25</px>
<py>44</py>
</pin>
</aobject>
<codeclip>
<ID>_C16</ID>
<x0>130</x0>
<y0>37</y0>
<width>190</width>
<height>29</height>
<codetext>String ButtonName=&quot;保存&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R17</ID>
<pin1name>_A15(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_PX8</pin1name>
<pin2name>_A15(_PX11)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_A15(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
</xobject>
<relation>
<ID>_R70</ID>
<pin1name>_PX1</pin1name>
<pin2name>_A49(_PX3)</pin2name>
</relation>
<xobject>
<ID>_X52</ID>
<x0>107</x0>
<y0>161</y0>
<width>195</width>
<height>50</height>
<ID_maker>20</ID_maker>
<objectname>CreateButton</objectname>
<description>ObjectDesignerのファイルを作成するボタン</description>
<pin>
<ID>_PX8</ID>
<x0>132</x0>
<y0>198</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>10</px>
<py>28</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>326</x0>
<y0>84</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>157</px>
<py>4</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>12</x0>
<y0>107</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>65</px>
<py>25</py>
</pin>
<aobject>
<ID>_A15</ID>
<x0>151</x0>
<y0>78</y0>
<width>157</width>
<height>84</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>68</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>96</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>25</px>
<py>44</py>
</pin>
</aobject>
<codeclip>
<ID>_C16</ID>
<x0>130</x0>
<y0>37</y0>
<width>190</width>
<height>29</height>
<codetext>String ButtonName=&quot;変換&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R17</ID>
<pin1name>_A15(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_PX8</pin1name>
<pin2name>_A15(_PX11)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_A15(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X53</ID>
<x0>107</x0>
<y0>210</y0>
<width>195</width>
<height>47</height>
<ID_maker>20</ID_maker>
<objectname>QuitButton</objectname>
<description>ObjectDesignerのファイルを作成するボタン</description>
<pin>
<ID>_PX8</ID>
<x0>132</x0>
<y0>198</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>12</px>
<py>25</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>326</x0>
<y0>84</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>157</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>12</x0>
<y0>107</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>65</px>
<py>24</py>
</pin>
<aobject>
<ID>_A15</ID>
<x0>151</x0>
<y0>78</y0>
<width>157</width>
<height>84</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>68</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>96</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>25</px>
<py>44</py>
</pin>
</aobject>
<codeclip>
<ID>_C16</ID>
<x0>130</x0>
<y0>37</y0>
<width>190</width>
<height>29</height>
<codetext>String ButtonName=&quot;終了&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R17</ID>
<pin1name>_A15(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_PX8</pin1name>
<pin2name>_A15(_PX11)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_A15(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X54</ID>
<x0>107</x0>
<y0>256</y0>
<width>195</width>
<height>49</height>
<ID_maker>20</ID_maker>
<objectname>DeleteButton</objectname>
<description>ObjectDesignerのファイルを作成するボタン</description>
<pin>
<ID>_PX8</ID>
<x0>132</x0>
<y0>198</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>9</px>
<py>26</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>326</x0>
<y0>84</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>157</px>
<py>1</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>12</x0>
<y0>107</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>65</px>
<py>24</py>
</pin>
<aobject>
<ID>_A15</ID>
<x0>151</x0>
<y0>78</y0>
<width>157</width>
<height>84</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>68</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>96</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>25</px>
<py>44</py>
</pin>
</aobject>
<codeclip>
<ID>_C16</ID>
<x0>130</x0>
<y0>37</y0>
<width>190</width>
<height>29</height>
<codetext>String ButtonName=&quot;削除&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R17</ID>
<pin1name>_A15(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_PX8</pin1name>
<pin2name>_A15(_PX11)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_A15(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
</xobject>
<relation>
<ID>_R75</ID>
<pin1name>_X39(_PX1)</pin1name>
<pin2name>_A61(_P1)</pin2name>
</relation>
<relation>
<ID>_R56</ID>
<pin1name>_X39(_PX8)</pin1name>
<pin2name>_X51(_PX8)</pin2name>
</relation>
<relation>
<ID>_R69</ID>
<pin1name>_X39(_PX2)</pin1name>
<pin2name>_A49(_PX1)</pin2name>
</relation>
<relation>
<ID>_R57</ID>
<pin1name>_X51(_PX8)</pin1name>
<pin2name>_X52(_PX8)</pin2name>
</relation>
<relation>
<ID>_R58</ID>
<pin1name>_X52(_PX8)</pin1name>
<pin2name>_X53(_PX8)</pin2name>
</relation>
<relation>
<ID>_R59</ID>
<pin1name>_X53(_PX8)</pin1name>
<pin2name>_X54(_PX8)</pin2name>
</relation>
<relation>
<ID>_R71</ID>
<pin1name>_A49(_PX3)</pin1name>
<pin2name>_X39(_PX8)</pin2name>
</relation>
<pin>
<ID>_PX1</ID>
<x0>19</x0>
<y0>44</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>93</px>
<py>84</py>
</pin>
<relation>
<ID>_R76</ID>
<pin1name>_X51(_PX1)</pin1name>
<pin2name>_A61(_P2)</pin2name>
</relation>
<aobject>
<ID>_A61</ID>
<x0>334</x0>
<y0>99</y0>
<width>116</width>
<height>165</height>
<ID_maker>27</ID_maker>
<objectname>Encoder</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>3</x0>
<y0>148</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_P0</ID>
<x0>419</x0>
<y0>210</y0>
<width>86</width>
<height>27</height>
<text>Cmd(String s)</text>
<px>1</px>
<py>135</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>20</x0>
<y0>23</y0>
<width>60</width>
<height>30</height>
<text>Load()</text>
<px>0</px>
<py>29</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>17</x0>
<y0>81</y0>
<width>60</width>
<height>30</height>
<text>Save()</text>
<px>0</px>
<py>47</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>23</x0>
<y0>253</y0>
<width>60</width>
<height>30</height>
<text>Create()</text>
<px>0</px>
<py>66</py>
</pin>
<pin>
<ID>_P10</ID>
<x0>25</x0>
<y0>324</y0>
<width>60</width>
<height>30</height>
<text>Quit()</text>
<px>0</px>
<py>85</py>
</pin>
<pin>
<ID>_P11</ID>
<x0>34</x0>
<y0>396</y0>
<width>60</width>
<height>30</height>
<text>Delete()</text>
<px>0</px>
<py>106</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>144</x0>
<y0>26</y0>
<width>136</width>
<height>59</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>39</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(String s)</outpintext>
<outpinx0>63</outpinx0>
<outpiny0>38</outpiny0>
<outpinwidth>73</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>&quot;LOAD&quot;を出力
</description>
<codetext>s=&quot;LOAD&quot;;
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P1</comp1name>
<comp2name>_O12</comp2name>
</action>
<operation>
<ID>_O14</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>144</x0>
<y0>104</y0>
<width>142</width>
<height>59</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>40</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(String s)</outpintext>
<outpinx0>68</outpinx0>
<outpiny0>39</outpiny0>
<outpinwidth>74</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>&quot;SAVE&quot;を出力
</description>
<codetext>s=&quot;SAVE&quot;;
</codetext>
</operation>
<action>
<ID>_A15</ID>
<comp1name>_P2</comp1name>
<comp2name>_O14</comp2name>
</action>
<operation>
<ID>_O16</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>147</x0>
<y0>171</y0>
<width>142</width>
<height>63</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(String s)</outpintext>
<outpinx0>67</outpinx0>
<outpiny0>41</outpiny0>
<outpinwidth>75</outpinwidth>
<outpinheight>23</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>&quot;CRE&quot;を出力
</description>
<codetext>s=&quot;CRE&quot;;
</codetext>
</operation>
<action>
<ID>_A17</ID>
<comp1name>_P5</comp1name>
<comp2name>_O16</comp2name>
</action>
<operation>
<ID>_O18</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>147</x0>
<y0>249</y0>
<width>144</width>
<height>63</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(String s)</outpintext>
<outpinx0>71</outpinx0>
<outpiny0>44</outpiny0>
<outpinwidth>73</outpinwidth>
<outpinheight>19</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>&quot;QUIT&quot;を出力
</description>
<codetext>s=&quot;QUIT&quot;;
</codetext>
</operation>
<action>
<ID>_A19</ID>
<comp1name>_P10</comp1name>
<comp2name>_O18</comp2name>
</action>
<operation>
<ID>_O20</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>152</x0>
<y0>328</y0>
<width>143</width>
<height>60</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>40</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(String s)</outpintext>
<outpinx0>72</outpinx0>
<outpiny0>38</outpiny0>
<outpinwidth>72</outpinwidth>
<outpinheight>22</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>&quot;DEL&quot;を出力
</description>
<codetext>s=&quot;DEL&quot;;
</codetext>
</operation>
<action>
<ID>_A21</ID>
<comp1name>_P11</comp1name>
<comp2name>_O20</comp2name>
</action>
<action>
<ID>_A22</ID>
<comp1name>_O12</comp1name>
<comp2name>_P0</comp2name>
</action>
<action>
<ID>_A23</ID>
<comp1name>_O14</comp1name>
<comp2name>_P0</comp2name>
</action>
<action>
<ID>_A24</ID>
<comp1name>_O16</comp1name>
<comp2name>_P0</comp2name>
</action>
<action>
<ID>_A25</ID>
<comp1name>_O18</comp1name>
<comp2name>_P0</comp2name>
</action>
<action>
<ID>_A26</ID>
<comp1name>_O20</comp1name>
<comp2name>_P0</comp2name>
</action>
</aobject>
<relation>
<ID>_R62</ID>
<pin1name>_A61(_P0)</pin1name>
<pin2name>_P50</pin2name>
</relation>
<aobject>
<ID>_A49</ID>
<x0>107</x0>
<y0>24</y0>
<width>195</width>
<height>46</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = panel;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>8</px>
<py>27</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>475</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Container c)</text>
<px>95</px>
<py>3</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>66</px>
<py>27</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<pin>
<ID>_P50</ID>
<x0>332</x0>
<y0>284</y0>
<width>84</width>
<height>24</height>
<text>Cmd(String s)</text>
<px>13</px>
<py>45</py>
</pin>
<relation>
<ID>_R77</ID>
<pin1name>_X52(_PX1)</pin1name>
<pin2name>_A61(_P5)</pin2name>
</relation>
<relation>
<ID>_R64</ID>
<pin1name>_X54(_PX2)</pin1name>
<pin2name>_X53(_PX2)</pin2name>
</relation>
<relation>
<ID>_R65</ID>
<pin1name>_X53(_PX2)</pin1name>
<pin2name>_X52(_PX2)</pin2name>
</relation>
<relation>
<ID>_R66</ID>
<pin1name>_X52(_PX2)</pin1name>
<pin2name>_X51(_PX2)</pin2name>
</relation>
<relation>
<ID>_R67</ID>
<pin1name>_X51(_PX2)</pin1name>
<pin2name>_X39(_PX2)</pin2name>
</relation>
<codeclip>
<ID>_C72</ID>
<x0>133</x0>
<y0>0</y0>
<width>131</width>
<height>19</height>
<codetext>int row=0,column=4;
</codetext>
</codeclip>
<pin>
<ID>_P73</ID>
<x0>346</x0>
<y0>22</y0>
<width>103</width>
<height>26</height>
<text>join(Container c)</text>
<px>11</px>
<py>109</py>
</pin>
<relation>
<ID>_R74</ID>
<pin1name>_A49(_PX2)</pin1name>
<pin2name>_P73</pin2name>
</relation>
<relation>
<ID>_R78</ID>
<pin1name>_X53(_PX1)</pin1name>
<pin2name>_A61(_P10)</pin2name>
</relation>
<relation>
<ID>_R80</ID>
<pin1name>_X54(_PX1)</pin1name>
<pin2name>_A61(_P11)</pin2name>
</relation>
<xobject>
<ID>_X81</ID>
<x0>107</x0>
<y0>304</y0>
<width>195</width>
<height>49</height>
<ID_maker>20</ID_maker>
<objectname>MenuButton</objectname>
<description>ObjectDesignerのファイルを作成するボタン</description>
<pin>
<ID>_PX8</ID>
<x0>132</x0>
<y0>198</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>9</px>
<py>26</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>326</x0>
<y0>84</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>157</px>
<py>1</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>12</x0>
<y0>107</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>65</px>
<py>24</py>
</pin>
<aobject>
<ID>_A15</ID>
<x0>151</x0>
<y0>78</y0>
<width>157</width>
<height>84</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>68</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>96</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>25</px>
<py>44</py>
</pin>
</aobject>
<codeclip>
<ID>_C16</ID>
<x0>139</x0>
<y0>49</y0>
<width>177</width>
<height>22</height>
<codetext>String ButtonName=&quot;ﾒﾆｭｰ&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R17</ID>
<pin1name>_A15(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_PX8</pin1name>
<pin2name>_A15(_PX11)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_A15(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
</xobject>
<relation>
<ID>_R82</ID>
<pin1name>_X54(_PX8)</pin1name>
<pin2name>_X81(_PX8)</pin2name>
</relation>
<relation>
<ID>_R83</ID>
<pin1name>_X81(_PX2)</pin1name>
<pin2name>_X54(_PX2)</pin2name>
</relation>
<pin>
<ID>_P84</ID>
<x0>339</x0>
<y0>341</y0>
<width>86</width>
<height>27</height>
<text>MenuEditeor()</text>
<px>10</px>
<py>30</py>
</pin>
<relation>
<ID>_R85</ID>
<pin1name>_X81(_PX1)</pin1name>
<pin2name>_P84</pin2name>
</relation>
</xobject>
<relation>
<ID>_R103</ID>
<pin1name>_A18(_P1)</pin1name>
<pin2name>_X90(_P1)</pin2name>
</relation>
<codeclip>
<ID>_C74</ID>
<x0>0</x0>
<y0>87</y0>
<width>351</width>
<height>38</height>
<codetext>JFrame mainwindow;//サイズをコントロールするウィンドウ
JFrame editwindow;//編集ウィンドウ
</codetext>
</codeclip>
<codeclip>
<ID>_C76</ID>
<x0>0</x0>
<y0>127</y0>
<width>219</width>
<height>19</height>
<codetext>//アプリケーション用の関数を定義

  //文字列を整数に変換する
  public int parseInt( String s ){  return( new Integer(0).parseInt( s ) ); }
      
  // 文字列の１行目を取り出す
  public String getFirstLine( String buf ){
    int i;
    for( i = 0; i &lt; buf.length() &amp;&amp; buf.charAt(i) != &apos;\n&apos;; i++ ) ;
    if( i &lt;= 1 ) return( &quot;&quot; ); else return( buf.substring( 0, i ) );
  }

  // int を booleanに変換する
  public boolean int2boolean( int i){  return( i!= 0 ); }
  
</codetext>
</codeclip>
<codeclip>
<ID>_C80</ID>
<x0>0</x0>
<y0>146</y0>
<width>177</width>
<height>41</height>
<codetext>//アプリケーションの種類
int AppTyp=0;
</codetext>
</codeclip>
<aobject>
<ID>_A85</ID>
<x0>564</x0>
<y0>203</y0>
<width>192</width>
<height>51</height>
<ID_maker>14</ID_maker>
<objectname>ColorSelector</objectname>
<description></description>
<action>
<ID>_AX12</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX11</comp2name>
</action>
<pin>
<ID>_PX13</ID>
<x0>142</x0>
<y0>22</y0>
<width>54</width>
<height>22</height>
<text>cansel()</text>
<px>134</px>
<py>0</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>151</x0>
<y0>89</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>373</x0>
<y0>249</y0>
<width>60</width>
<height>24</height>
<text>request()</text>
<px>129</px>
<py>14</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>27</x0>
<y0>43</y0>
<width>162</width>
<height>21</height>
<codetext>innerSelector selector;
class innerSelector  implements ActionListener{
JColorChooser chooser;
innerSelector(){
chooser = new JColorChooser();
canselListener c = new canselListener();
dialog = JColorChooser.createDialog(new JLabel(&quot;dummy&quot;),&quot;Color Selector&quot;,false,chooser,this,c);
}
public void actionPerformed(ActionEvent e){returnColor(chooser.getColor());}
}
class canselListener implements ActionListener{
public void actionPerformed(ActionEvent e){cansel();}
}
</codetext>
</codeclip>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX8</state2>
<x0>238</x0>
<y0>147</y0>
<width>98</width>
<height>66</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>80</outconnectx0>
<outconnecty0>1</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期化する</description>
<codetext>selector = new innerSelector();
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>28</x0>
<y0>22</y0>
<width>115</width>
<height>23</height>
<text>returnColor(Color c)</text>
<px>67</px>
<py>28</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>27</x0>
<y0>63</y0>
<width>103</width>
<height>18</height>
<codetext>JDialog dialog;
</codetext>
</codeclip>
<state>
<ID>_SX8</ID>
<x0>348</x0>
<y0>89</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX11</ID>
<state1>_SX8</state1>
<state2>_SX8</state2>
<x0>424</x0>
<y0>146</y0>
<width>100</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>56</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ダイアログを
表示する</description>
<codetext>dialog.setVisible(true);
</codetext>
</operation>
</aobject>
<xobject>
<ID>_X90</ID>
<x0>389</x0>
<y0>137</y0>
<width>364</width>
<height>54</height>
<ID_maker>29</ID_maker>
<objectname>メニューエディタ</objectname>
<description>新しいオブジェクト</description>
<aobject>
<ID>_A0</ID>
<x0>80</x0>
<y0>55</y0>
<width>267</width>
<height>247</height>
<ID_maker>27</ID_maker>
<objectname>GUI</objectname>
<description>This is a GUI Object.
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created( JFrame f )</text>
<px>0</px>
<py>54</py>
</pin>
<pin>
<ID>_PGUIclosed</ID>
<x0>316</x0>
<y0>0</y0>
<width>180</width>
<height>26</height>
<text>GUI_closed()</text>
<px>69</px>
<py>8</py>
</pin>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>
Create GUI
</description>
<codetext>
 XGUI x = new XGUI();
</codetext>
</operation>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<pin>
<ID>_Pサブメニュー作成ボタン</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>サブメニュー作成ボタン_created( Component c )</text>
<px>465</px>
<py>58</py>
</pin>
<pin>
<ID>_PAサブメニュー作成ボタン</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>サブメニュー作成ボタン_clicked()</text>
<px>0</px>
<py>143</py>
</pin>
<pin>
<ID>_PLABEL3</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>LABEL3_created( Component c )</text>
<px>447</px>
<py>105</py>
</pin>
<pin>
<ID>_P挿入ボタン</ID>
<x0>0</x0>
<y0>194</y0>
<width>200</width>
<height>26</height>
<text>挿入ボタン_created( Component c )</text>
<px>465</px>
<py>123</py>
</pin>
<pin>
<ID>_PA挿入ボタン</ID>
<x0>0</x0>
<y0>222</y0>
<width>200</width>
<height>26</height>
<text>挿入ボタン_clicked()</text>
<px>0</px>
<py>77</py>
</pin>
<pin>
<ID>_Pメニューコンテナ</ID>
<x0>0</x0>
<y0>250</y0>
<width>200</width>
<height>26</height>
<text>メニューコンテナ_created( Component c )</text>
<px>0</px>
<py>222</py>
</pin>
<pin>
<ID>_PAメニューコンテナ</ID>
<x0>0</x0>
<y0>278</y0>
<width>200</width>
<height>26</height>
<text>メニューコンテナ_selected( Object o )</text>
<px>380</px>
<py>199</py>
</pin>
<pin>
<ID>_PLABEL4</ID>
<x0>0</x0>
<y0>306</y0>
<width>200</width>
<height>26</height>
<text>LABEL4_created( Component c )</text>
<px>384</px>
<py>180</py>
</pin>
<pin>
<ID>_Pメニューのテキスト</ID>
<x0>0</x0>
<y0>334</y0>
<width>200</width>
<height>26</height>
<text>メニューのテキスト_created( Component c )</text>
<px>0</px>
<py>182</py>
</pin>
<pin>
<ID>_PAメニューのテキスト</ID>
<x0>0</x0>
<y0>362</y0>
<width>200</width>
<height>26</height>
<text>メニューのテキスト_input( String txt )</text>
<px>0</px>
<py>201</py>
</pin>
<pin>
<ID>_PLABEL6</ID>
<x0>0</x0>
<y0>390</y0>
<width>200</width>
<height>26</height>
<text>LABEL6_created( Component c )</text>
<px>470</px>
<py>263</py>
</pin>
<pin>
<ID>_Pショートカットキーlist</ID>
<x0>0</x0>
<y0>418</y0>
<width>200</width>
<height>26</height>
<text>ショートカットキーlist_created( Component c )</text>
<px>0</px>
<py>162</py>
</pin>
<pin>
<ID>_PAショートカットキーlist</ID>
<x0>0</x0>
<y0>446</y0>
<width>200</width>
<height>26</height>
<text>ショートカットキーlist_selected( Object o )</text>
<px>402</px>
<py>170</py>
</pin>
<pin>
<ID>_P追加ボタン</ID>
<x0>0</x0>
<y0>474</y0>
<width>200</width>
<height>26</height>
<text>追加ボタン_created( Component c )</text>
<px>301</px>
<py>299</py>
</pin>
<pin>
<ID>_PA追加ボタン</ID>
<x0>0</x0>
<y0>502</y0>
<width>200</width>
<height>26</height>
<text>追加ボタン_clicked()</text>
<px>1</px>
<py>100</py>
</pin>
<pin>
<ID>_P削除ボタン</ID>
<x0>0</x0>
<y0>530</y0>
<width>200</width>
<height>26</height>
<text>削除ボタン_created( Component c )</text>
<px>383</px>
<py>353</py>
</pin>
<pin>
<ID>_PA削除ボタン</ID>
<x0>0</x0>
<y0>558</y0>
<width>200</width>
<height>26</height>
<text>削除ボタン_clicked()</text>
<px>0</px>
<py>122</py>
</pin>
<codeclip>
<ID>_CGUI</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>28</height>
<codetext> class XGUI extends JFrame implements WindowListener{
 JPanel cnt;
サブメニュー作成ボタン Iサブメニュー作成ボタン;
 class サブメニュー作成ボタン extends JButton implements ActionListener{
  サブメニュー作成ボタン(){
 setOpaque( true );
 setName(  &quot;サブメニュー作成ボタン&quot; );
 setFont( new Font( &quot;Dialog&quot;, 1, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;サブメニュー作成&quot; );
 addActionListener( this );
 サブメニュー作成ボタン_created( this );
}
 public void actionPerformed( ActionEvent e ){ サブメニュー作成ボタン_clicked(); }
}
LABEL3 ILABEL3;
 class LABEL3 extends JLabel{
  LABEL3(){
 setOpaque( true );
 setName(  &quot;LABEL3&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  204, 204, 204 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;メニューのツリー図&quot; );
 LABEL3_created( this );
}
}
挿入ボタン I挿入ボタン;
 class 挿入ボタン extends JButton implements ActionListener{
  挿入ボタン(){
 setOpaque( true );
 setName(  &quot;挿入ボタン&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;前方に挿入&quot; );
 addActionListener( this );
 挿入ボタン_created( this );
}
 public void actionPerformed( ActionEvent e ){ 挿入ボタン_clicked(); }
}
メニューコンテナ Iメニューコンテナ;
 class メニューコンテナ extends JList implements ListSelectionListener{
 JScrollPane scrl;
  メニューコンテナ(){
 setOpaque( true );
 setName(  &quot;メニューコンテナ&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  255, 255, 255 ));
 scrl = new JScrollPane( this );
 addListSelectionListener( this );
 メニューコンテナ_created( this );
}
 public void valueChanged( ListSelectionEvent e ){ メニューコンテナ_selected( getSelectedValue() ); }
}
LABEL4 ILABEL4;
 class LABEL4 extends JLabel{
  LABEL4(){
 setOpaque( true );
 setName(  &quot;LABEL4&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  204, 204, 204 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;表示テキスト&quot; );
 LABEL4_created( this );
}
}
メニューのテキスト Iメニューのテキスト;
 class メニューのテキスト extends JTextField implements ActionListener{
  メニューのテキスト(){
 setOpaque( true );
 setName(  &quot;メニューのテキスト&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;メニュー&quot; );
 addActionListener( this );
 メニューのテキスト_created( this );
}
 public void actionPerformed( ActionEvent e ){ メニューのテキスト_input( getText() ); }
}
LABEL6 ILABEL6;
 class LABEL6 extends JLabel{
  LABEL6(){
 setOpaque( true );
 setName(  &quot;LABEL6&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  204, 204, 204 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;ショートカットキー&quot; );
 LABEL6_created( this );
}
}
ショートカットキーlist Iショートカットキーlist;
 class ショートカットキーlist extends JList implements ListSelectionListener{
 JScrollPane scrl;
  ショートカットキーlist(){
 setOpaque( true );
 setName(  &quot;ショートカットキーlist&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  255, 255, 255 ));
 scrl = new JScrollPane( this );
 addListSelectionListener( this );
 ショートカットキーlist_created( this );
}
 public void valueChanged( ListSelectionEvent e ){ ショートカットキーlist_selected( getSelectedValue() ); }
}
追加ボタン I追加ボタン;
 class 追加ボタン extends JButton implements ActionListener{
  追加ボタン(){
 setOpaque( true );
 setName(  &quot;追加ボタン&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;後方に挿入&quot; );
 addActionListener( this );
 追加ボタン_created( this );
}
 public void actionPerformed( ActionEvent e ){ 追加ボタン_clicked(); }
}
削除ボタン I削除ボタン;
 class 削除ボタン extends JButton implements ActionListener{
  削除ボタン(){
 setOpaque( true );
 setName(  &quot;削除ボタン&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  0, 0, 0 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;削除&quot; );
 addActionListener( this );
 削除ボタン_created( this );
}
 public void actionPerformed( ActionEvent e ){ 削除ボタン_clicked(); }
}
 XGUI(){
 setTitle(&quot;メニューエディタ&quot;);
 cnt = new JPanel( new BorderLayout() );
 cnt.setPreferredSize(  new  Dimension( 263, 465 ) );
 ((Component)cnt).setBackground( new Color( 204, 204, 204 ) );
 Iサブメニュー作成ボタン = new サブメニュー作成ボタン();
 cnt.add( Iサブメニュー作成ボタン, 0 );
 cnt.getLayout().removeLayoutComponent( Iサブメニュー作成ボタン );
 Iサブメニュー作成ボタン.setBounds( 124, 140, 133, 26 );
 ILABEL3 = new LABEL3();
 cnt.add( ILABEL3, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL3 );
 ILABEL3.setBounds( 17, 175, 213, 17 );
 I挿入ボタン = new 挿入ボタン();
 cnt.add( I挿入ボタン, 0 );
 cnt.getLayout().removeLayoutComponent( I挿入ボタン );
 I挿入ボタン.setBounds( 1, 111, 95, 28 );
 Iメニューコンテナ = new メニューコンテナ();
 cnt.add( Iメニューコンテナ.scrl, 0 );
 cnt.getLayout().removeLayoutComponent( Iメニューコンテナ.scrl );
 ( Iメニューコンテナ.scrl ).setBounds( 3, 196, 259, 266 );
 ILABEL4 = new LABEL4();
 cnt.add( ILABEL4, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL4 );
 ILABEL4.setBounds( 20, 3, 202, 18 );
 Iメニューのテキスト = new メニューのテキスト();
 cnt.add( Iメニューのテキスト, 0 );
 cnt.getLayout().removeLayoutComponent( Iメニューのテキスト );
 Iメニューのテキスト.setBounds( 2, 25, 258, 30 );
 ILABEL6 = new LABEL6();
 cnt.add( ILABEL6, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL6 );
 ILABEL6.setBounds( 9, 61, 235, 16 );
 Iショートカットキーlist = new ショートカットキーlist();
 cnt.add( Iショートカットキーlist.scrl, 0 );
 cnt.getLayout().removeLayoutComponent( Iショートカットキーlist.scrl );
 ( Iショートカットキーlist.scrl ).setBounds( 2, 80, 259, 29 );
 I追加ボタン = new 追加ボタン();
 cnt.add( I追加ボタン, 0 );
 cnt.getLayout().removeLayoutComponent( I追加ボタン );
 I追加ボタン.setBounds( 96, 111, 97, 28 );
 I削除ボタン = new 削除ボタン();
 cnt.add( I削除ボタン, 0 );
 cnt.getLayout().removeLayoutComponent( I削除ボタン );
 I削除ボタン.setBounds( 193, 111, 64, 28 );
 setContentPane( cnt );
 pack();
 addWindowListener( this );
 GUI_created( this );
}
 public void windowActivated( WindowEvent e ){}
 public void windowClosed( WindowEvent e ){}
 public void windowClosing( WindowEvent e ){ GUI_closed(); }
 public void windowDeactivated( WindowEvent e ){}
 public void windowDeiconified( WindowEvent e ){}
 public void windowIconified( WindowEvent e ){}
 public void windowOpened( WindowEvent e ){}
}
</codetext>
</codeclip>
<レイアウト>メニューエディタ
263
465
204
204
204
BUTTON;サブメニュー作成ボタン;サブメニュー作成;124;140;133;26;0;0;0;192;192;192;Dialog;12;null;0;0;
LABEL;LABEL3;メニューのツリー図;17;175;213;17;0;0;0;204;204;204;Dialog;12;null;0;0;
BUTTON;挿入ボタン;前方に挿入;1;111;95;28;0;0;0;192;192;192;Dialog;12;null;0;0;
LIST;メニューコンテナ;3;196;259;266;0;0;0;255;255;255;Dialog;12;
LABEL;LABEL4;表示テキスト;20;3;202;18;0;0;0;204;204;204;Dialog;12;null;0;0;
TEXTFIELD;メニューのテキスト;メニュー;2;25;258;30;0;0;0;255;255;255;Dialog;12;
LABEL;LABEL6;ショートカットキー;9;61;235;16;0;0;0;204;204;204;Dialog;12;null;0;0;
LIST;ショートカットキーlist;2;80;259;29;0;0;0;255;255;255;Dialog;12;
BUTTON;追加ボタン;後方に挿入;96;111;97;28;0;0;0;192;192;192;Dialog;12;null;0;0;
BUTTON;削除ボタン;削除;193;111;64;28;0;0;0;192;192;192;Dialog;12;null;0;0;
</レイアウト>
</aobject>
<pin>
<ID>_P1</ID>
<x0>11</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>298</px>
<py>35</py>
</pin>
<relation>
<ID>_R2</ID>
<pin1name>_P1</pin1name>
<pin2name>_A0(_Pstart)</pin2name>
</relation>
<xobject>
<ID>_X3</ID>
<x0>377</x0>
<y0>74</y0>
<width>214</width>
<height>230</height>
<ID_maker>52</ID_maker>
<objectname>メインコントロール</objectname>
<description>新しいオブジェクト</description>
<pin>
<ID>_P0</ID>
<x0>74</x0>
<y0>156</y0>
<width>53</width>
<height>24</height>
<text>show()</text>
<px>159</px>
<py>1</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>8</x0>
<y0>76</y0>
<width>150</width>
<height>24</height>
<text>MenuEditor_is(JFrame f )</text>
<px>0</px>
<py>35</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>22</x0>
<y0>228</y0>
<width>146</width>
<height>30</height>
<text>EditWindow_is(JFrame f )</text>
<px>52</px>
<py>64</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>656</x0>
<y0>289</y0>
<width>60</width>
<height>30</height>
<text>insert()</text>
<px>3</px>
<py>58</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>654</x0>
<y0>334</y0>
<width>60</width>
<height>30</height>
<text>append()</text>
<px>0</px>
<py>81</py>
</pin>
<pin>
<ID>_P7</ID>
<x0>658</x0>
<y0>385</y0>
<width>60</width>
<height>30</height>
<text>delete()</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P8</ID>
<x0>186</x0>
<y0>372</y0>
<width>159</width>
<height>24</height>
<text>shortcut_is(Component c)</text>
<px>0</px>
<py>143</py>
</pin>
<codeclip>
<ID>_C15</ID>
<x0>408</x0>
<y0>76</y0>
<width>176</width>
<height>22</height>
<codetext>JFrame メニューエディタ;
</codetext>
</codeclip>
<pin>
<ID>_P10</ID>
<x0>196</x0>
<y0>266</y0>
<width>126</width>
<height>26</height>
<text>text_is(Component c)</text>
<px>0</px>
<py>163</py>
</pin>
<operation>
<ID>_O46</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>186</x0>
<y0>28</y0>
<width>143</width>
<height>71</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JFrame f)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>50</inpiny0>
<inpinwidth>95</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>103</outpinx0>
<outpiny0>51</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>メニューエディタを
取得</description>
<codetext>メニューエディタ=f;
f.setLocation( 400,0 );
f.setVisible(false);
</codetext>
</operation>
<pin>
<ID>_P12</ID>
<x0>178</x0>
<y0>405</y0>
<width>172</width>
<height>25</height>
<text>menuView_is(Component c)</text>
<px>0</px>
<py>203</py>
</pin>
<relation>
<ID>_R47</ID>
<pin1name>_P3</pin1name>
<pin2name>_O46</pin2name>
</relation>
<operation>
<ID>_O18</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>200</x0>
<y0>105</y0>
<width>128</width>
<height>72</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>53</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>メニューエディタを
表示
</description>
<codetext>メニューエディタ.setVisible(true);
</codetext>
</operation>
<relation>
<ID>_R19</ID>
<pin1name>_P0</pin1name>
<pin2name>_O18</pin2name>
</relation>
<codeclip>
<ID>_C20</ID>
<x0>406</x0>
<y0>49</y0>
<width>196</width>
<height>23</height>
<codetext>JFrame 編集ウィンドウ;
</codetext>
</codeclip>
<operation>
<ID>_O21</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>198</x0>
<y0>188</y0>
<width>129</width>
<height>65</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JFrame f )</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>46</inpiny0>
<inpinwidth>81</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>45</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>編集ウィンドウを
取得</description>
<codetext>編集ウィンドウ=f;
</codetext>
</operation>
<relation>
<ID>_R22</ID>
<pin1name>_P4</pin1name>
<pin2name>_O21</pin2name>
</relation>
<relation>
<ID>_R51</ID>
<pin1name>_O21</pin1name>
<pin2name>_X25(_P50)</pin2name>
</relation>
<operation>
<ID>_O24</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>452</x0>
<y0>121</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JMenuBar m)</inpintext>
<inpinx0>31</inpinx0>
<inpiny0>69</inpiny0>
<inpinwidth>100</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>編集ウィンドウの
メニューバーを
設定
</description>
<codetext>編集ウィンドウ.setJMenuBar( m );
</codetext>
</operation>
<xobject>
<ID>_X25</ID>
<x0>384</x0>
<y0>236</y0>
<width>231</width>
<height>234</height>
<ID_maker>59</ID_maker>
<objectname>メニュー</objectname>
<description>新しいオブジェクト</description>
<operation>
<ID>_O47</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>435</x0>
<y0>302</y0>
<width>183</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Object o)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>47</inpiny0>
<inpinwidth>80</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out(JMenuBar m)</outpintext>
<outpinx0>79</outpinx0>
<outpiny0>46</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>24</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>メニューのツリーを設定
</description>
<codetext>ツリーモデル = new DefaultTreeModel((DefaultMutableTreeNode)o);
メニューのツリー = new JTree( ツリーモデル );
JScrollPane sc = new JScrollPane(メニューのツリー);
sc.setPreferredSize( メニューのコンテナ.getSize() );
メニューのコンテナ.removeAll();
メニューのコンテナ.add(sc);
メニューのコンテナ.validate();
メニューのコンテナ.repaint();
メニューバー = new JMenuBar();
m = メニューバー;
</codetext>
</operation>
<pin>
<ID>_P1</ID>
<x0>492</x0>
<y0>416</y0>
<width>155</width>
<height>27</height>
<text>setMenuBar(JMenuBar m)</text>
<px>75</px>
<py>35</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>612</x0>
<y0>220</y0>
<width>164</width>
<height>25</height>
<text>menuView_is(Component c)</text>
<px>0</px>
<py>173</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>142</x0>
<y0>248</y0>
<width>46</width>
<height>29</height>
<text>insert()</text>
<px>174</px>
<py>60</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>131</x0>
<y0>289</y0>
<width>71</width>
<height>27</height>
<text>append()</text>
<px>174</px>
<py>105</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>268</x0>
<y0>78</y0>
<width>128</width>
<height>26</height>
<text>text_is( Component c)</text>
<px>0</px>
<py>60</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>141</x0>
<y0>343</y0>
<width>55</width>
<height>31</height>
<text>delete()</text>
<px>174</px>
<py>156</py>
</pin>
<pin>
<ID>_P7</ID>
<x0>612</x0>
<y0>40</y0>
<width>152</width>
<height>29</height>
<text>shortcut_is( Component c)</text>
<px>0</px>
<py>140</py>
</pin>
<pin>
<ID>_P8</ID>
<x0>285</x0>
<y0>408</y0>
<width>70</width>
<height>31</height>
<text>subMenu()</text>
<px>8</px>
<py>204</py>
</pin>
<xobject>
<ID>_X39</ID>
<x0>232</x0>
<y0>162</y0>
<width>167</width>
<height>211</height>
<ID_maker>45</ID_maker>
<objectname>メニュー項目</objectname>
<description>新しいオブジェクト</description>
<pin>
<ID>_P0</ID>
<x0>300</x0>
<y0>148</y0>
<width>96</width>
<height>24</height>
<text>join(Object top)</text>
<px>66</px>
<py>143</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>19</x0>
<y0>149</y0>
<width>43</width>
<height>25</height>
<text>start()</text>
<px>9</px>
<py>31</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>672</x0>
<y0>261</y0>
<width>60</width>
<height>30</height>
<text>insert()</text>
<px>14</px>
<py>90</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>675</x0>
<y0>339</y0>
<width>60</width>
<height>30</height>
<text>append()</text>
<px>8</px>
<py>117</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>15</x0>
<y0>378</y0>
<width>60</width>
<height>30</height>
<text>delete()</text>
<px>12</px>
<py>144</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>8</x0>
<y0>234</y0>
<width>70</width>
<height>25</height>
<text>subMenu()</text>
<px>76</px>
<py>176</py>
</pin>
<operation>
<ID>_O11</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>117</x0>
<y0>107</y0>
<width>155</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Object top)</outpintext>
<outpinx0>62</outpinx0>
<outpiny0>42</outpiny0>
<outpinwidth>93</outpinwidth>
<outpinheight>22</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>メニューのトップ項目を
作成</description>
<codetext>トップ項目  = new メニュー項目(parent);
トップ項目.親のメニュー項目 = null;
トップ項目.サブメニュー = new Vector();
トップ項目.ノード = new ツリーノード();
トップ項目.ノード.setUserObject(&quot;メニューバー&quot;);
トップ項目.ノード.項目 = トップ項目;
トップ項目.メニューコンポーネント = null;
トップ項目.表示テキスト = &quot;メニューバー&quot;;
トップ項目.ショートカット = 0;
top=トップ項目.ノード;
</codetext>
</operation>
<codeclip>
<ID>_C17</ID>
<x0>419</x0>
<y0>2</y0>
<width>327</width>
<height>210</height>
<codetext>//             &lt;&lt;        プロパティ        &gt;&gt;
メニュー項目         親のメニュー項目;
Vector                      サブメニュー;
ツリーノード         ノード;
JMenu                     メニューコンポーネント;
String                       表示テキスト;
int                              ショートカット;

//             &lt;&lt;      内部クラス     &gt;&gt;
class ツリーノード extends DefaultMutableTreeNode{
メニュー項目 項目;
}
</codetext>
</codeclip>
<pin>
<ID>_P8</ID>
<x0>10</x0>
<y0>305</y0>
<width>59</width>
<height>26</height>
<text>modefy()</text>
<px>9</px>
<py>176</py>
</pin>
<relation>
<ID>_R12</ID>
<pin1name>_P1</pin1name>
<pin2name>_O11</pin2name>
</relation>
<relation>
<ID>_R13</ID>
<pin1name>_O11</pin1name>
<pin2name>_P0</pin2name>
</relation>
<codeclip>
<ID>_C15</ID>
<x0>25</x0>
<y0>3</y0>
<width>306</width>
<height>22</height>
<codetext>メニュー項目 トップ項目;//メニューのトップ項目
</codetext>
</codeclip>
<operation>
<ID>_O21</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>117</x0>
<y0>174</y0>
<width>185</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>38</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件: 選択された項目() != null
選択された項目の
サブメニューを作成する</description>
<codetext>メニューを挿入( 選択された項目(), 選択された項目().サブメニュー.size() );
</codetext>
</operation>
<operation>
<ID>_O19</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>117</x0>
<y0>260</y0>
<width>213</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>47</inpiny0>
<inpinwidth>34</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件: 選択項目はトップではない()
選択された項目のデータを修正する</description>
<codetext>メニュー項目 s = 選択された項目();

s.表示テキスト = メニューの編集.getText();
s.ノード.setUserObject( s.表示テキスト );
s.メニューコンポーネント.setText( s.表示テキスト );
s.ショートカット = ショートカットキー[ショートカットキーのリスト.getSelectedIndex() ] ;
s.メニューコンポーネント.setMnemonic( s.ショートカット );
表示を更新する();
</codetext>
</operation>
<relation>
<ID>_R20</ID>
<pin1name>_P8</pin1name>
<pin2name>_O19</pin2name>
</relation>
<codeclip>
<ID>_C22</ID>
<x0>25</x0>
<y0>24</y0>
<width>236</width>
<height>21</height>
<codetext>private メニュー項目 選択された項目(){
  if( メニューのツリー.getLastSelectedPathComponent() == null ) return( null );
  else return( ( (ツリーノード)(メニューのツリー.getLastSelectedPathComponent()) ).項目 );
}
</codetext>
</codeclip>
<relation>
<ID>_R23</ID>
<pin1name>_P5</pin1name>
<pin2name>_O21</pin2name>
</relation>
<operation>
<ID>_O24</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>116</x0>
<y0>334</y0>
<width>213</width>
<height>68</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件: 選択項目はトップではない()
選択された項目を削除する</description>
<codetext>メニュー項目 s = 選択された項目();

s.ノード.setUserObject( null );
s.ノード.項目 = null;
if(s.親のメニュー項目 != null ) { 
  s.親のメニュー項目.サブメニュー.remove( s); 
  ツリーモデル.removeNodeFromParent( s.ノード );
  if( s.親のメニュー項目.メニューコンポーネント == null ){
     メニューバー.remove( s.メニューコンポーネント );
  }
  else{
     s.親のメニュー項目.メニューコンポーネント.remove( s.メニューコンポーネント );
  }
}
s.親のメニュー項目 = null;
s.サブメニュー = null; 
s.ノード = null;
s.メニューコンポーネント= null;
s.表示テキスト = null;
s.ショートカット = 0;
表示を更新する();
</codetext>
</operation>
<relation>
<ID>_R25</ID>
<pin1name>_P4</pin1name>
<pin2name>_O24</pin2name>
</relation>
<operation>
<ID>_O26</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>423</x0>
<y0>218</y0>
<width>204</width>
<height>68</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>174</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>31</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件: 選択項目はトップではない()
選択された項目の前に
新しいメニューを追加する</description>
<codetext>メニュー項目 親項目 = 選択された項目().親のメニュー項目;
int 番号 = 親項目.サブメニュー.indexOf( 選択された項目() );
メニューを挿入( 親項目, 番号 );

</codetext>
</operation>
<relation>
<ID>_R27</ID>
<pin1name>_P2</pin1name>
<pin2name>_O26</pin2name>
</relation>
<operation>
<ID>_O28</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>424</x0>
<y0>295</y0>
<width>205</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>166</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件: 選択項目はトップではない()
選択された項目の後ろに
新しいメニューを挿入する</description>
<codetext>メニュー項目 親項目 = 選択された項目().親のメニュー項目;
int 番号 = 親項目.サブメニュー.indexOf( 選択された項目() ) + 1;
メニューを挿入( 親項目, 番号 );

</codetext>
</operation>
<relation>
<ID>_R29</ID>
<pin1name>_P3</pin1name>
<pin2name>_O28</pin2name>
</relation>
<codeclip>
<ID>_C32</ID>
<x0>25</x0>
<y0>44</y0>
<width>293</width>
<height>20</height>
<codetext>private boolean 選択項目はトップではない(){
   return( ( 選択された項目() != null ) &amp;&amp; ( 選択された項目().親のメニュー項目 != null ) );
}
</codetext>
</codeclip>
<codeclip>
<ID>_C33</ID>
<x0>25</x0>
<y0>83</y0>
<width>195</width>
<height>21</height>
<codetext>private void 表示を更新する(){
メニューのツリー.validate();
メニューのツリー.repaint();
メニューバー.validate();
メニューバー.repaint();
JPanel p = (JPanel)( 編集ウィンドウ.getContentPane() );
p.setPreferredSize( p.getSize() );
編集ウィンドウ.pack();
}
</codetext>
</codeclip>
<codeclip>
<ID>_C34</ID>
<x0>25</x0>
<y0>63</y0>
<width>346</width>
<height>21</height>
<codetext>private void メニューを挿入( メニュー項目 親項目, int 番号 ){

if( 番号 &gt; 親項目.サブメニュー.size() ) return;
メニュー項目 新しい項目  = new メニュー項目(parent);
新しい項目.親のメニュー項目 = 親項目;
新しい項目.サブメニュー = new Vector();
新しい項目.ノード = new ツリーノード();
新しい項目.ノード.項目 = 新しい項目;
新しい項目.表示テキスト = メニューの編集.getText();
新しい項目.ノード.setUserObject( 新しい項目.表示テキスト );
新しい項目.メニューコンポーネント = new JMenu( 新しい項目.表示テキスト );
新しい項目.ショートカット = ショートカットキー[ショートカットキーのリスト.getSelectedIndex() ] ;
新しい項目.メニューコンポーネント.setMnemonic( 新しい項目.ショートカット );
ツリーモデル.insertNodeInto( 新しい項目.ノード, 親項目.ノード, 番号 );
if( 親項目.メニューコンポーネント == null )  メニューバー.add( 新しい項目.メニューコンポーネント, 番号 );
else  親項目.メニューコンポーネント.add( 新しい項目.メニューコンポーネント, 番号 );
親項目.サブメニュー.add( 番号, 新しい項目 );
メニューのツリー.scrollPathToVisible( new TreePath( 新しい項目.ノード.getPath() ));
表示を更新する();

}
</codetext>
</codeclip>
<pin>
<ID>_P37</ID>
<x0>677</x0>
<y0>399</y0>
<width>79</width>
<height>27</height>
<text>load(String s)</text>
<px>8</px>
<py>60</py>
</pin>
<operation>
<ID>_O38</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>419</x0>
<y0>371</y0>
<width>216</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>146</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>70</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out( メニュー項目 m, StringTokenizer t)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>52</outpiny0>
<outpinwidth>216</outpinwidth>
<outpinheight>24</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件: s.startsWith(&quot;Menu&quot;)
メニューをロードする
</description>
<codetext>  t = new StringTokenizer( s, &quot;;&quot; );
  String d = t.nextToken();
  m =トップ項目;
</codetext>
</operation>
<relation>
<ID>_R39</ID>
<pin1name>_P37</pin1name>
<pin2name>_O38</pin2name>
</relation>
<operation>
<ID>_O41</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>118</x0>
<y0>407</y0>
<width>210</width>
<height>60</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(メニュー項目 p, StringTokenizer f)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>39</inpiny0>
<inpinwidth>211</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>2</inpinlinkcount>
<description>メニューを作成する</description>
<codetext>  do{
    メニュー項目 項目 =new メニュー項目(parent);
    String 名前 = f.nextToken();
    int       キー = ( new Integer( f.nextToken() ) ).intValue();
 
    項目.親のメニュー項目 = p;
    項目.サブメニュー = new Vector();
    項目.ノード = new ツリーノード();
    項目.ノード.項目 = 項目;
    項目.ノード.setUserObject( 名前 );
    ツリーモデル.insertNodeInto( 項目.ノード, p.ノード, p.サブメニュー.size() );
    メニューのツリー.scrollPathToVisible( new TreePath( 項目.ノード.getPath() ));
    項目.メニューコンポーネント = new JMenu( 名前 );
    項目 .メニューコンポーネント.setMnemonic( キー );
    if( p.メニューコンポーネント == null )  メニューバー.add( 項目.メニューコンポーネント );
    else  p.メニューコンポーネント.add( 項目.メニューコンポーネント );
    項目.表示テキスト = 名前;
    項目.ショートカット = キー ;
    p.サブメニュー.add( 項目 );
    表示を更新する();
    if( f.nextToken().equals( &quot;Menu&quot;)  )  repeat( 項目, f );
  }
  while( f.nextToken().equals( &quot;Menu&quot;) );
</codetext>
</operation>
<relation>
<ID>_R42</ID>
<pin1name>_O38</pin1name>
<pin2name>_O41</pin2name>
</relation>
<pin>
<ID>_P43</ID>
<x0>418</x0>
<y0>457</y0>
<width>227</width>
<height>27</height>
<text>repeat(メニュー項目 p, StringTokenizer f)</text>
<px>10</px>
<py>40</py>
</pin>
<relation>
<ID>_R44</ID>
<pin1name>_P43</pin1name>
<pin2name>_O41</pin2name>
</relation>
</xobject>
<codeclip>
<ID>_C10</ID>
<x0>394</x0>
<y0>5</y0>
<width>213</width>
<height>21</height>
<codetext>JList ショートカットキーのリスト;
int[] ショートカットキー
  = {
    java.awt.event.KeyEvent.VK_0,
    java.awt.event.KeyEvent.VK_1,
    java.awt.event.KeyEvent.VK_2,
    java.awt.event.KeyEvent.VK_3,
    java.awt.event.KeyEvent.VK_4,
    java.awt.event.KeyEvent.VK_5,
    java.awt.event.KeyEvent.VK_6,
    java.awt.event.KeyEvent.VK_7,
    java.awt.event.KeyEvent.VK_8,
    java.awt.event.KeyEvent.VK_9,
    java.awt.event.KeyEvent.VK_A,
    java.awt.event.KeyEvent.VK_B,
    java.awt.event.KeyEvent.VK_C,
    java.awt.event.KeyEvent.VK_D,
    java.awt.event.KeyEvent.VK_E,
    java.awt.event.KeyEvent.VK_F,
    java.awt.event.KeyEvent.VK_G,
    java.awt.event.KeyEvent.VK_H,
    java.awt.event.KeyEvent.VK_I,
    java.awt.event.KeyEvent.VK_J,
    java.awt.event.KeyEvent.VK_K,
    java.awt.event.KeyEvent.VK_L,
    java.awt.event.KeyEvent.VK_M,
    java.awt.event.KeyEvent.VK_N,
    java.awt.event.KeyEvent.VK_O,
    java.awt.event.KeyEvent.VK_P,
    java.awt.event.KeyEvent.VK_Q,
    java.awt.event.KeyEvent.VK_R,
    java.awt.event.KeyEvent.VK_S,
    java.awt.event.KeyEvent.VK_T,
    java.awt.event.KeyEvent.VK_U,
    java.awt.event.KeyEvent.VK_V,
    java.awt.event.KeyEvent.VK_W,
    java.awt.event.KeyEvent.VK_X,
    java.awt.event.KeyEvent.VK_Y,
    java.awt.event.KeyEvent.VK_Z,
     };
String[]  ショートカットの表示
  ={
    &quot;ALT+0&quot;,
    &quot;ALT+1&quot;,
    &quot;ALT+2&quot;,
    &quot;ALT+3&quot;,
    &quot;ALT+4&quot;,
    &quot;ALT+5&quot;,
    &quot;ALT+6&quot;,
    &quot;ALT+7&quot;,
    &quot;ALT+8&quot;,
    &quot;ALT+9&quot;,
    &quot;ALT+A&quot;,
    &quot;ALT+B&quot;,
    &quot;ALT+C&quot;,
    &quot;ALT+D&quot;,
    &quot;ALT+E&quot;,
    &quot;ALT+F&quot;,
    &quot;ALT+G&quot;,
    &quot;ALT+H&quot;,
    &quot;ALT+I&quot;,
    &quot;ALT+J&quot;,
    &quot;ALT+K&quot;,
    &quot;ALT+L&quot;,
    &quot;ALT+M&quot;,
    &quot;ALT+N&quot;,
    &quot;ALT+O&quot;,
    &quot;ALT+P&quot;,
    &quot;ALT+Q&quot;,
    &quot;ALT+R&quot;,
    &quot;ALT+S&quot;,
    &quot;ALT+T&quot;,
    &quot;ALT+U&quot;,
    &quot;ALT+V&quot;,
    &quot;ALT+W&quot;,
    &quot;ALT+X&quot;,
    &quot;ALT+Y&quot;,
    &quot;ALT+Z&quot;
    };
</codetext>
</codeclip>
<operation>
<ID>_O11</ID>
<state1>null</state1>
<state2>null</state2>
<x0>437</x0>
<y0>29</y0>
<width>144</width>
<height>67</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>39</inpinx0>
<inpiny0>48</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ショートカットキーの
リストを生成
</description>
<codetext>ショートカットキーのリスト = (JList)c;
ショートカットキーのリスト.setListData(ショートカットの表示 );
ショートカットキーのリスト.setSelectedIndex(0);
</codetext>
</operation>
<relation>
<ID>_R12</ID>
<pin1name>_P7</pin1name>
<pin2name>_O11</pin2name>
</relation>
<operation>
<ID>_O40</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>84</x0>
<y0>45</y0>
<width>161</width>
<height>70</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>55</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>121</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>メニューの編集用
テキストを生成</description>
<codetext>メニューの編集 = (JTextField )c;
</codetext>
</operation>
<codeclip>
<ID>_C41</ID>
<x0>74</x0>
<y0>12</y0>
<width>175</width>
<height>27</height>
<codetext>JTextField メニューの編集;
</codetext>
</codeclip>
<relation>
<ID>_R42</ID>
<pin1name>_P5</pin1name>
<pin2name>_O40</pin2name>
</relation>
<codeclip>
<ID>_C43</ID>
<x0>415</x0>
<y0>119</y0>
<width>221</width>
<height>36</height>
<codetext>Container メニューのコンテナ;
JMenuBar メニューバー;
</codetext>
</codeclip>
<operation>
<ID>_O44</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>448</x0>
<y0>160</y0>
<width>152</width>
<height>83</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>98</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>83</outpiny0>
<outpinwidth>109</outpinwidth>
<outpinheight>24</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>メニューのコンテナを
設定
</description>
<codetext>メニューのコンテナ = (Container)c;
メニューのコンテナ.setLayout( new FlowLayout(FlowLayout.LEFT) );

</codetext>
</operation>
<relation>
<ID>_R45</ID>
<pin1name>_P2</pin1name>
<pin2name>_O44</pin2name>
</relation>
<codeclip>
<ID>_C46</ID>
<x0>412</x0>
<y0>257</y0>
<width>238</width>
<height>38</height>
<codetext>JTree                         メニューのツリー;
DefaultTreeModel   ツリーモデル;
</codetext>
</codeclip>
<relation>
<ID>_R48</ID>
<pin1name>_X39(_P0)</pin1name>
<pin2name>_O47</pin2name>
</relation>
<relation>
<ID>_R49</ID>
<pin1name>_O47</pin1name>
<pin2name>_P1</pin2name>
</relation>
<pin>
<ID>_P50</ID>
<x0>136</x0>
<y0>168</y0>
<width>52</width>
<height>28</height>
<text>start()</text>
<px>10</px>
<py>40</py>
</pin>
<relation>
<ID>_R51</ID>
<pin1name>_P29</pin1name>
<pin2name>_X39(_P8)</pin2name>
</relation>
<relation>
<ID>_R52</ID>
<pin1name>_P6</pin1name>
<pin2name>_X39(_P4)</pin2name>
</relation>
<relation>
<ID>_R53</ID>
<pin1name>_P4</pin1name>
<pin2name>_X39(_P3)</pin2name>
</relation>
<relation>
<ID>_R54</ID>
<pin1name>_P3</pin1name>
<pin2name>_X39(_P2)</pin2name>
</relation>
<pin>
<ID>_P29</ID>
<x0>139</x0>
<y0>388</y0>
<width>56</width>
<height>30</height>
<text>modefy()</text>
<px>9</px>
<py>112</py>
</pin>
<relation>
<ID>_R55</ID>
<pin1name>_P50</pin1name>
<pin2name>_X39(_P1)</pin2name>
</relation>
<relation>
<ID>_R56</ID>
<pin1name>_P8</pin1name>
<pin2name>_X39(_P5)</pin2name>
</relation>
<pin>
<ID>_P57</ID>
<x0>126</x0>
<y0>209</y0>
<width>79</width>
<height>28</height>
<text>load(String s)</text>
<px>154</px>
<py>200</py>
</pin>
<relation>
<ID>_R58</ID>
<pin1name>_P57</pin1name>
<pin2name>_X39(_P37)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R26</ID>
<pin1name>_X25(_P1)</pin1name>
<pin2name>_O24</pin2name>
</relation>
<relation>
<ID>_R28</ID>
<pin1name>_P12</pin1name>
<pin2name>_X25(_P2)</pin2name>
</relation>
<pin>
<ID>_P29</ID>
<x0>233</x0>
<y0>435</y0>
<width>71</width>
<height>27</height>
<text>subMenu()</text>
<px>0</px>
<py>124</py>
</pin>
<relation>
<ID>_R31</ID>
<pin1name>_P5</pin1name>
<pin2name>_X25(_P3)</pin2name>
</relation>
<relation>
<ID>_R32</ID>
<pin1name>_P6</pin1name>
<pin2name>_X25(_P4)</pin2name>
</relation>
<relation>
<ID>_R33</ID>
<pin1name>_P7</pin1name>
<pin2name>_X25(_P6)</pin2name>
</relation>
<relation>
<ID>_R34</ID>
<pin1name>_P29</pin1name>
<pin2name>_X25(_P8)</pin2name>
</relation>
<relation>
<ID>_R35</ID>
<pin1name>_P8</pin1name>
<pin2name>_X25(_P7)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_P10</pin1name>
<pin2name>_X25(_P5)</pin2name>
</relation>
<pin>
<ID>_P38</ID>
<x0>63</x0>
<y0>338</y0>
<width>101</width>
<height>31</height>
<text>modefy(String s)</text>
<px>0</px>
<py>182</py>
</pin>
<relation>
<ID>_R42</ID>
<pin1name>_O41</pin1name>
<pin2name>_X25(_P29)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_P38</pin1name>
<pin2name>_O41</pin2name>
</relation>
<operation>
<ID>_O41</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>187</x0>
<y0>303</y0>
<width>144</width>
<height>62</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(Object o)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>39</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>104</outpinx0>
<outpiny0>43</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>修正信号を出力</description>
<codetext></codetext>
</operation>
<pin>
<ID>_P49</ID>
<x0>652</x0>
<y0>430</y0>
<width>84</width>
<height>29</height>
<text>load(String s)</text>
<px>133</px>
<py>116</py>
</pin>
<relation>
<ID>_R50</ID>
<pin1name>_P49</pin1name>
<pin2name>_X25(_P57)</pin2name>
</relation>
</xobject>
<pin>
<ID>_P6</ID>
<x0>601</x0>
<y0>13</y0>
<width>53</width>
<height>23</height>
<text>show()</text>
<px>204</px>
<py>36</py>
</pin>
<relation>
<ID>_R7</ID>
<pin1name>_P6</pin1name>
<pin2name>_X3(_P0)</pin2name>
</relation>
<pin>
<ID>_P10</ID>
<x0>233</x0>
<y0>4</y0>
<width>60</width>
<height>30</height>
<text>closed()</text>
<px>145</px>
<py>6</py>
</pin>
<relation>
<ID>_R11</ID>
<pin1name>_A0(_PGUIclosed)</pin1name>
<pin2name>_P10</pin2name>
</relation>
<relation>
<ID>_R12</ID>
<pin1name>_A0(_PGUIout)</pin1name>
<pin2name>_X3(_P3)</pin2name>
</relation>
<pin>
<ID>_P13</ID>
<x0>610</x0>
<y0>135</y0>
<width>77</width>
<height>23</height>
<text>in( JFrame f)</text>
<px>4</px>
<py>36</py>
</pin>
<relation>
<ID>_R14</ID>
<pin1name>_P13</pin1name>
<pin2name>_X3(_P4)</pin2name>
</relation>
<relation>
<ID>_R15</ID>
<pin1name>_A0(_PA挿入ボタン)</pin1name>
<pin2name>_X3(_P5)</pin2name>
</relation>
<relation>
<ID>_R16</ID>
<pin1name>_A0(_PA追加ボタン)</pin1name>
<pin2name>_X3(_P6)</pin2name>
</relation>
<relation>
<ID>_R17</ID>
<pin1name>_A0(_PA削除ボタン)</pin1name>
<pin2name>_X3(_P7)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_A0(_Pショートカットキーlist)</pin1name>
<pin2name>_X3(_P8)</pin2name>
</relation>
<relation>
<ID>_R23</ID>
<pin1name>_A0(_PAサブメニュー作成ボタン)</pin1name>
<pin2name>_X3(_P29)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_A0(_Pメニューのテキスト)</pin1name>
<pin2name>_X3(_P10)</pin2name>
</relation>
<relation>
<ID>_R22</ID>
<pin1name>_A0(_Pメニューコンテナ)</pin1name>
<pin2name>_X3(_P12)</pin2name>
</relation>
<relation>
<ID>_R25</ID>
<pin1name>_A0(_PAメニューのテキスト)</pin1name>
<pin2name>_X3(_P38)</pin2name>
</relation>
<pin>
<ID>_P27</ID>
<x0>614</x0>
<y0>184</y0>
<width>80</width>
<height>29</height>
<text>load(String s)</text>
<px>82</px>
<py>36</py>
</pin>
<relation>
<ID>_R28</ID>
<pin1name>_P27</pin1name>
<pin2name>_X3(_P49)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R102</ID>
<pin1name>_X36(_P84)</pin1name>
<pin2name>_X90(_P6)</pin2name>
</relation>
<xobject>
<ID>_X106</ID>
<x0>2</x0>
<y0>202</y0>
<width>273</width>
<height>186</height>
<ID_maker>167</ID_maker>
<objectname>ToolButtons</objectname>
<description></description>
<relation>
<ID>_R127</ID>
<pin1name>_X61(_PX23)</pin1name>
<pin2name>_X60(_PX23)</pin2name>
</relation>
<xobject>
<ID>_X60</ID>
<x0>0</x0>
<y0>66</y0>
<width>752</width>
<height>34</height>
<ID_maker>52</ID_maker>
<objectname>TextArea</objectname>
<description>ボタンをクリックすると上位コンポーネントにTextFieldを貼り付けるツール
</description>
<relation>
<ID>_R44</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A43(_PX11)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_A43(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_A43(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<xobject>
<ID>_X34</ID>
<x0>328</x0>
<y0>87</y0>
<width>272</width>
<height>98</height>
<ID_maker>51</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>227</width>
<height>68</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>10</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>109</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>32</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>118</x0>
<y0>244</y0>
<width>112</width>
<height>23</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>135</px>
<py>7</py>
</pin>
<pin>
<ID>_P8</ID>
<x0>305</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>417</x0>
<y0>88</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>181</px>
<py>14</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>21</px>
<py>57</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>190</x0>
<y0>283</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>114</x0>
<y0>14</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>415</x0>
<y0>145</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>7</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>412</x0>
<y0>9</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>412</x0>
<y0>50</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<xobject>
<ID>_X40</ID>
<x0>178</x0>
<y0>43</y0>
<width>212</width>
<height>131</height>
<ID_maker>165</ID_maker>
<objectname>PropertiesTextArea</objectname>
<description></description>
<xobject>
<ID>_X107</ID>
<x0>81</x0>
<y0>303</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>FontSize</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>219</width>
<height>22</height>
<codetext>String LabelName=&quot;文字のサイズ&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JComponent)cmp).getFont().getSize()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>Font f = ((JComponent)cmp).getFont();
String nm = f.getName(); 
int st = f.getStyle();
((JComponent)cmp).setFont(new Font( nm, st,(new Integer(0)).parseInt(data.getText()) ) );
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X118</ID>
<x0>81</x0>
<y0>271</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>FontName</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
int st = ((JComponent)cmp).getFont().getStyle();
int si = ((JComponent)cmp).getFont().getSize();
Font f = new Font( fonts[index],st,si);
//System.out.println( f );
((JComponent)cmp).setFont( f );
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp = c;
int si = ((JComponent)cmp).getFont().getSize();
int st =((JComponent)cmp).getFont().getStyle(); 
String nm = ((JComponent)cmp).getFont().getName();
for( index = fonts.length-1; index &gt;0 &amp;&amp; (! nm.equals( fonts[index])); index-- );
list.setSelectedIndex(index);
Font f = new Font(fonts[index],st, si );
//System.out.println(f);
((JComponent)cmp).setFont(f );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>fonts = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
list =new inlist(fonts);
list.setVisibleRowCount(1);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>189</width>
<height>21</height>
<codetext>String[] fonts;//フォントの種類
</codetext>
</codeclip>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>103</y0>
<width>186</width>
<height>22</height>
<codetext>String LabelName=&quot;書体&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X136</ID>
<x0>81</x0>
<y0>141</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;T_AREA&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<relation>
<ID>_R147</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X136(_PX3)</pin2name>
</relation>
<relation>
<ID>_R126</ID>
<pin1name>_XX24(_PX4)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_R148</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R127</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R128</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X118(_PX4)</pin2name>
</relation>
<relation>
<ID>_R129</ID>
<pin1name>_X118(_PX4)</pin1name>
<pin2name>_X107(_PX4)</pin2name>
</relation>
<relation>
<ID>_R138</ID>
<pin1name>_X136(_PX3)</pin1name>
<pin2name>_XX24(_PX3)</pin2name>
</relation>
<relation>
<ID>_R139</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X136(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX58</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_XX24(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_XX24(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_X136(_PX4)</pin1name>
<pin2name>_XX24(_PX4)</pin2name>
</relation>
<relation>
<ID>_R142</ID>
<pin1name>_XX24(_PX5)</pin1name>
<pin2name>_X136(_PX5)</pin2name>
</relation>
<relation>
<ID>_R143</ID>
<pin1name>_X136(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_R130</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X118(_PX3)</pin2name>
</relation>
<pin>
<ID>_PX5</ID>
<x0>384</x0>
<y0>39</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>7</px>
<py>75</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>330</x0>
<y0>37</y0>
<width>52</width>
<height>22</height>
<text>reset()</text>
<px>158</px>
<py>45</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>178</x0>
<y0>43</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>95</px>
<py>105</py>
</pin>
<pin>
<ID>_PX7</ID>
<x0>289</x0>
<y0>10</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>8</px>
<py>41</py>
</pin>
<xobject>
<ID>_XX24</ID>
<x0>81</x0>
<y0>173</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>Text</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JTextArea)cmp).setText(data.getText());
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JTextArea)cmp).getText());
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>184</width>
<height>22</height>
<codetext>String LabelName=&quot;テキスト&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX34</ID>
<x0>81</x0>
<y0>205</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>12</x0>
<y0>298</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;文字の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX35</ID>
<x0>495</x0>
<y0>37</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>155</px>
<py>1</py>
</pin>
<pin>
<ID>_PX39</ID>
<x0>540</x0>
<y0>39</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>139</px>
<py>24</py>
</pin>
<xobject>
<ID>_XX64</ID>
<x0>81</x0>
<y0>238</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>9</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>7</x0>
<y0>290</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>13</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>10</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R131</ID>
<pin1name>_X118(_PX3)</pin1name>
<pin2name>_X107(_PX3)</pin2name>
</relation>
<relation>
<ID>_R134</ID>
<pin1name>_X118(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<relation>
<ID>_R135</ID>
<pin1name>_X107(_PX5)</pin1name>
<pin2name>_X118(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X149</ID>
<x0>81</x0>
<y0>335</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJTextArea)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJTextArea cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R150</ID>
<pin1name>_X107(_PX3)</pin1name>
<pin2name>_X149(_PX3)</pin2name>
</relation>
<relation>
<ID>_R151</ID>
<pin1name>_X107(_PX4)</pin1name>
<pin2name>_X149(_PX4)</pin2name>
</relation>
<relation>
<ID>_R152</ID>
<pin1name>_X149(_PX5)</pin1name>
<pin2name>_X107(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X153</ID>
<x0>81</x0>
<y0>367</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Scrollable</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;スクロール可能&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJTextArea)c;
data.setSelected(cmp.is_scrollable);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.is_scrollable=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJTextArea cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R154</ID>
<pin1name>_X149(_PX3)</pin1name>
<pin2name>_X153(_PX3)</pin2name>
</relation>
<relation>
<ID>_R155</ID>
<pin1name>_X149(_PX4)</pin1name>
<pin2name>_X153(_PX4)</pin2name>
</relation>
<relation>
<ID>_R156</ID>
<pin1name>_X153(_PX5)</pin1name>
<pin2name>_X149(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X157</ID>
<x0>81</x0>
<y0>399</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJTextArea)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJTextArea cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R158</ID>
<pin1name>_X153(_PX3)</pin1name>
<pin2name>_X157(_PX3)</pin2name>
</relation>
<relation>
<ID>_R159</ID>
<pin1name>_X153(_PX4)</pin1name>
<pin2name>_X157(_PX4)</pin2name>
</relation>
<relation>
<ID>_R160</ID>
<pin1name>_X157(_PX5)</pin1name>
<pin2name>_X153(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X161</ID>
<x0>81</x0>
<y0>431</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJTextArea)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJTextArea)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R162</ID>
<pin1name>_X157(_PX3)</pin1name>
<pin2name>_X161(_PX3)</pin2name>
</relation>
<relation>
<ID>_R163</ID>
<pin1name>_X157(_PX4)</pin1name>
<pin2name>_X161(_PX4)</pin2name>
</relation>
<relation>
<ID>_R164</ID>
<pin1name>_X161(_PX5)</pin1name>
<pin2name>_X157(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R41</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X40(_PX7)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_X40(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_X40(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
<relation>
<ID>_R44</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X40(_PX39)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X40(_PX2)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_X40(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_X40(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
<relation>
<ID>_R50</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X40(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R35</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X34(_PX3)</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_X34(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X34(_PX24)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_X34(_P38)</pin1name>
<pin2name>_P33</pin2name>
</relation>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<codeclip>
<ID>_CX29</ID>
<x0>89</x0>
<y0>281</y0>
<width>293</width>
<height>30</height>
<codetext>String ImageFile=&quot;resources/textarea.jpg&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX23</ID>
<x0>512</x0>
<y0>33</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>702</px>
<py>0</py>
</pin>
<relation>
<ID>_R40</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X34(_PX27)</pin2name>
</relation>
<xobject>
<ID>_XX7</ID>
<x0>156</x0>
<y0>27</y0>
<width>166</width>
<height>128</height>
<ID_maker>29</ID_maker>
<objectname>TextAreaResizable</objectname>
<description>ラベル</description>
<relation>
<ID>_RX15</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX1</ID>
<x0>41</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>110</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>3</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>18</px>
<py>57</py>
</pin>
<aobject>
<ID>_AX3</ID>
<x0>150</x0>
<y0>33</y0>
<width>301</width>
<height>170</height>
<ID_maker>34</ID_maker>
<objectname>XTextArea</objectname>
<description>TextAreaの内部オブジェクト
マウスイベントを発生する
</description>
<pin>
<ID>_PX23</ID>
<x0>112</x0>
<y0>22</y0>
<width>107</width>
<height>22</height>
<text>enter(String text )</text>
<px>118</px>
<py>50</py>
</pin>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>135</px>
<py>35</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>108</x0>
<y0>0</y0>
<width>109</width>
<height>22</height>
<codetext>intextarea txt;
class intextarea extends XJTextArea implements MouseListener, MouseMotionListener, KeyListener{
intextarea(String s){
setText(s);
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
addMouseListener(this);
addMouseMotionListener(this);
validate();
repaint();
}

public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){released((Component)this, e.getX(), e.getY()); }
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void keyPressed(KeyEvent e){ key_pressed(this, e.getKeyCode()); }
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>155</x0>
<y0>253</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>24</px>
<py>31</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>2</inconnectx0>
<inconnecty0>23</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>47</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=txt;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>255</x0>
<y0>237</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>253</x0>
<y0>115</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>85</x0>
<y0>145</y0>
<width>119</width>
<height>64</height>
<inconnectx0>102</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>102</outconnectx0>
<outconnecty0>6</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>80</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// インスタンスを
// 生成する
txt= new  intextarea(Text);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>251</x0>
<y0>319</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>117</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_P25</ID>
<x0>28</x0>
<y0>409</y0>
<width>89</width>
<height>23</height>
<text>Load(String s)</text>
<px>6</px>
<py>136</py>
</pin>
<operation>
<ID>_O26</ID>
<state1>_SINIT</state1>
<state2>_S28</state2>
<x0>30</x0>
<y0>302</y0>
<width>192</width>
<height>80</height>
<inconnectx0>148</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>174</outconnectx0>
<outconnecty0>57</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>84</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>83</outpinx0>
<outpiny0>60</outpiny0>
<outpinwidth>110</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;TEXTAREA&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;TEXTAREA&quot;) ) ) return;
txt = new intextarea(&quot; &quot;);
c = txt;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();
</codetext>
</operation>
<operation>
<ID>_O27</ID>
<state1>_S28</state1>
<state2>_SINIT</state2>
<x0>389</x0>
<y0>287</y0>
<width>127</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>43</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
txt.setName( fld.nextToken() );
String s = fld.nextToken();
if( s.equals(&quot;null&quot;) ) txt.setText(&quot;&quot;); else txt.setText( s );
txt.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
txt.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
txt.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
txt.setFont( new Font( fld.nextToken(),Font.PLAIN,parseInt(fld.nextToken()) ) );
if( fld.hasMoreTokens() ) txt.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) txt.is_scrollable = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) txt.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) txt.super_class[AppTyp] = fld.nextToken();
</codetext>
</operation>
<state>
<ID>_S28</ID>
<x0>276</x0>
<y0>402</y0>
<width>70</width>
<height>40</height>
<text>     状態2</text>
<isinitstate>0</isinitstate>
</state>
<action>
<ID>_A29</ID>
<comp1name>_O26</comp1name>
<comp2name>_PX6</comp2name>
</action>
<action>
<ID>_A30</ID>
<comp1name>_P25</comp1name>
<comp2name>_O26</comp2name>
</action>
<codeclip>
<ID>_C31</ID>
<x0>125</x0>
<y0>60</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P32</ID>
<x0>457</x0>
<y0>22</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P33</ID>
<x0>435</x0>
<y0>47</y0>
<width>234</width>
<height>21</height>
<text>key_pressed( Component c, int key)</text>
<px>42</px>
<py>150</py>
</pin>
</aobject>
<codeclip>
<ID>_CX6</ID>
<x0>132</x0>
<y0>6</y0>
<width>291</width>
<height>22</height>
<codetext>String Text=&quot;Text&quot;;//Textの内容
</codetext>
</codeclip>
<pin>
<ID>_PX14</ID>
<x0>1</x0>
<y0>143</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>16</px>
<py>83</py>
</pin>
<pin>
<ID>_P22</ID>
<x0>19</x0>
<y0>190</y0>
<width>89</width>
<height>26</height>
<text>Load(String s)</text>
<px>12</px>
<py>33</py>
</pin>
<relation>
<ID>_R23</ID>
<pin1name>_P22</pin1name>
<pin2name>_AX3(_P25)</pin2name>
</relation>
<aobject>
<ID>_A24</ID>
<x0>539</x0>
<y0>81</y0>
<width>270</width>
<height>126</height>
<ID_maker>19</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>673</x0>
<y0>220</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>4</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>409</x0>
<y0>129</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>55</x0>
<y0>316</y0>
<width>242</width>
<height>27</height>
<text>key_pressed( Component c, int key)</text>
<px>11</px>
<py>95</py>
</pin>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>360</x0>
<y0>299</y0>
<width>170</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A18</ID>
<comp1name>_P14</comp1name>
<comp2name>_O17</comp2name>
</action>
</aobject>
<relation>
<ID>_R25</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_A24(_PX2)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_A24(_PX1)</pin2name>
</relation>
<relation>
<ID>_R27</ID>
<pin1name>_AX3(_P32)</pin1name>
<pin2name>_A24(_P11)</pin2name>
</relation>
<relation>
<ID>_R28</ID>
<pin1name>_AX3(_P33)</pin1name>
<pin2name>_A24(_P14)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX3</ID>
<x0>328</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>95</px>
<py>0</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>220</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>259</px>
<py>18</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>359</x0>
<y0>33</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>15</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>8</x0>
<y0>106</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>0</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>416</x0>
<y0>241</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>2</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>510</x0>
<y0>242</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>633</px>
<py>16</py>
</pin>
<relation>
<ID>_R41</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X34(_PX1)</pin2name>
</relation>
<pin>
<ID>_P33</ID>
<x0>611</x0>
<y0>118</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<aobject>
<ID>_A43</ID>
<x0>153</x0>
<y0>184</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>42</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
b.setToolTipText(&quot;テキストエリア&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>97</px>
<py>25</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>107</x0>
<y0>4</y0>
<width>320</width>
<height>20</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>103</px>
<py>62</py>
</pin>
</aobject>
<pin>
<ID>_P48</ID>
<x0>18</x0>
<y0>46</y0>
<width>86</width>
<height>26</height>
<text>Load(String s)</text>
<px>122</px>
<py>15</py>
</pin>
<relation>
<ID>_R49</ID>
<pin1name>_P48</pin1name>
<pin2name>_XX7(_P22)</pin2name>
</relation>
<relation>
<ID>_R50</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X34(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_RX57</ID>
<pin1name>_XX45(_PX20)</pin1name>
<pin2name>_XX4(_PX20)</pin2name>
</relation>
<xobject>
<ID>_X61</ID>
<x0>0</x0>
<y0>99</y0>
<width>752</width>
<height>32</height>
<ID_maker>52</ID_maker>
<objectname>TextField</objectname>
<description>ボタンをクリックすると上位コンポーネントにTextFieldを貼り付けるツール
</description>
<aobject>
<ID>_A45</ID>
<x0>154</x0>
<y0>196</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>42</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
b.setToolTipText(&quot;テキストフィールド&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>97</px>
<py>25</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>126</x0>
<y0>8</y0>
<width>318</width>
<height>21</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>103</px>
<py>62</py>
</pin>
</aobject>
<relation>
<ID>_R46</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A45(_PX11)</pin2name>
</relation>
<relation>
<ID>_R47</ID>
<pin1name>_A45(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<xobject>
<ID>_X32</ID>
<x0>333</x0>
<y0>99</y0>
<width>272</width>
<height>98</height>
<ID_maker>50</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>227</width>
<height>68</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>17</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>118</x0>
<y0>244</y0>
<width>114</width>
<height>26</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>33</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>134</px>
<py>4</py>
</pin>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<pin>
<ID>_P8</ID>
<x0>306</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
</aobject>
<relation>
<ID>_R46</ID>
<pin1name>_X40(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>421</x0>
<y0>107</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>181</px>
<py>14</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>135</width>
<height>27</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>25</px>
<py>67</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>190</x0>
<y0>283</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>118</x0>
<y0>14</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>416</x0>
<y0>158</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>7</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>409</x0>
<y0>15</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>417</x0>
<y0>59</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R47</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X40(_PX1)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<xobject>
<ID>_X40</ID>
<x0>180</x0>
<y0>40</y0>
<width>212</width>
<height>131</height>
<ID_maker>166</ID_maker>
<objectname>PropertiesTextField</objectname>
<description></description>
<xobject>
<ID>_X107</ID>
<x0>89</x0>
<y0>242</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>FontSize</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>202</width>
<height>23</height>
<codetext>String LabelName=&quot;文字のサイズ&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JComponent)cmp).getFont().getSize()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>Font f = ((JComponent)cmp).getFont();
String nm = f.getName(); 
int st = f.getStyle();
((JComponent)cmp).setFont(new Font( nm, st,(new Integer(0)).parseInt(data.getText()) ) );
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X118</ID>
<x0>89</x0>
<y0>210</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>FontName</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
int st = ((JComponent)cmp).getFont().getStyle();
int si = ((JComponent)cmp).getFont().getSize();
Font f = new Font( fonts[index],st,si);
//System.out.println( f );
((JComponent)cmp).setFont( f );
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp = c;
int si = ((JComponent)cmp).getFont().getSize();
int st =((JComponent)cmp).getFont().getStyle(); 
String nm = ((JComponent)cmp).getFont().getName();
for( index = fonts.length-1; index &gt;0 &amp;&amp; (! nm.equals( fonts[index])); index-- );
list.setSelectedIndex(index);
Font f = new Font(fonts[index],st, si );
//System.out.println(f);
((JComponent)cmp).setFont(f );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>fonts = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
list =new inlist(fonts);
list.setVisibleRowCount(1);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>189</width>
<height>21</height>
<codetext>String[] fonts;//フォントの種類
</codetext>
</codeclip>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>167</width>
<height>26</height>
<codetext>String LabelName=&quot;書体&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X136</ID>
<x0>89</x0>
<y0>80</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;T_FIELD&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<relation>
<ID>_R137</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X136(_PX3)</pin2name>
</relation>
<relation>
<ID>_R126</ID>
<pin1name>_XX24(_PX4)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_R145</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R127</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R128</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X118(_PX4)</pin2name>
</relation>
<relation>
<ID>_R129</ID>
<pin1name>_X118(_PX4)</pin1name>
<pin2name>_X107(_PX4)</pin2name>
</relation>
<relation>
<ID>_R138</ID>
<pin1name>_X136(_PX3)</pin1name>
<pin2name>_XX24(_PX3)</pin2name>
</relation>
<relation>
<ID>_R139</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X136(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX58</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_XX24(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_XX24(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_X136(_PX4)</pin1name>
<pin2name>_XX24(_PX4)</pin2name>
</relation>
<relation>
<ID>_R143</ID>
<pin1name>_XX24(_PX5)</pin1name>
<pin2name>_X136(_PX5)</pin2name>
</relation>
<relation>
<ID>_R130</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X118(_PX3)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_X136(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX5</ID>
<x0>392</x0>
<y0>37</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>5</px>
<py>72</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>343</x0>
<y0>39</y0>
<width>43</width>
<height>21</height>
<text>reset()</text>
<px>163</px>
<py>66</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>186</x0>
<y0>41</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>83</px>
<py>109</py>
</pin>
<pin>
<ID>_PX7</ID>
<x0>297</x0>
<y0>14</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>8</px>
<py>41</py>
</pin>
<xobject>
<ID>_XX24</ID>
<x0>89</x0>
<y0>112</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>Text</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JTextField)cmp).setText(data.getText());
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JTextField)cmp).getText());
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;テキスト&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX34</ID>
<x0>89</x0>
<y0>144</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>22</x0>
<y0>290</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;文字の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX35</ID>
<x0>503</x0>
<y0>37</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>161</px>
<py>11</py>
</pin>
<pin>
<ID>_PX39</ID>
<x0>548</x0>
<y0>37</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>146</px>
<py>36</py>
</pin>
<xobject>
<ID>_XX64</ID>
<x0>89</x0>
<y0>177</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>9</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>23</x0>
<y0>290</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;Change&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R131</ID>
<pin1name>_X118(_PX3)</pin1name>
<pin2name>_X107(_PX3)</pin2name>
</relation>
<relation>
<ID>_R134</ID>
<pin1name>_X118(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<relation>
<ID>_R135</ID>
<pin1name>_X107(_PX5)</pin1name>
<pin2name>_X118(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X150</ID>
<x0>89</x0>
<y0>274</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJTextField)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJTextField cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R151</ID>
<pin1name>_X107(_PX3)</pin1name>
<pin2name>_X150(_PX3)</pin2name>
</relation>
<relation>
<ID>_R152</ID>
<pin1name>_X107(_PX4)</pin1name>
<pin2name>_X150(_PX4)</pin2name>
</relation>
<relation>
<ID>_R153</ID>
<pin1name>_X150(_PX5)</pin1name>
<pin2name>_X107(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X154</ID>
<x0>89</x0>
<y0>306</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ラベルのインスタンスを
// 生成する
lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJTextField)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJTextField cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X155</ID>
<x0>89</x0>
<y0>338</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>input_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;inputピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJTextField)c;
data.setSelected(cmp.print_input_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.print_input_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJTextField cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R156</ID>
<pin1name>_X150(_PX3)</pin1name>
<pin2name>_X154(_PX3)</pin2name>
</relation>
<relation>
<ID>_R157</ID>
<pin1name>_X154(_PX3)</pin1name>
<pin2name>_X155(_PX3)</pin2name>
</relation>
<relation>
<ID>_R158</ID>
<pin1name>_X150(_PX4)</pin1name>
<pin2name>_X154(_PX4)</pin2name>
</relation>
<relation>
<ID>_R159</ID>
<pin1name>_X154(_PX4)</pin1name>
<pin2name>_X155(_PX4)</pin2name>
</relation>
<relation>
<ID>_R160</ID>
<pin1name>_X154(_PX5)</pin1name>
<pin2name>_X150(_PX5)</pin2name>
</relation>
<relation>
<ID>_R161</ID>
<pin1name>_X155(_PX5)</pin1name>
<pin2name>_X154(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X162</ID>
<x0>89</x0>
<y0>370</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJTextField)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJTextField)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R163</ID>
<pin1name>_X155(_PX3)</pin1name>
<pin2name>_X162(_PX3)</pin2name>
</relation>
<relation>
<ID>_R164</ID>
<pin1name>_X155(_PX4)</pin1name>
<pin2name>_X162(_PX4)</pin2name>
</relation>
<relation>
<ID>_R165</ID>
<pin1name>_X162(_PX5)</pin1name>
<pin2name>_X155(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R41</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X40(_PX7)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_X40(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X40(_PX39)</pin2name>
</relation>
<relation>
<ID>_R44</ID>
<pin1name>_X40(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X40(_PX2)</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_X40(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R33</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X32(_PX3)</pin2name>
</relation>
<relation>
<ID>_R34</ID>
<pin1name>_X32(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R35</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X32(_PX24)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X32(_PX27)</pin2name>
</relation>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_A45(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX23</ID>
<x0>512</x0>
<y0>33</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>702</px>
<py>0</py>
</pin>
<relation>
<ID>_R37</ID>
<pin1name>_X32(_P38)</pin1name>
<pin2name>_P31</pin2name>
</relation>
<xobject>
<ID>_XX7</ID>
<x0>156</x0>
<y0>42</y0>
<width>166</width>
<height>128</height>
<ID_maker>27</ID_maker>
<objectname>TextFieldResizable</objectname>
<description>ラベル</description>
<relation>
<ID>_RX15</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX1</ID>
<x0>41</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>110</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>3</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>29</px>
<py>58</py>
</pin>
<aobject>
<ID>_AX3</ID>
<x0>150</x0>
<y0>33</y0>
<width>269</width>
<height>193</height>
<ID_maker>33</ID_maker>
<objectname>XTextField</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<pin>
<ID>_PX23</ID>
<x0>112</x0>
<y0>22</y0>
<width>107</width>
<height>22</height>
<text>enter(String text )</text>
<px>87</px>
<py>19</py>
</pin>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>135</px>
<py>35</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>108</x0>
<y0>0</y0>
<width>109</width>
<height>22</height>
<codetext>intextfield txt;
class intextfield extends XJTextField implements MouseListener, MouseMotionListener, ActionListener, KeyListener{
intextfield(String s){
setText(s);
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
addActionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){released( (Component)this, e.getX(), e.getY());}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void actionPerformed(ActionEvent e){ enter( getText() ); }
public void keyPressed(KeyEvent e){ key_pressed(this, e.getKeyCode()); }
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>142</x0>
<y0>250</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>29</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>404</x0>
<y0>130</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>23</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>49</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)txt;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>263</x0>
<y0>219</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>259</x0>
<y0>112</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>81</x0>
<y0>144</y0>
<width>119</width>
<height>64</height>
<inconnectx0>102</inconnectx0>
<inconnecty0>24</inconnecty0>
<outconnectx0>99</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>79</inpinx0>
<inpiny0>45</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// インスタンスを
// 生成する
txt= new  intextfield(Text);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>261</x0>
<y0>305</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>120</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<operation>
<ID>_O24</ID>
<state1>_SINIT</state1>
<state2>_S26</state2>
<x0>31</x0>
<y0>299</y0>
<width>199</width>
<height>83</height>
<inconnectx0>181</inconnectx0>
<inconnecty0>11</inconnecty0>
<outconnectx0>182</outconnectx0>
<outconnecty0>56</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>62</outpiny0>
<outpinwidth>110</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;TEXTFIELD&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;TEXTFIELD&quot;) ) ) return;
txt = new intextfield(&quot; &quot;);
c = txt;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();
</codetext>
</operation>
<operation>
<ID>_O25</ID>
<state1>_S26</state1>
<state2>_SINIT</state2>
<x0>429</x0>
<y0>300</y0>
<width>127</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>48</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>20</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
txt.setName( fld.nextToken() );
String s= fld.nextToken();
if( s.equals(&quot;null&quot;) ) txt.setText(&quot;&quot;); else txt.setText( s );
txt.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
txt.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
txt.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
txt.setFont( new Font( fld.nextToken(),Font.PLAIN,parseInt(fld.nextToken()) ) );
if( fld.hasMoreTokens() ) txt.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) txt.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) txt.print_input_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) txt.super_class[AppTyp] = fld.nextToken();
</codetext>
</operation>
<state>
<ID>_S26</ID>
<x0>285</x0>
<y0>385</y0>
<width>70</width>
<height>40</height>
<text>      状z態２</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_P27</ID>
<x0>21</x0>
<y0>432</y0>
<width>88</width>
<height>27</height>
<text>Load(String s)</text>
<px>31</px>
<py>141</py>
</pin>
<action>
<ID>_A28</ID>
<comp1name>_P27</comp1name>
<comp2name>_O24</comp2name>
</action>
<action>
<ID>_A29</ID>
<comp1name>_O24</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_C30</ID>
<x0>152</x0>
<y0>68</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P31</ID>
<x0>455</x0>
<y0>22</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P32</ID>
<x0>424</x0>
<y0>54</y0>
<width>234</width>
<height>23</height>
<text>key_pressed( Component c, int key)</text>
<px>3</px>
<py>165</py>
</pin>
</aobject>
<codeclip>
<ID>_CX6</ID>
<x0>132</x0>
<y0>6</y0>
<width>291</width>
<height>22</height>
<codetext>String Text=&quot;Text&quot;;//Textの内容
</codetext>
</codeclip>
<pin>
<ID>_PX14</ID>
<x0>0</x0>
<y0>146</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>7</px>
<py>91</py>
</pin>
<pin>
<ID>_P20</ID>
<x0>26</x0>
<y0>182</y0>
<width>88</width>
<height>26</height>
<text>Load(String s)</text>
<px>8</px>
<py>33</py>
</pin>
<relation>
<ID>_R21</ID>
<pin1name>_P20</pin1name>
<pin2name>_AX3(_P27)</pin2name>
</relation>
<aobject>
<ID>_A22</ID>
<x0>486</x0>
<y0>86</y0>
<width>271</width>
<height>122</height>
<ID_maker>19</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>666</x0>
<y0>219</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>4</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>410</x0>
<y0>118</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>50</x0>
<y0>310</y0>
<width>235</width>
<height>23</height>
<text>key_pressed( Component c, int key)</text>
<px>0</px>
<py>91</py>
</pin>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>341</x0>
<y0>282</y0>
<width>170</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A18</ID>
<comp1name>_P14</comp1name>
<comp2name>_O17</comp2name>
</action>
</aobject>
<relation>
<ID>_R23</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_A22(_PX2)</pin2name>
</relation>
<relation>
<ID>_R24</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_A22(_PX1)</pin2name>
</relation>
<relation>
<ID>_R25</ID>
<pin1name>_AX3(_P31)</pin1name>
<pin2name>_A22(_P11)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_AX3(_P32)</pin1name>
<pin2name>_A22(_P14)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX3</ID>
<x0>327</x0>
<y0>238</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>0</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>220</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>259</px>
<py>16</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>360</x0>
<y0>30</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>13</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>5</x0>
<y0>129</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>0</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>417</x0>
<y0>241</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>1</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>511</x0>
<y0>241</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>633</px>
<py>13</py>
</pin>
<relation>
<ID>_R38</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X32(_PX1)</pin2name>
</relation>
<pin>
<ID>_P31</ID>
<x0>608</x0>
<y0>133</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<codeclip>
<ID>_C44</ID>
<x0>145</x0>
<y0>304</y0>
<width>290</width>
<height>28</height>
<codetext>String ImageFile=&quot;resources/textfield.jpg&quot;;
</codetext>
</codeclip>
<pin>
<ID>_P49</ID>
<x0>21</x0>
<y0>48</y0>
<width>88</width>
<height>25</height>
<text>Load(String s)</text>
<px>122</px>
<py>14</py>
</pin>
<relation>
<ID>_R50</ID>
<pin1name>_P49</pin1name>
<pin2name>_XX7(_P20)</pin2name>
</relation>
<relation>
<ID>_R51</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X32(_PX1)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X62</ID>
<x0>0</x0>
<y0>130</y0>
<width>752</width>
<height>33</height>
<ID_maker>54</ID_maker>
<objectname>HSlider</objectname>
<description>ボタンをクリックすると上位コンポーネントに水平Sliderを貼り付けるツール
</description>
<aobject>
<ID>_A47</ID>
<x0>151</x0>
<y0>193</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>42</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
b.setToolTipText(&quot;水平スライダ&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>97</px>
<py>25</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>102</x0>
<y0>3</y0>
<width>320</width>
<height>21</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>103</px>
<py>62</py>
</pin>
</aobject>
<relation>
<ID>_R48</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A47(_PX11)</pin2name>
</relation>
<relation>
<ID>_R49</ID>
<pin1name>_A47(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<xobject>
<ID>_X35</ID>
<x0>333</x0>
<y0>88</y0>
<width>272</width>
<height>98</height>
<ID_maker>49</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>227</width>
<height>68</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>51</inpiny0>
<inpinwidth>108</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>117</x0>
<y0>244</y0>
<width>112</width>
<height>25</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>34</outpinx0>
<outpiny0>71</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>133</px>
<py>1</py>
</pin>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<pin>
<ID>_P8</ID>
<x0>306</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
</aobject>
<relation>
<ID>_R44</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X40(_PX1)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>445</x0>
<y0>110</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>181</px>
<py>14</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>21</px>
<py>57</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>190</x0>
<y0>283</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>148</x0>
<y0>24</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>405</x0>
<y0>210</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>7</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>444</x0>
<y0>29</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>431</x0>
<y0>72</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R45</ID>
<pin1name>_X40(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<xobject>
<ID>_X40</ID>
<x0>204</x0>
<y0>38</y0>
<width>212</width>
<height>131</height>
<ID_maker>154</ID_maker>
<objectname>PropertiesHSlider</objectname>
<description></description>
<xobject>
<ID>_X124</ID>
<x0>77</x0>
<y0>102</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;HSLIDER&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<relation>
<ID>_R125</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X124(_PX3)</pin2name>
</relation>
<relation>
<ID>_R126</ID>
<pin1name>_X124(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<relation>
<ID>_R127</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X124(_PX4)</pin2name>
</relation>
<relation>
<ID>_R128</ID>
<pin1name>_X124(_PX4)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R113</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R133</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R131</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_X124(_PX5)</pin2name>
</relation>
<xobject>
<ID>_XX64</ID>
<x0>77</x0>
<y0>167</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>31</x0>
<y0>289</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>9</py>
</pin>
</xobject>
<pin>
<ID>_PX39</ID>
<x0>536</x0>
<y0>65</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>141</px>
<py>35</py>
</pin>
<pin>
<ID>_PX35</ID>
<x0>491</x0>
<y0>65</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>148</px>
<py>15</py>
</pin>
<xobject>
<ID>_XX34</ID>
<x0>77</x0>
<y0>134</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>141</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>1</px>
<py>73</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>116</px>
<py>117</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>19</x0>
<y0>284</y0>
<width>245</width>
<height>23</height>
<codetext>String LabelName=&quot;コンポーネントの色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
</xobject>
<pin>
<ID>_PX7</ID>
<x0>285</x0>
<y0>47</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>8</px>
<py>41</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>174</x0>
<y0>69</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>86</px>
<py>114</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>330</x0>
<y0>65</y0>
<width>45</width>
<height>24</height>
<text>reset()</text>
<px>159</px>
<py>69</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>380</x0>
<y0>67</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>7</px>
<py>86</py>
</pin>
<relation>
<ID>_R132</ID>
<pin1name>_X124(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<xobject>
<ID>_X114</ID>
<x0>77</x0>
<y0>200</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>MIN_Value</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>202</width>
<height>23</height>
<codetext>String LabelName=&quot;最小値&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JSlider)cmp).getMinimum()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JSlider)cmp).setMinimum( ( new Integer(0)).parseInt(data.getText()));
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R115</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X114(_PX3)</pin2name>
</relation>
<relation>
<ID>_R116</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X114(_PX4)</pin2name>
</relation>
<relation>
<ID>_R118</ID>
<pin1name>_X114(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X119</ID>
<x0>77</x0>
<y0>232</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>MAX_Value</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>101</y0>
<width>202</width>
<height>23</height>
<codetext>String LabelName=&quot;最大値&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JSlider)cmp).getMaximum()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JSlider)cmp).setMaximum( ( new Integer(0)).parseInt(data.getText()));
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R120</ID>
<pin1name>_X114(_PX3)</pin1name>
<pin2name>_X119(_PX3)</pin2name>
</relation>
<relation>
<ID>_R121</ID>
<pin1name>_X114(_PX4)</pin1name>
<pin2name>_X119(_PX4)</pin2name>
</relation>
<relation>
<ID>_R123</ID>
<pin1name>_X119(_PX5)</pin1name>
<pin2name>_X114(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X138</ID>
<x0>77</x0>
<y0>264</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJHSlider)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJHSlider cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R139</ID>
<pin1name>_X119(_PX3)</pin1name>
<pin2name>_X138(_PX3)</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_X119(_PX4)</pin1name>
<pin2name>_X138(_PX4)</pin2name>
</relation>
<relation>
<ID>_R141</ID>
<pin1name>_X138(_PX5)</pin1name>
<pin2name>_X119(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X142</ID>
<x0>77</x0>
<y0>297</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJHSlider)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJHSlider cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R143</ID>
<pin1name>_X138(_PX3)</pin1name>
<pin2name>_X142(_PX3)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_X138(_PX4)</pin1name>
<pin2name>_X142(_PX4)</pin2name>
</relation>
<relation>
<ID>_R145</ID>
<pin1name>_X142(_PX5)</pin1name>
<pin2name>_X138(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X146</ID>
<x0>77</x0>
<y0>329</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>chaged_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;changedピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJHSlider)c;
data.setSelected(cmp.print_changed_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.print_changed_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJHSlider cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R147</ID>
<pin1name>_X142(_PX3)</pin1name>
<pin2name>_X146(_PX3)</pin2name>
</relation>
<relation>
<ID>_R148</ID>
<pin1name>_X142(_PX4)</pin1name>
<pin2name>_X146(_PX4)</pin2name>
</relation>
<relation>
<ID>_R149</ID>
<pin1name>_X146(_PX5)</pin1name>
<pin2name>_X142(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X150</ID>
<x0>77</x0>
<y0>361</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJHSlider)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJHSlider)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R151</ID>
<pin1name>_X146(_PX3)</pin1name>
<pin2name>_X150(_PX3)</pin2name>
</relation>
<relation>
<ID>_R152</ID>
<pin1name>_X146(_PX4)</pin1name>
<pin2name>_X150(_PX4)</pin2name>
</relation>
<relation>
<ID>_R153</ID>
<pin1name>_X150(_PX5)</pin1name>
<pin2name>_X146(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R41</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X40(_PX7)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_X40(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_X40(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X40(_PX2)</pin2name>
</relation>
<relation>
<ID>_R47</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X40(_PX39)</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_X40(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
</xobject>
<relation>
<ID>_R36</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X35(_PX3)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_X35(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X35(_PX24)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X35(_PX27)</pin2name>
</relation>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<pin>
<ID>_PX20</ID>
<x0>510</x0>
<y0>242</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>633</px>
<py>15</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>416</x0>
<y0>241</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>1</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>5</x0>
<y0>106</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>1</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>353</x0>
<y0>32</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>16</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>220</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>258</px>
<py>16</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>328</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>0</py>
</pin>
<xobject>
<ID>_XX7</ID>
<x0>148</x0>
<y0>41</y0>
<width>166</width>
<height>128</height>
<ID_maker>28</ID_maker>
<objectname>HSlderResizable</objectname>
<description>水平スライダ(可変サイズ)</description>
<relation>
<ID>_RX15</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX14</ID>
<x0>2</x0>
<y0>146</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>12</px>
<py>74</py>
</pin>
<aobject>
<ID>_AX3</ID>
<x0>150</x0>
<y0>33</y0>
<width>312</width>
<height>188</height>
<ID_maker>34</ID_maker>
<objectname>XHSlider</objectname>
<description>水平スライダの内部オブジェクト
マウスイベントを発生する
</description>
<pin>
<ID>_PX23</ID>
<x0>126</x0>
<y0>22</y0>
<width>95</width>
<height>22</height>
<text>changed(int i)</text>
<px>126</px>
<py>51</py>
</pin>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>22</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>4</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>5</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>120</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>91</x0>
<y0>143</y0>
<width>117</width>
<height>63</height>
<inconnectx0>100</inconnectx0>
<inconnecty0>27</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>15</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>78</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// インスタンスを
// 生成する
hsldr= new  inhslider();
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>265</x0>
<y0>106</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>253</x0>
<y0>206</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>134</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>21</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>47</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)hsldr;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>30</px>
<py>33</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>94</x0>
<y0>0</y0>
<width>125</width>
<height>21</height>
<codetext>inhslider hsldr;
class inhslider extends XJHSlider implements MouseListener, MouseMotionListener, ChangeListener,KeyListener{
inhslider(){
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
addChangeListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){released( (Component)this, e.getX(), e.getY());}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void stateChanged(ChangeEvent e){ changed( getValue() ); }
public void keyPressed(KeyEvent e){ key_pressed(this, e.getKeyCode()); }
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>125</px>
<py>7</py>
</pin>
<operation>
<ID>_O24</ID>
<state1>_SINIT</state1>
<state2>_S26</state2>
<x0>44</x0>
<y0>315</y0>
<width>199</width>
<height>83</height>
<inconnectx0>186</inconnectx0>
<inconnecty0>18</inconnecty0>
<outconnectx0>180</outconnectx0>
<outconnecty0>61</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>62</outpiny0>
<outpinwidth>110</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;HSLIDER&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;HSLIDER&quot;) ) ) return;
hsldr = new inhslider();
c = hsldr;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();
</codetext>
</operation>
<operation>
<ID>_O25</ID>
<state1>_S26</state1>
<state2>_SINIT</state2>
<x0>373</x0>
<y0>342</y0>
<width>127</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>42</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>8</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
hsldr.setName( fld.nextToken() );
hsldr.setMinimum( parseInt(fld.nextToken()) );
hsldr.setMaximum( parseInt(fld.nextToken()) );
hsldr.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
hsldr.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
hsldr.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
if( fld.hasMoreTokens() ) hsldr.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) hsldr.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) hsldr.print_changed_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) hsldr.super_class[AppTyp] = fld.nextToken();
</codetext>
</operation>
<state>
<ID>_S26</ID>
<x0>275</x0>
<y0>395</y0>
<width>70</width>
<height>40</height>
<text>      状態２</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_P27</ID>
<x0>36</x0>
<y0>434</y0>
<width>85</width>
<height>31</height>
<text>Load(String s)</text>
<px>15</px>
<py>159</py>
</pin>
<action>
<ID>_A28</ID>
<comp1name>_O24</comp1name>
<comp2name>_PX6</comp2name>
</action>
<action>
<ID>_A29</ID>
<comp1name>_P27</comp1name>
<comp2name>_O24</comp2name>
</action>
<codeclip>
<ID>_C30</ID>
<x0>192</x0>
<y0>63</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P31</ID>
<x0>456</x0>
<y0>22</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P32</ID>
<x0>463</x0>
<y0>48</y0>
<width>233</width>
<height>24</height>
<text>key_pressed( Component c, int key)</text>
<px>50</px>
<py>137</py>
</pin>
</aobject>
<pin>
<ID>_PX2</ID>
<x0>3</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>24</px>
<py>54</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>41</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>110</py>
</pin>
<pin>
<ID>_P20</ID>
<x0>25</x0>
<y0>191</y0>
<width>87</width>
<height>26</height>
<text>Load(String s)</text>
<px>14</px>
<py>35</py>
</pin>
<relation>
<ID>_R21</ID>
<pin1name>_P20</pin1name>
<pin2name>_AX3(_P27)</pin2name>
</relation>
<aobject>
<ID>_A22</ID>
<x0>541</x0>
<y0>50</y0>
<width>267</width>
<height>130</height>
<ID_maker>19</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>682</x0>
<y0>223</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>4</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>399</x0>
<y0>134</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>45</x0>
<y0>330</y0>
<width>231</width>
<height>26</height>
<text>key_pressed( Component c, int key)</text>
<px>0</px>
<py>107</py>
</pin>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>336</x0>
<y0>308</y0>
<width>170</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A18</ID>
<comp1name>_P14</comp1name>
<comp2name>_O17</comp2name>
</action>
</aobject>
<relation>
<ID>_R23</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_A22(_PX2)</pin2name>
</relation>
<relation>
<ID>_R24</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_A22(_PX1)</pin2name>
</relation>
<relation>
<ID>_R25</ID>
<pin1name>_AX3(_P31)</pin1name>
<pin2name>_A22(_P11)</pin2name>
</relation>
<relation>
<ID>_R27</ID>
<pin1name>_AX3(_P32)</pin1name>
<pin2name>_A22(_P14)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R40</ID>
<pin1name>_X35(_P38)</pin1name>
<pin2name>_P32</pin2name>
</relation>
<pin>
<ID>_PX23</ID>
<x0>512</x0>
<y0>33</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>703</px>
<py>0</py>
</pin>
<relation>
<ID>_R50</ID>
<pin1name>_A47(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<relation>
<ID>_R41</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X35(_PX1)</pin2name>
</relation>
<pin>
<ID>_P32</ID>
<x0>619</x0>
<y0>131</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<codeclip>
<ID>_C46</ID>
<x0>106</x0>
<y0>309</y0>
<width>292</width>
<height>24</height>
<codetext>String ImageFile=&quot;resources/hslider.jpg&quot;;
</codetext>
</codeclip>
<pin>
<ID>_P51</ID>
<x0>15</x0>
<y0>34</y0>
<width>92</width>
<height>24</height>
<text>Load( String s)</text>
<px>121</px>
<py>15</py>
</pin>
<relation>
<ID>_R52</ID>
<pin1name>_P51</pin1name>
<pin2name>_XX7(_P20)</pin2name>
</relation>
<relation>
<ID>_R53</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X35(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_RX54</ID>
<pin1name>_XX4(_PX19)</pin1name>
<pin2name>_XX45(_PX19)</pin2name>
</relation>
<xobject>
<ID>_X63</ID>
<x0>0</x0>
<y0>162</y0>
<width>752</width>
<height>34</height>
<ID_maker>51</ID_maker>
<objectname>VSlider</objectname>
<description>ボタンをクリックすると上位コンポーネントに垂直Sliderを貼り付けるツール
</description>
<aobject>
<ID>_A44</ID>
<x0>156</x0>
<y0>190</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>42</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
b.setToolTipText(&quot;垂直スライダ&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>97</px>
<py>25</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>123</x0>
<y0>10</y0>
<width>326</width>
<height>21</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>103</px>
<py>62</py>
</pin>
</aobject>
<relation>
<ID>_R45</ID>
<pin1name>_A44(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A44(_PX11)</pin2name>
</relation>
<xobject>
<ID>_X32</ID>
<x0>324</x0>
<y0>81</y0>
<width>272</width>
<height>98</height>
<ID_maker>49</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>227</width>
<height>68</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>19</inpinx0>
<inpiny0>53</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>118</x0>
<y0>244</y0>
<width>107</width>
<height>24</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>34</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>125</px>
<py>1</py>
</pin>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<pin>
<ID>_P8</ID>
<x0>305</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
</aobject>
<relation>
<ID>_R41</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X40(_PX7)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>444</x0>
<y0>95</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>181</px>
<py>14</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>23</px>
<py>71</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>190</x0>
<y0>283</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>147</x0>
<y0>10</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>400</x0>
<y0>205</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>8</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>446</x0>
<y0>20</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>444</x0>
<y0>56</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R42</ID>
<pin1name>_X40(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<xobject>
<ID>_X40</ID>
<x0>206</x0>
<y0>27</y0>
<width>212</width>
<height>131</height>
<ID_maker>154</ID_maker>
<objectname>PropertiesVSlider</objectname>
<description></description>
<xobject>
<ID>_X124</ID>
<x0>77</x0>
<y0>77</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;VSLIDER&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<relation>
<ID>_R125</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X124(_PX3)</pin2name>
</relation>
<relation>
<ID>_R126</ID>
<pin1name>_X124(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<relation>
<ID>_R127</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X124(_PX4)</pin2name>
</relation>
<relation>
<ID>_R128</ID>
<pin1name>_X124(_PX4)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R113</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R133</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R131</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_X124(_PX5)</pin2name>
</relation>
<xobject>
<ID>_XX64</ID>
<x0>77</x0>
<y0>142</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>18</x0>
<y0>289</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>9</py>
</pin>
</xobject>
<pin>
<ID>_PX39</ID>
<x0>536</x0>
<y0>39</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>139</px>
<py>39</py>
</pin>
<pin>
<ID>_PX35</ID>
<x0>491</x0>
<y0>40</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>152</px>
<py>18</py>
</pin>
<xobject>
<ID>_XX34</ID>
<x0>77</x0>
<y0>109</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>26</x0>
<y0>290</y0>
<width>252</width>
<height>26</height>
<codetext>String LabelName=&quot;コンポーネントの色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
</xobject>
<pin>
<ID>_PX7</ID>
<x0>285</x0>
<y0>9</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>5</px>
<py>39</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>174</x0>
<y0>39</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>94</px>
<py>112</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>326</x0>
<y0>41</y0>
<width>52</width>
<height>22</height>
<text>reset()</text>
<px>155</px>
<py>68</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>380</x0>
<y0>42</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>4</px>
<py>64</py>
</pin>
<relation>
<ID>_R132</ID>
<pin1name>_X124(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<xobject>
<ID>_X114</ID>
<x0>77</x0>
<y0>175</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>MIN_Value</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>100</y0>
<width>202</width>
<height>23</height>
<codetext>String LabelName=&quot;最小値&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JSlider)cmp).getMinimum()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JSlider)cmp).setMinimum( ( new Integer(0)).parseInt(data.getText()));
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X115</ID>
<x0>77</x0>
<y0>207</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>MAX_Value</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>202</width>
<height>23</height>
<codetext>String LabelName=&quot;最大値&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JSlider)cmp).getMaximum()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JSlider)cmp).setMaximum( ( new Integer(0)).parseInt(data.getText()));
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R116</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X114(_PX4)</pin2name>
</relation>
<relation>
<ID>_R117</ID>
<pin1name>_X114(_PX4)</pin1name>
<pin2name>_X115(_PX4)</pin2name>
</relation>
<relation>
<ID>_R118</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X114(_PX3)</pin2name>
</relation>
<relation>
<ID>_R119</ID>
<pin1name>_X114(_PX3)</pin1name>
<pin2name>_X115(_PX3)</pin2name>
</relation>
<relation>
<ID>_R120</ID>
<pin1name>_X114(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<relation>
<ID>_R121</ID>
<pin1name>_X115(_PX5)</pin1name>
<pin2name>_X114(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X138</ID>
<x0>77</x0>
<y0>239</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJVSlider)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJVSlider cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R139</ID>
<pin1name>_X115(_PX3)</pin1name>
<pin2name>_X138(_PX3)</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_X115(_PX4)</pin1name>
<pin2name>_X138(_PX4)</pin2name>
</relation>
<relation>
<ID>_R141</ID>
<pin1name>_X138(_PX5)</pin1name>
<pin2name>_X115(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X142</ID>
<x0>77</x0>
<y0>272</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJVSlider)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJVSlider cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R143</ID>
<pin1name>_X138(_PX3)</pin1name>
<pin2name>_X142(_PX3)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_X138(_PX4)</pin1name>
<pin2name>_X142(_PX4)</pin2name>
</relation>
<relation>
<ID>_R145</ID>
<pin1name>_X142(_PX5)</pin1name>
<pin2name>_X138(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X146</ID>
<x0>77</x0>
<y0>304</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>changed_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;changedピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJVSlider)c;
data.setSelected(cmp.print_changed_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.print_changed_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJVSlider cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R147</ID>
<pin1name>_X142(_PX3)</pin1name>
<pin2name>_X146(_PX3)</pin2name>
</relation>
<relation>
<ID>_R148</ID>
<pin1name>_X142(_PX4)</pin1name>
<pin2name>_X146(_PX4)</pin2name>
</relation>
<relation>
<ID>_R149</ID>
<pin1name>_X146(_PX5)</pin1name>
<pin2name>_X142(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X150</ID>
<x0>77</x0>
<y0>336</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJVSlider)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJVSlider)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R151</ID>
<pin1name>_X146(_PX3)</pin1name>
<pin2name>_X150(_PX3)</pin2name>
</relation>
<relation>
<ID>_R152</ID>
<pin1name>_X146(_PX4)</pin1name>
<pin2name>_X150(_PX4)</pin2name>
</relation>
<relation>
<ID>_R153</ID>
<pin1name>_X150(_PX5)</pin1name>
<pin2name>_X146(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R43</ID>
<pin1name>_X40(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R44</ID>
<pin1name>_X40(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_X40(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X40(_PX39)</pin2name>
</relation>
<relation>
<ID>_R47</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X40(_PX2)</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X40(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R33</ID>
<pin1name>_X32(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R34</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X32(_PX3)</pin2name>
</relation>
<relation>
<ID>_R35</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X32(_PX24)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X32(_PX27)</pin2name>
</relation>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<pin>
<ID>_PX20</ID>
<x0>510</x0>
<y0>242</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>632</px>
<py>15</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>416</x0>
<y0>241</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>1</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>5</x0>
<y0>106</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>0</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>353</x0>
<y0>32</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>16</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>220</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>258</px>
<py>17</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>328</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>0</py>
</pin>
<xobject>
<ID>_XX7</ID>
<x0>148</x0>
<y0>41</y0>
<width>166</width>
<height>128</height>
<ID_maker>27</ID_maker>
<objectname>VSlderResizable</objectname>
<description>垂直スライダ(可変サイズ)</description>
<relation>
<ID>_RX15</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX14</ID>
<x0>2</x0>
<y0>146</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>13</px>
<py>68</py>
</pin>
<aobject>
<ID>_AX3</ID>
<x0>150</x0>
<y0>33</y0>
<width>277</width>
<height>176</height>
<ID_maker>33</ID_maker>
<objectname>XVSlider</objectname>
<description>水平スライダの内部オブジェクト
マウスイベントを発生する
</description>
<pin>
<ID>_PX23</ID>
<x0>126</x0>
<y0>22</y0>
<width>95</width>
<height>22</height>
<text>changed(int i)</text>
<px>126</px>
<py>51</py>
</pin>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>5</px>
<py>68</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>84</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>13</px>
<py>119</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>266</x0>
<y0>312</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>91</x0>
<y0>143</y0>
<width>117</width>
<height>63</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>20</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>5</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>77</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// インスタンスを
// 生成する
vsldr= new  invslider();
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>257</x0>
<y0>106</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>271</x0>
<y0>237</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>134</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>10</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>58</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)vsldr;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>29</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>94</x0>
<y0>0</y0>
<width>125</width>
<height>21</height>
<codetext>invslider vsldr;
class invslider extends XJVSlider implements MouseListener, MouseMotionListener, ChangeListener,KeyListener{
invslider(){
setOrientation( SwingConstants.VERTICAL );
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
addChangeListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){released( (Component)this, e.getX(), e.getY()); }
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void stateChanged(ChangeEvent e){ changed( getValue() ); }
public void keyPressed(KeyEvent e){ key_pressed(this, e.getKeyCode()); }
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>125</px>
<py>7</py>
</pin>
<operation>
<ID>_O24</ID>
<state1>_SINIT</state1>
<state2>_S26</state2>
<x0>12</x0>
<y0>305</y0>
<width>199</width>
<height>83</height>
<inconnectx0>180</inconnectx0>
<inconnecty0>8</inconnecty0>
<outconnectx0>179</outconnectx0>
<outconnecty0>26</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>62</outpiny0>
<outpinwidth>110</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;VSLIDER&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;VSLIDER&quot;) ) ) return;
vsldr = new invslider();
c = vsldr;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();
</codetext>
</operation>
<operation>
<ID>_O25</ID>
<state1>_S26</state1>
<state2>_SINIT</state2>
<x0>426</x0>
<y0>297</y0>
<width>127</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>43</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>16</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
vsldr.setName( fld.nextToken() );
vsldr.setMinimum( parseInt(fld.nextToken()) );
vsldr.setMaximum( parseInt(fld.nextToken()) );
vsldr.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
vsldr.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
vsldr.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
if( fld.hasMoreTokens() ) vsldr.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) vsldr.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) vsldr.print_changed_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) vsldr.super_class[AppTyp] = fld.nextToken();
</codetext>
</operation>
<state>
<ID>_S26</ID>
<x0>287</x0>
<y0>393</y0>
<width>70</width>
<height>40</height>
<text>      状態２</text>
<isinitstate>0</isinitstate>
</state>
<action>
<ID>_A27</ID>
<comp1name>_O24</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_P28</ID>
<x0>4</x0>
<y0>429</y0>
<width>85</width>
<height>29</height>
<text>Load(String s)</text>
<px>12</px>
<py>154</py>
</pin>
<action>
<ID>_A29</ID>
<comp1name>_P28</comp1name>
<comp2name>_O24</comp2name>
</action>
<codeclip>
<ID>_C30</ID>
<x0>180</x0>
<y0>59</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P31</ID>
<x0>455</x0>
<y0>22</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>6</px>
<py>101</py>
</pin>
<pin>
<ID>_P32</ID>
<x0>455</x0>
<y0>45</y0>
<width>233</width>
<height>24</height>
<text>key_pressed( Component c, int key)</text>
<px>13</px>
<py>136</py>
</pin>
</aobject>
<pin>
<ID>_PX2</ID>
<x0>3</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>21</px>
<py>49</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>41</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>110</py>
</pin>
<pin>
<ID>_P20</ID>
<x0>16</x0>
<y0>189</y0>
<width>88</width>
<height>28</height>
<text>Load(String s)</text>
<px>14</px>
<py>32</py>
</pin>
<relation>
<ID>_R21</ID>
<pin1name>_P20</pin1name>
<pin2name>_AX3(_P28)</pin2name>
</relation>
<aobject>
<ID>_A22</ID>
<x0>524</x0>
<y0>63</y0>
<width>263</width>
<height>132</height>
<ID_maker>19</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>682</x0>
<y0>224</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>4</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>425</x0>
<y0>137</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>7</x0>
<y0>300</y0>
<width>234</width>
<height>28</height>
<text>key_pressed( Component c, int key)</text>
<px>0</px>
<py>102</py>
</pin>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>309</x0>
<y0>285</y0>
<width>170</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A18</ID>
<comp1name>_P14</comp1name>
<comp2name>_O17</comp2name>
</action>
</aobject>
<relation>
<ID>_R23</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_A22(_PX2)</pin2name>
</relation>
<relation>
<ID>_R24</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_A22(_PX1)</pin2name>
</relation>
<relation>
<ID>_R25</ID>
<pin1name>_AX3(_P31)</pin1name>
<pin2name>_A22(_P11)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_AX3(_P32)</pin1name>
<pin2name>_A22(_P14)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R37</ID>
<pin1name>_X32(_P38)</pin1name>
<pin2name>_P31</pin2name>
</relation>
<pin>
<ID>_PX23</ID>
<x0>512</x0>
<y0>33</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>703</px>
<py>0</py>
</pin>
<relation>
<ID>_R47</ID>
<pin1name>_A44(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X32(_PX1)</pin2name>
</relation>
<pin>
<ID>_P31</ID>
<x0>610</x0>
<y0>120</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<codeclip>
<ID>_C43</ID>
<x0>137</x0>
<y0>299</y0>
<width>272</width>
<height>23</height>
<codetext>String ImageFile=&quot;resources/vslider.jpg&quot;;
</codetext>
</codeclip>
<pin>
<ID>_P48</ID>
<x0>11</x0>
<y0>50</y0>
<width>89</width>
<height>25</height>
<text>Load(String s)</text>
<px>122</px>
<py>16</py>
</pin>
<relation>
<ID>_R49</ID>
<pin1name>_P48</pin1name>
<pin2name>_XX7(_P20)</pin2name>
</relation>
<relation>
<ID>_R50</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X32(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_RX52</ID>
<pin1name>_XX4(_PX1)</pin1name>
<pin2name>_XX45(_PX1)</pin2name>
</relation>
<xobject>
<ID>_X64</ID>
<x0>0</x0>
<y0>195</y0>
<width>752</width>
<height>36</height>
<ID_maker>53</ID_maker>
<objectname>CheckBox</objectname>
<description>ボタンをクリックすると上位コンポーネントのラベルを貼り付けるツール
</description>
<aobject>
<ID>_A46</ID>
<x0>149</x0>
<y0>187</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>42</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
b.setToolTipText(&quot;チェックボックス&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>97</px>
<py>25</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>107</x0>
<y0>3</y0>
<width>321</width>
<height>21</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>103</px>
<py>62</py>
</pin>
</aobject>
<relation>
<ID>_R47</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A46(_PX11)</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_A46(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<xobject>
<ID>_X34</ID>
<x0>331</x0>
<y0>92</y0>
<width>272</width>
<height>98</height>
<ID_maker>50</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>227</width>
<height>68</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>21</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>103</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>118</x0>
<y0>244</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>34</outpinx0>
<outpiny0>71</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>125</px>
<py>1</py>
</pin>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<pin>
<ID>_P8</ID>
<x0>306</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
</aobject>
<relation>
<ID>_R44</ID>
<pin1name>_X40(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>448</x0>
<y0>106</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>181</px>
<py>14</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>21</px>
<py>57</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>190</x0>
<y0>283</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>153</x0>
<y0>50</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>418</x0>
<y0>184</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>7</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>446</x0>
<y0>16</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>438</x0>
<y0>61</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R45</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X40(_PX39)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<xobject>
<ID>_X40</ID>
<x0>205</x0>
<y0>29</y0>
<width>212</width>
<height>131</height>
<ID_maker>144</ID_maker>
<objectname>PropertiesCheckBox</objectname>
<description></description>
<xobject>
<ID>_X114</ID>
<x0>78</x0>
<y0>77</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>213</px>
<py>14</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;CHKBOX&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<relation>
<ID>_R115</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X114(_PX3)</pin2name>
</relation>
<relation>
<ID>_R116</ID>
<pin1name>_X114(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<relation>
<ID>_R117</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X114(_PX4)</pin2name>
</relation>
<relation>
<ID>_R118</ID>
<pin1name>_X114(_PX4)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R113</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R123</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R121</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_X114(_PX5)</pin2name>
</relation>
<xobject>
<ID>_XX64</ID>
<x0>78</x0>
<y0>142</y0>
<width>529</width>
<height>35</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>12</px>
<py>34</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>116</x0>
<y0>73</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>213</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>206</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>23</x0>
<y0>289</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>10</py>
</pin>
</xobject>
<pin>
<ID>_PX39</ID>
<x0>537</x0>
<y0>43</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>140</px>
<py>50</py>
</pin>
<pin>
<ID>_PX35</ID>
<x0>492</x0>
<y0>42</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>155</px>
<py>13</py>
</pin>
<xobject>
<ID>_XX34</ID>
<x0>78</x0>
<y0>109</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>213</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>147</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>13</x0>
<y0>291</y0>
<width>261</width>
<height>22</height>
<codetext>String LabelName=&quot;コンポーネントの色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
</xobject>
<pin>
<ID>_PX7</ID>
<x0>289</x0>
<y0>19</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>8</px>
<py>41</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>175</x0>
<y0>42</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>69</px>
<py>112</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>327</x0>
<y0>43</y0>
<width>52</width>
<height>22</height>
<text>reset()</text>
<px>162</px>
<py>80</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>381</x0>
<y0>45</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>7</px>
<py>86</py>
</pin>
<relation>
<ID>_R122</ID>
<pin1name>_X114(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<xobject>
<ID>_X128</ID>
<x0>78</x0>
<y0>176</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>213</px>
<py>9</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJCheckBox)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJCheckBox cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R129</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X128(_PX3)</pin2name>
</relation>
<relation>
<ID>_R130</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X128(_PX4)</pin2name>
</relation>
<relation>
<ID>_R131</ID>
<pin1name>_X128(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X132</ID>
<x0>78</x0>
<y0>208</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJCheckBox)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJCheckBox cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R133</ID>
<pin1name>_X128(_PX3)</pin1name>
<pin2name>_X132(_PX3)</pin2name>
</relation>
<relation>
<ID>_R134</ID>
<pin1name>_X128(_PX4)</pin1name>
<pin2name>_X132(_PX4)</pin2name>
</relation>
<relation>
<ID>_R135</ID>
<pin1name>_X132(_PX5)</pin1name>
<pin2name>_X128(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X136</ID>
<x0>78</x0>
<y0>240</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>check_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;checkピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJCheckBox)c;
data.setSelected(cmp.print_check_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_check_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJCheckBox cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R137</ID>
<pin1name>_X132(_PX3)</pin1name>
<pin2name>_X136(_PX3)</pin2name>
</relation>
<relation>
<ID>_R138</ID>
<pin1name>_X132(_PX4)</pin1name>
<pin2name>_X136(_PX4)</pin2name>
</relation>
<relation>
<ID>_R139</ID>
<pin1name>_X136(_PX5)</pin1name>
<pin2name>_X132(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X140</ID>
<x0>78</x0>
<y0>272</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJCheckBox)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJCheckBox)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R141</ID>
<pin1name>_X136(_PX3)</pin1name>
<pin2name>_X140(_PX3)</pin2name>
</relation>
<relation>
<ID>_R142</ID>
<pin1name>_X136(_PX4)</pin1name>
<pin2name>_X140(_PX4)</pin2name>
</relation>
<relation>
<ID>_R143</ID>
<pin1name>_X140(_PX5)</pin1name>
<pin2name>_X136(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R41</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X40(_PX7)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_X40(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_X40(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R49</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X40(_PX2)</pin2name>
</relation>
<relation>
<ID>_R47</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X40(_PX1)</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_X40(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R35</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X34(_PX1)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X34(_PX3)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_X34(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X34(_PX24)</pin2name>
</relation>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<codeclip>
<ID>_C45</ID>
<x0>131</x0>
<y0>278</y0>
<width>294</width>
<height>26</height>
<codetext>String ImageFile=&quot;resources/checkbox.jpg&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R49</ID>
<pin1name>_A46(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX23</ID>
<x0>512</x0>
<y0>33</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>702</px>
<py>0</py>
</pin>
<relation>
<ID>_R39</ID>
<pin1name>_X34(_P38)</pin1name>
<pin2name>_P33</pin2name>
</relation>
<xobject>
<ID>_XX7</ID>
<x0>148</x0>
<y0>41</y0>
<width>166</width>
<height>128</height>
<ID_maker>27</ID_maker>
<objectname>CheckBoxResizable</objectname>
<description>チェックボックス</description>
<relation>
<ID>_RX15</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX1</ID>
<x0>41</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>110</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>3</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>23</px>
<py>48</py>
</pin>
<aobject>
<ID>_AX3</ID>
<x0>150</x0>
<y0>33</y0>
<width>260</width>
<height>190</height>
<ID_maker>33</ID_maker>
<objectname>XCheckBox</objectname>
<description>チェックボックスの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>125</px>
<py>7</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>94</x0>
<y0>0</y0>
<width>125</width>
<height>21</height>
<codetext>incheckbox cbox;
class incheckbox extends XJCheckBox implements MouseListener, MouseMotionListener,KeyListener{
incheckbox(){
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){released( (Component)this, e.getX(), e.getY());}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void keyPressed(KeyEvent e){ key_pressed(this, e.getKeyCode()); }
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>29</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>382</x0>
<y0>135</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>10</inconnecty0>
<outconnectx0>1</outconnectx0>
<outconnecty0>67</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)cbox;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>279</x0>
<y0>244</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>273</x0>
<y0>115</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>91</x0>
<y0>143</y0>
<width>117</width>
<height>63</height>
<inconnectx0>97</inconnectx0>
<inconnecty0>38</inconnecty0>
<outconnectx0>100</outconnectx0>
<outconnecty0>8</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>77</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// インスタンスを
// 生成する
cbox= new  incheckbox();
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>285</x0>
<y0>313</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>119</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<operation>
<ID>_O23</ID>
<state1>_SINIT</state1>
<state2>_S25</state2>
<x0>32</x0>
<y0>296</y0>
<width>201</width>
<height>82</height>
<inconnectx0>181</inconnectx0>
<inconnecty0>12</inconnecty0>
<outconnectx0>180</outconnectx0>
<outconnecty0>44</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>91</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>110</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;CHECKBOX&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;CHECKBOX&quot;) ) ) return;
cbox = new incheckbox();
c = cbox;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();
</codetext>
</operation>
<operation>
<ID>_O24</ID>
<state1>_S25</state1>
<state2>_SINIT</state2>
<x0>443</x0>
<y0>288</y0>
<width>127</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>45</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>14</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
cbox.setName( fld.nextToken() );
cbox.setSelected( int2boolean( parseInt(fld.nextToken()) ) );
cbox.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
cbox.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
cbox.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
if( fld.hasMoreTokens() ) cbox.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) cbox.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) cbox.print_check_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) cbox.super_class[AppTyp] = fld.nextToken();
</codetext>
</operation>
<state>
<ID>_S25</ID>
<x0>279</x0>
<y0>396</y0>
<width>70</width>
<height>40</height>
<text>      状態２</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_P26</ID>
<x0>24</x0>
<y0>418</y0>
<width>85</width>
<height>29</height>
<text>Load(String s)</text>
<px>6</px>
<py>158</py>
</pin>
<action>
<ID>_A27</ID>
<comp1name>_O23</comp1name>
<comp2name>_PX6</comp2name>
</action>
<action>
<ID>_A29</ID>
<comp1name>_P26</comp1name>
<comp2name>_O23</comp2name>
</action>
<codeclip>
<ID>_C30</ID>
<x0>202</x0>
<y0>65</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P31</ID>
<x0>455</x0>
<y0>22</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P32</ID>
<x0>472</x0>
<y0>44</y0>
<width>226</width>
<height>23</height>
<text>key_pressed( Component c, int key)</text>
<px>0</px>
<py>138</py>
</pin>
</aobject>
<pin>
<ID>_PX14</ID>
<x0>1</x0>
<y0>145</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>13</px>
<py>68</py>
</pin>
<pin>
<ID>_P20</ID>
<x0>28</x0>
<y0>187</y0>
<width>99</width>
<height>26</height>
<text>Load(String s)</text>
<px>11</px>
<py>30</py>
</pin>
<relation>
<ID>_R21</ID>
<pin1name>_P20</pin1name>
<pin2name>_AX3(_P26)</pin2name>
</relation>
<aobject>
<ID>_A22</ID>
<x0>503</x0>
<y0>91</y0>
<width>277</width>
<height>123</height>
<ID_maker>19</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>655</x0>
<y0>225</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>4</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>411</x0>
<y0>136</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>15</x0>
<y0>307</y0>
<width>235</width>
<height>25</height>
<text>key_pressed( Component c, int key)</text>
<px>0</px>
<py>91</py>
</pin>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>307</x0>
<y0>278</y0>
<width>170</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A18</ID>
<comp1name>_P14</comp1name>
<comp2name>_O17</comp2name>
</action>
</aobject>
<relation>
<ID>_R23</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_A22(_PX2)</pin2name>
</relation>
<relation>
<ID>_R24</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_A22(_PX1)</pin2name>
</relation>
<relation>
<ID>_R25</ID>
<pin1name>_AX3(_P31)</pin1name>
<pin2name>_A22(_P11)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_AX3(_P32)</pin1name>
<pin2name>_A22(_P14)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX3</ID>
<x0>328</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>0</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>220</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>258</px>
<py>17</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>353</x0>
<y0>32</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>19</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>5</x0>
<y0>106</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>0</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>416</x0>
<y0>241</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>1</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>510</x0>
<y0>242</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>632</px>
<py>17</py>
</pin>
<relation>
<ID>_R40</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X34(_PX27)</pin2name>
</relation>
<pin>
<ID>_P33</ID>
<x0>615</x0>
<y0>133</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<pin>
<ID>_P50</ID>
<x0>28</x0>
<y0>53</y0>
<width>89</width>
<height>27</height>
<text>Load(String s)</text>
<px>122</px>
<py>16</py>
</pin>
<relation>
<ID>_R51</ID>
<pin1name>_P50</pin1name>
<pin2name>_XX7(_P20)</pin2name>
</relation>
<relation>
<ID>_R52</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X34(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_RX50</ID>
<pin1name>_XX4(_PX10)</pin1name>
<pin2name>_XX45(_PX10)</pin2name>
</relation>
<relation>
<ID>_R65</ID>
<pin1name>_X60(_PX3)</pin1name>
<pin2name>_XX45(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX48</ID>
<pin1name>_XX4(_PX2)</pin1name>
<pin2name>_XX45(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX47</ID>
<pin1name>_XX45(_PX3)</pin1name>
<pin2name>_XX4(_PX3)</pin2name>
</relation>
<relation>
<ID>_R66</ID>
<pin1name>_X61(_PX3)</pin1name>
<pin2name>_X60(_PX3)</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>700</x0>
<y0>304</y0>
<width>53</width>
<height>27</height>
<text>cansel()</text>
<px>175</px>
<py>0</py>
</pin>
<xobject>
<ID>_XX4</ID>
<x0>0</x0>
<y0>0</y0>
<width>752</width>
<height>34</height>
<ID_maker>55</ID_maker>
<objectname>Label</objectname>
<description>ボタンをクリックすると上位コンポーネントのラベルを貼り付けるツール
</description>
<aobject>
<ID>_A44</ID>
<x0>158</x0>
<y0>194</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>43</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// ボタンのインスタンスを
// 生成する
b= new inbutton(this);
b.setToolTipText(&quot;ラベル&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>102</px>
<py>27</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>124</x0>
<y0>8</y0>
<width>318</width>
<height>23</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>102</px>
<py>60</py>
</pin>
</aobject>
<relation>
<ID>_R45</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A44(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_A44(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<xobject>
<ID>_X32</ID>
<x0>338</x0>
<y0>85</y0>
<width>272</width>
<height>98</height>
<ID_maker>49</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>263</width>
<height>70</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>19</inpinx0>
<inpiny0>53</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>117</x0>
<y0>245</y0>
<width>113</width>
<height>24</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>33</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>153</px>
<py>0</py>
</pin>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<pin>
<ID>_P8</ID>
<x0>306</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
</aobject>
<relation>
<ID>_R44</ID>
<pin1name>_X40(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>459</x0>
<y0>81</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>164</px>
<py>9</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>21</px>
<py>57</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>190</x0>
<y0>283</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>153</x0>
<y0>34</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>433</x0>
<y0>178</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>7</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>452</x0>
<y0>14</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>454</x0>
<y0>46</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R45</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X40(_PX39)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<xobject>
<ID>_X40</ID>
<x0>212</x0>
<y0>27</y0>
<width>212</width>
<height>131</height>
<ID_maker>170</ID_maker>
<objectname>PropertiesLabel</objectname>
<description></description>
<relation>
<ID>_RX105</ID>
<pin1name>_XX101(_PX5)</pin1name>
<pin2name>_XX89(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX104</ID>
<pin1name>_XX89(_PX3)</pin1name>
<pin2name>_XX101(_PX3)</pin2name>
</relation>
<relation>
<ID>_R119</ID>
<pin1name>_PX7</pin1name>
<pin2name>_XX6(_PX4)</pin2name>
</relation>
<xobject>
<ID>_X122</ID>
<x0>78</x0>
<y0>184</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>FontName</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
int st = ((JComponent)cmp).getFont().getStyle();
int si = ((JComponent)cmp).getFont().getSize();
Font f = new Font( fonts[index],st,si);
//System.out.println( f );
((JComponent)cmp).setFont( f );
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp = c;
int si = ((JComponent)cmp).getFont().getSize();
int st =((JComponent)cmp).getFont().getStyle(); 
String nm = ((JComponent)cmp).getFont().getName();
for( index = fonts.length-1; index &gt;0 &amp;&amp; (! nm.equals( fonts[index])); index-- );
list.setSelectedIndex(index);
Font f = new Font(fonts[index],st, si );
//System.out.println(f);
((JComponent)cmp).setFont(f );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>fonts = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
list =new inlist(fonts);
list.setVisibleRowCount(1);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>189</width>
<height>21</height>
<codetext>String[] fonts;//フォントの種類
</codetext>
</codeclip>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>167</width>
<height>26</height>
<codetext>String LabelName=&quot;書体&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_RX94</ID>
<pin1name>_XX89(_PX5)</pin1name>
<pin2name>_XX83(_PX5)</pin2name>
</relation>
<relation>
<ID>_R149</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_R147</ID>
<pin1name>_XX6(_PX4)</pin1name>
<pin2name>_XX24(_P18)</pin2name>
</relation>
<relation>
<ID>_RX90</ID>
<pin1name>_XX83(_PX3)</pin1name>
<pin2name>_XX89(_PX3)</pin2name>
</relation>
<relation>
<ID>_R148</ID>
<pin1name>_XX24(_P18)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_R135</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X122(_PX3)</pin2name>
</relation>
<relation>
<ID>_R124</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R136</ID>
<pin1name>_X122(_PX3)</pin1name>
<pin2name>_XX77(_PX3)</pin2name>
</relation>
<relation>
<ID>_R137</ID>
<pin1name>_XX77(_PX3)</pin1name>
<pin2name>_XX83(_PX3)</pin2name>
</relation>
<relation>
<ID>_R138</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X122(_PX4)</pin2name>
</relation>
<relation>
<ID>_R139</ID>
<pin1name>_X122(_PX4)</pin1name>
<pin2name>_XX77(_PX4)</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_XX77(_PX4)</pin1name>
<pin2name>_XX83(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R129</ID>
<pin1name>_XX83(_PX4)</pin1name>
<pin2name>_XX89(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX60</ID>
<pin1name>_XX6(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX59</ID>
<pin1name>_XX24(_PX5)</pin1name>
<pin2name>_XX6(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX58</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_XX24(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_XX24(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_RX26</ID>
<pin1name>_XX6(_PX3)</pin1name>
<pin2name>_XX24(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX15</ID>
<pin1name>_PX1</pin1name>
<pin2name>_XX6(_PX3)</pin2name>
</relation>
<xobject>
<ID>_XX77</ID>
<x0>78</x0>
<y0>216</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>FontSize</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>18</x0>
<y0>101</y0>
<width>211</width>
<height>23</height>
<codetext>String LabelName=&quot;文字のサイズ&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JComponent)cmp).getFont().getSize()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>Font f = ((JComponent)cmp).getFont();
String nm = f.getName(); 
int st = f.getStyle();
((JComponent)cmp).setFont(new Font( nm, st,(new Integer(0)).parseInt(data.getText()) ) );
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX6</ID>
<x0>78</x0>
<y0>54</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;LABEL&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<pin>
<ID>_PX5</ID>
<x0>381</x0>
<y0>28</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>6</px>
<py>85</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>330</x0>
<y0>27</y0>
<width>46</width>
<height>23</height>
<text>reset()</text>
<px>162</px>
<py>62</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>175</x0>
<y0>27</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>92</px>
<py>112</py>
</pin>
<pin>
<ID>_PX7</ID>
<x0>285</x0>
<y0>3</y0>
<width>40</width>
<height>21</height>
<text>start()</text>
<px>2</px>
<py>56</py>
</pin>
<xobject>
<ID>_XX24</ID>
<x0>78</x0>
<y0>86</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Text</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<pin>
<ID>_P18</ID>
<x0>266</x0>
<y0>22</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<relation>
<ID>_R19</ID>
<pin1name>_P18</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JLabel)cmp).setText(data.getText());
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JLabel)cmp).getText());
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>184</width>
<height>22</height>
<codetext>String LabelName=&quot;テキスト&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
</xobject>
<xobject>
<ID>_XX34</ID>
<x0>78</x0>
<y0>118</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>20</x0>
<y0>289</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;文字の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>5</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>98</x0>
<y0>84</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>56</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
</xobject>
<pin>
<ID>_PX35</ID>
<x0>492</x0>
<y0>25</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>160</px>
<py>12</py>
</pin>
<pin>
<ID>_PX39</ID>
<x0>537</x0>
<y0>26</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>147</px>
<py>40</py>
</pin>
<xobject>
<ID>_XX64</ID>
<x0>78</x0>
<y0>151</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>9</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>293</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>206</px>
<py>9</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>100</x0>
<y0>84</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>12</px>
<py>75</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX83</ID>
<x0>78</x0>
<y0>248</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>AlignmentX</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
((JLabel)cmp).setHorizontalAlignment(cnt[ index ] );
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
for( index=0; index &lt; 2 &amp;&amp; cnt[ index ] != ((JLabel)cmp).getHorizontalAlignment(); index++ );
list.setSelectedIndex( index );
((JLabel)cmp).setHorizontalAlignment( cnt[ index ] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>list =new inlist(dsp);
list.setVisibleRowCount(1);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>267</width>
<height>17</height>
<codetext>String dsp[]={&quot;左側&quot;,&quot;中央&quot;,&quot;右側&quot;};
</codetext>
</codeclip>
<codeclip>
<ID>_CX20</ID>
<x0>0</x0>
<y0>2</y0>
<width>524</width>
<height>17</height>
<codetext>int cnt[]={SwingConstants.LEFT,SwingConstants.CENTER,SwingConstants.RIGHT};
</codetext>
</codeclip>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>234</width>
<height>27</height>
<codetext>String LabelName=&quot;横方向の揃え位置&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX89</ID>
<x0>78</x0>
<y0>280</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>AlignmentY</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>233</width>
<height>26</height>
<codetext>String LabelName=&quot;縦方向の揃え位置&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>22</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX20</ID>
<x0>0</x0>
<y0>2</y0>
<width>524</width>
<height>17</height>
<codetext>int cnt[]={SwingConstants.TOP,SwingConstants.CENTER,SwingConstants.BOTTOM};
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>196</width>
<height>20</height>
<codetext>String dsp[]={&quot;上側&quot;,&quot;中央&quot;,&quot;下側&quot;};
</codetext>
</codeclip>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>list =new inlist(dsp);
list.setVisibleRowCount(1);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
for( index=0; index &lt; 2 &amp;&amp; cnt[ index ] != ((JLabel)cmp).getVerticalAlignment(); index++ );
list.setSelectedIndex( index );
((JLabel)cmp).setVerticalAlignment( cnt[ index ] );
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
((JLabel)cmp).setVerticalAlignment(cnt[ index ] );
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX101</ID>
<x0>78</x0>
<y0>312</y0>
<width>529</width>
<height>34</height>
<ID_maker>60</ID_maker>
<objectname>ImageFile</objectname>
<description></description>
<relation>
<ID>_R58</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_A57(_PX1)</pin2name>
</relation>
<relation>
<ID>_R59</ID>
<pin1name>_A57(_PX5)</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX48</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_R56</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;選択する&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>147</px>
<py>74</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>47</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>402</x0>
<y0>27</y0>
<width>196</width>
<height>110</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX13</ID>
<x0>370</x0>
<y0>303</y0>
<width>89</width>
<height>24</height>
<text>get(String file)</text>
<px>75</px>
<py>72</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>143</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(String file)</inpintext>
<inpinx0>51</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>92</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得したファイル名で
コンポーネントの
イメージを設定する
</description>
<codetext>FileName=file;
((JLabel)cmp).setIcon(new ImageIcon(FileName,FileName));
((XJLabel)cmp).ImageFile = FileName;
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>42</px>
<py>43</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ファイル名表示用
コンポーネントを
取得する</description>
<codetext>display=c;
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>36</x0>
<y0>19</y0>
<width>210</width>
<height>25</height>
<codetext>String FileName = &quot;&lt;FileName&gt;&quot;;

</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>対象コンポーネントを
取得する</description>
<codetext>cmp=c;
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>83</px>
<py>13</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<pin>
<ID>_PX3</ID>
<x0>484</x0>
<y0>2</y0>
<width>105</width>
<height>19</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>4</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>29</x0>
<y0>292</y0>
<width>234</width>
<height>24</height>
<codetext>String LabelName=&quot;イメージファイル&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R55</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<aobject>
<ID>_A57</ID>
<x0>340</x0>
<y0>149</y0>
<width>259</width>
<height>57</height>
<ID_maker>10</ID_maker>
<objectname>FileSelector</objectname>
<description></description>
<action>
<ID>_AX9</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX8</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>138</x0>
<y0>82</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>395</x0>
<y0>215</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>105</px>
<py>1</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>390</x0>
<y0>104</y0>
<width>62</width>
<height>28</height>
<text>cansel()</text>
<px>206</px>
<py>0</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>389</x0>
<y0>142</y0>
<width>152</width>
<height>23</height>
<text>selected(String fileName)</text>
<px>105</px>
<py>34</py>
</pin>
<operation>
<ID>_OX8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>255</x0>
<y0>122</y0>
<width>119</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>80</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ファイル選択
ダイアログを開く</description>
<codetext>JFileChooser chooser = new JFileChooser();
chooser.setDialogTitle( &quot;イメージファイルを選択&quot; );
chooser.setFileSelectionMode( JFileChooser.FILES_AND_DIRECTORIES );
if( chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION ){
    selected( chooser.getSelectedFile().getPath() );
}
else cansel();
</codetext>
</operation>
</aobject>
</xobject>
<relation>
<ID>_R130</ID>
<pin1name>_XX89(_PX4)</pin1name>
<pin2name>_XX101(_PX4)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_XX83(_PX5)</pin1name>
<pin2name>_XX77(_PX5)</pin2name>
</relation>
<relation>
<ID>_R145</ID>
<pin1name>_XX77(_PX5)</pin1name>
<pin2name>_X122(_PX5)</pin2name>
</relation>
<relation>
<ID>_R146</ID>
<pin1name>_X122(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X154</ID>
<x0>78</x0>
<y0>345</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJLabel)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJLabel cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R155</ID>
<pin1name>_XX101(_PX3)</pin1name>
<pin2name>_X154(_PX3)</pin2name>
</relation>
<relation>
<ID>_R156</ID>
<pin1name>_XX101(_PX4)</pin1name>
<pin2name>_X154(_PX4)</pin2name>
</relation>
<relation>
<ID>_R157</ID>
<pin1name>_X154(_PX5)</pin1name>
<pin2name>_XX101(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X158</ID>
<x0>78</x0>
<y0>379</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJLabel)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJLabel cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R159</ID>
<pin1name>_X154(_PX3)</pin1name>
<pin2name>_X158(_PX3)</pin2name>
</relation>
<relation>
<ID>_R160</ID>
<pin1name>_X154(_PX4)</pin1name>
<pin2name>_X158(_PX4)</pin2name>
</relation>
<relation>
<ID>_R161</ID>
<pin1name>_X158(_PX5)</pin1name>
<pin2name>_X154(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X162</ID>
<x0>78</x0>
<y0>411</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>paint_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;paintピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJLabel)c;
data.setSelected(cmp.print_paint_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.print_paint_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJLabel cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R163</ID>
<pin1name>_X158(_PX3)</pin1name>
<pin2name>_X162(_PX3)</pin2name>
</relation>
<relation>
<ID>_R164</ID>
<pin1name>_X158(_PX4)</pin1name>
<pin2name>_X162(_PX4)</pin2name>
</relation>
<relation>
<ID>_R165</ID>
<pin1name>_X162(_PX5)</pin1name>
<pin2name>_X158(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X166</ID>
<x0>78</x0>
<y0>443</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJLabel)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJLabel)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R167</ID>
<pin1name>_X162(_PX3)</pin1name>
<pin2name>_X166(_PX3)</pin2name>
</relation>
<relation>
<ID>_R168</ID>
<pin1name>_X162(_PX4)</pin1name>
<pin2name>_X166(_PX4)</pin2name>
</relation>
<relation>
<ID>_R169</ID>
<pin1name>_X166(_PX5)</pin1name>
<pin2name>_X162(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R41</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X40(_PX7)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_X40(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_X40(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X40(_PX2)</pin2name>
</relation>
<relation>
<ID>_R47</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X40(_PX1)</pin2name>
</relation>
<relation>
<ID>_R48</ID>
<pin1name>_X40(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R33</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X32(_PX3)</pin2name>
</relation>
<relation>
<ID>_R34</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X32(_PX1)</pin2name>
</relation>
<relation>
<ID>_R35</ID>
<pin1name>_X32(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X32(_PX24)</pin2name>
</relation>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<codeclip>
<ID>_C43</ID>
<x0>63</x0>
<y0>283</y0>
<width>272</width>
<height>23</height>
<codetext>String ImageFile=&quot;resources/label.jpg&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R47</ID>
<pin1name>_A44(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX23</ID>
<x0>496</x0>
<y0>0</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>702</px>
<py>0</py>
</pin>
<relation>
<ID>_R37</ID>
<pin1name>_X32(_P38)</pin1name>
<pin2name>_P31</pin2name>
</relation>
<xobject>
<ID>_XX7</ID>
<x0>160</x0>
<y0>55</y0>
<width>166</width>
<height>128</height>
<ID_maker>24</ID_maker>
<objectname>LabelResizable</objectname>
<description>ラベル</description>
<relation>
<ID>_RX15</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX13</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_AX11(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX12</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_AX11(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX1</ID>
<x0>41</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>100</px>
<py>112</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>3</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>36</px>
<py>41</py>
</pin>
<aobject>
<ID>_AX3</ID>
<x0>169</x0>
<y0>37</y0>
<width>277</width>
<height>179</height>
<ID_maker>34</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>550</x0>
<y0>0</y0>
<width>47</width>
<height>21</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener, KeyListener{
inlabel(String s){
((XJLabel)this).ImageFile = null;
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){released( (Component)this, e.getX(), e.getY());}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void keyPressed(KeyEvent e){ key_pressed(this, e.getKeyCode()); }
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>115</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>29</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>356</x0>
<y0>124</y0>
<width>150</width>
<height>79</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>10</inconnecty0>
<outconnectx0>1</outconnectx0>
<outconnecty0>48</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>41</outpinx0>
<outpiny0>58</outpiny0>
<outpinwidth>109</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>253</x0>
<y0>221</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>80</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>41</x0>
<y0>138</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>38</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>2</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ラベルのインスタンスを
// 生成する
lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>249</x0>
<y0>296</y0>
<width>112</width>
<height>24</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>9</px>
<py>117</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>217</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_P23</ID>
<x0>39</x0>
<y0>413</y0>
<width>89</width>
<height>30</height>
<text>Load(String s)</text>
<px>21</px>
<py>136</py>
</pin>
<operation>
<ID>_O24</ID>
<state1>_SINIT</state1>
<state2>_S25</state2>
<x0>49</x0>
<y0>276</y0>
<width>176</width>
<height>82</height>
<inconnectx0>154</inconnectx0>
<inconnecty0>3</inconnecty0>
<outconnectx0>156</outconnectx0>
<outconnecty0>33</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>66</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>110</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;LABEL&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;LABEL&quot;) ) ) return;
lbl = new inlabel(&quot; &quot;);
c = lbl;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();
</codetext>
</operation>
<state>
<ID>_S25</ID>
<x0>265</x0>
<y0>350</y0>
<width>70</width>
<height>40</height>
<text>      状態２</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_O26</ID>
<state1>_S25</state1>
<state2>_SINIT</state2>
<x0>381</x0>
<y0>274</y0>
<width>127</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>43</inconnecty0>
<outconnectx0>1</outconnectx0>
<outconnecty0>11</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
lbl.setName( fld.nextToken() );
String s = fld.nextToken();
if( s.equals(&quot;null&quot;)) lbl.setText(&quot;&quot;); else lbl.setText( s );
lbl.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
lbl.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
lbl.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
lbl.setFont( new Font( fld.nextToken(),Font.PLAIN,parseInt(fld.nextToken()) ) );
String fn = fld.nextToken();
if( fn.equals(&quot;null&quot;) ) ((XJLabel)lbl).ImageFile =&quot;&quot;;
else{
  ((XJLabel)lbl).ImageFile = fn;
  lbl.setIcon( new ImageIcon( fn ) );
}
lbl.setHorizontalAlignment( parseInt(fld.nextToken()) );
lbl.setVerticalAlignment( parseInt(fld.nextToken()) );
if( fld.hasMoreTokens() ) lbl.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) lbl.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) lbl.print_paint_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) lbl.super_class[AppTyp] = fld.nextToken();
</codetext>
</operation>
<action>
<ID>_A30</ID>
<comp1name>_P23</comp1name>
<comp2name>_O24</comp2name>
</action>
<action>
<ID>_A28</ID>
<comp1name>_O24</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_C31</ID>
<x0>132</x0>
<y0>49</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P32</ID>
<x0>404</x0>
<y0>22</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P33</ID>
<x0>406</x0>
<y0>47</y0>
<width>232</width>
<height>22</height>
<text>key_pressed( Component c, int key)</text>
<px>6</px>
<py>156</py>
</pin>
</aobject>
<codeclip>
<ID>_CX6</ID>
<x0>132</x0>
<y0>6</y0>
<width>291</width>
<height>22</height>
<codetext>String LabelName=&quot;LABEL&quot;;//ラベルの名前
</codetext>
</codeclip>
<aobject>
<ID>_AX11</ID>
<x0>478</x0>
<y0>65</y0>
<width>283</width>
<height>153</height>
<ID_maker>17</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>656</x0>
<y0>232</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>4</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>410</x0>
<y0>134</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>45</x0>
<y0>302</y0>
<width>238</width>
<height>26</height>
<text>key_pressed( Component c, int key )</text>
<px>15</px>
<py>125</py>
</pin>
<operation>
<ID>_O15</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>373</x0>
<y0>285</y0>
<width>170</width>
<height>49</height>
<inconnectx0>3</inconnectx0>
<inconnecty0>4</inconnecty0>
<outconnectx0>1</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A16</ID>
<comp1name>_P14</comp1name>
<comp2name>_O15</comp2name>
</action>
</aobject>
<pin>
<ID>_PX14</ID>
<x0>0</x0>
<y0>143</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>14</px>
<py>74</py>
</pin>
<pin>
<ID>_P20</ID>
<x0>33</x0>
<y0>181</y0>
<width>91</width>
<height>29</height>
<text>Load(String s)</text>
<px>9</px>
<py>100</py>
</pin>
<relation>
<ID>_R21</ID>
<pin1name>_P20</pin1name>
<pin2name>_AX3(_P23)</pin2name>
</relation>
<relation>
<ID>_R22</ID>
<pin1name>_AX3(_P32)</pin1name>
<pin2name>_AX11(_P11)</pin2name>
</relation>
<relation>
<ID>_R23</ID>
<pin1name>_AX3(_P33)</pin1name>
<pin2name>_AX11(_P14)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX3</ID>
<x0>331</x0>
<y0>247</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>96</px>
<py>0</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>231</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>259</px>
<py>15</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>333</x0>
<y0>23</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>15</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>5</x0>
<y0>125</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>0</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>419</x0>
<y0>249</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>0</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>513</x0>
<y0>248</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>633</px>
<py>15</py>
</pin>
<relation>
<ID>_R38</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X32(_PX27)</pin2name>
</relation>
<pin>
<ID>_P31</ID>
<x0>552</x0>
<y0>34</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<relation>
<ID>_R52</ID>
<pin1name>_P49</pin1name>
<pin2name>_XX7(_P20)</pin2name>
</relation>
<pin>
<ID>_P49</ID>
<x0>52</x0>
<y0>166</y0>
<width>84</width>
<height>30</height>
<text>Load(String s)</text>
<px>122</px>
<py>16</py>
</pin>
<relation>
<ID>_R53</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X32(_PX1)</pin2name>
</relation>
<relation>
<ID>_R54</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X32(_PX1)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX3</ID>
<x0>25</x0>
<y0>437</y0>
<width>43</width>
<height>24</height>
<text>start()</text>
<px>178</px>
<py>141</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>474</x0>
<y0>343</y0>
<width>119</width>
<height>28</height>
<text>paste(Component c)</text>
<px>116</px>
<py>70</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>383</x0>
<y0>385</y0>
<width>95</width>
<height>26</height>
<text>join(Container c)</text>
<px>178</px>
<py>162</py>
</pin>
<pin>
<ID>_PX12</ID>
<x0>355</x0>
<y0>287</y0>
<width>129</width>
<height>28</height>
<text>clicked(Component c)</text>
<px>111</px>
<py>84</py>
</pin>
<pin>
<ID>_PX28</ID>
<x0>586</x0>
<y0>307</y0>
<width>43</width>
<height>27</height>
<text>color()</text>
<px>182</px>
<py>13</py>
</pin>
<pin>
<ID>_PX29</ID>
<x0>629</x0>
<y0>346</y0>
<width>72</width>
<height>27</height>
<text>get(Color c)</text>
<px>168</px>
<py>29</py>
</pin>
<xobject>
<ID>_XX45</ID>
<x0>0</x0>
<y0>33</y0>
<width>752</width>
<height>34</height>
<ID_maker>52</ID_maker>
<objectname>Button</objectname>
<description>ボタンをクリックすると上位コンポーネントのラベルを貼り付けるツール
</description>
<aobject>
<ID>_A45</ID>
<x0>159</x0>
<y0>187</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>42</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
b.setToolTipText(&quot;ボタン&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>97</px>
<py>25</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>120</x0>
<y0>8</y0>
<width>315</width>
<height>21</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>103</px>
<py>62</py>
</pin>
</aobject>
<relation>
<ID>_R46</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A45(_PX11)</pin2name>
</relation>
<relation>
<ID>_R47</ID>
<pin1name>_A45(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<xobject>
<ID>_X33</ID>
<x0>335</x0>
<y0>66</y0>
<width>272</width>
<height>98</height>
<ID_maker>49</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>227</width>
<height>68</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>24</inpinx0>
<inpiny0>56</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>123</x0>
<y0>247</y0>
<width>112</width>
<height>29</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>34</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>125</px>
<py>1</py>
</pin>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<pin>
<ID>_P8</ID>
<x0>306</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
</aobject>
<relation>
<ID>_R48</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X40(_PX1)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>384</x0>
<y0>207</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>181</px>
<py>14</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>21</px>
<py>57</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>196</x0>
<y0>285</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>153</x0>
<y0>50</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>441</x0>
<y0>107</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>7</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>467</x0>
<y0>25</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>460</x0>
<y0>68</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<xobject>
<ID>_X40</ID>
<x0>203</x0>
<y0>19</y0>
<width>212</width>
<height>131</height>
<ID_maker>172</ID_maker>
<objectname>PropertiesButton</objectname>
<description></description>
<relation>
<ID>_RX105</ID>
<pin1name>_XX101(_PX5)</pin1name>
<pin2name>_XX89(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX104</ID>
<pin1name>_XX89(_PX3)</pin1name>
<pin2name>_XX101(_PX3)</pin2name>
</relation>
<relation>
<ID>_R127</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X121(_PX3)</pin2name>
</relation>
<xobject>
<ID>_X121</ID>
<x0>78</x0>
<y0>177</y0>
<width>529</width>
<height>34</height>
<ID_maker>20</ID_maker>
<objectname>FontName</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
int st = ((JComponent)cmp).getFont().getStyle();
int si = ((JComponent)cmp).getFont().getSize();
Font f = new Font( fonts[index],st,si);
//System.out.println( f );
((JComponent)cmp).setFont( f );
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp = c;
int si = ((JComponent)cmp).getFont().getSize();
int st =((JComponent)cmp).getFont().getStyle(); 
String nm = ((JComponent)cmp).getFont().getName();
for( index = fonts.length-1; index &gt;0 &amp;&amp; (! nm.equals( fonts[index])); index-- );
list.setSelectedIndex(index);
Font f = new Font(fonts[index],st, si );
//System.out.println(f);
((JComponent)cmp).setFont(f );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>fonts = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
list =new inlist(fonts);
list.setVisibleRowCount(1);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>189</width>
<height>21</height>
<codetext>String[] fonts;//フォントの種類
</codetext>
</codeclip>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>17</x0>
<y0>101</y0>
<width>167</width>
<height>26</height>
<codetext>String LabelName=&quot;書体&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_RX94</ID>
<pin1name>_XX89(_PX5)</pin1name>
<pin2name>_XX83(_PX5)</pin2name>
</relation>
<relation>
<ID>_R128</ID>
<pin1name>_X121(_PX3)</pin1name>
<pin2name>_X106(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX90</ID>
<pin1name>_XX83(_PX3)</pin1name>
<pin2name>_XX89(_PX3)</pin2name>
</relation>
<xobject>
<ID>_X106</ID>
<x0>78</x0>
<y0>210</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>FontSize</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>212</width>
<height>21</height>
<codetext>String LabelName=&quot;文字のサイズ&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JComponent)cmp).getFont().getSize()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>Font f = ((JComponent)cmp).getFont();
String nm = f.getName(); 
int st = f.getStyle();
((JComponent)cmp).setFont(new Font( nm, st,(new Integer(0)).parseInt(data.getText()) ) );
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X142</ID>
<x0>78</x0>
<y0>47</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;BUTTON&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<relation>
<ID>_R108</ID>
<pin1name>_X106(_PX3)</pin1name>
<pin2name>_XX83(_PX3)</pin2name>
</relation>
<relation>
<ID>_R143</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X142(_PX3)</pin2name>
</relation>
<relation>
<ID>_R131</ID>
<pin1name>_XX24(_PX4)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_R132</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R113</ID>
<pin1name>_XX83(_PX5)</pin1name>
<pin2name>_X106(_PX5)</pin2name>
</relation>
<relation>
<ID>_R151</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R133</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X121(_PX4)</pin2name>
</relation>
<relation>
<ID>_R134</ID>
<pin1name>_X121(_PX4)</pin1name>
<pin2name>_X106(_PX4)</pin2name>
</relation>
<relation>
<ID>_R135</ID>
<pin1name>_X106(_PX4)</pin1name>
<pin2name>_XX83(_PX4)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_X142(_PX3)</pin1name>
<pin2name>_XX24(_PX3)</pin2name>
</relation>
<relation>
<ID>_R145</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X142(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX58</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_XX24(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_XX24(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R146</ID>
<pin1name>_X142(_PX4)</pin1name>
<pin2name>_XX24(_PX4)</pin2name>
</relation>
<relation>
<ID>_R149</ID>
<pin1name>_XX24(_PX5)</pin1name>
<pin2name>_X142(_PX5)</pin2name>
</relation>
<xobject>
<ID>_XX101</ID>
<x0>78</x0>
<y0>306</y0>
<width>529</width>
<height>34</height>
<ID_maker>60</ID_maker>
<objectname>ImageFile</objectname>
<description></description>
<aobject>
<ID>_A57</ID>
<x0>337</x0>
<y0>146</y0>
<width>259</width>
<height>57</height>
<ID_maker>10</ID_maker>
<objectname>FileSelector</objectname>
<description></description>
<action>
<ID>_AX9</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX8</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>138</x0>
<y0>82</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>395</x0>
<y0>215</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>107</px>
<py>4</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>390</x0>
<y0>104</y0>
<width>62</width>
<height>28</height>
<text>cansel()</text>
<px>206</px>
<py>0</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>389</x0>
<y0>142</y0>
<width>152</width>
<height>23</height>
<text>selected(String fileName)</text>
<px>109</px>
<py>37</py>
</pin>
<operation>
<ID>_OX8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>255</x0>
<y0>122</y0>
<width>119</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>80</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ファイル選択
ダイアログを開く</description>
<codetext>JFileChooser chooser = new JFileChooser();
chooser.setDialogTitle( &quot;イメージファイルを選択&quot; );
chooser.setFileSelectionMode( JFileChooser.FILES_AND_DIRECTORIES );
if( chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION ){
    selected( chooser.getSelectedFile().getPath() );
}
else cansel();
</codetext>
</operation>
</aobject>
<relation>
<ID>_R58</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_A57(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX48</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_R56</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_R59</ID>
<pin1name>_A57(_PX5)</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<codeclip>
<ID>_CX7</ID>
<x0>12</x0>
<y0>293</y0>
<width>237</width>
<height>23</height>
<codetext>String LabelName=&quot;イメージファイル&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>484</x0>
<y0>2</y0>
<width>105</width>
<height>19</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>27</y0>
<width>196</width>
<height>110</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>83</px>
<py>13</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>対象コンポーネントを
取得する</description>
<codetext>cmp=c;
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>36</x0>
<y0>19</y0>
<width>210</width>
<height>25</height>
<codetext>String FileName = &quot;&lt;FileName&gt;&quot;;

</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ファイル名表示用
コンポーネントを
取得する</description>
<codetext>display=c;
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>42</px>
<py>43</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>143</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(String file)</inpintext>
<inpinx0>51</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>92</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得したファイル名で
コンポーネントの
イメージを設定する
</description>
<codetext>FileName=file;
((JButton)cmp).setIcon(new ImageIcon(FileName,FileName));
((XJButton)cmp).ImageFile = FileName;
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>370</x0>
<y0>303</y0>
<width>89</width>
<height>24</height>
<text>get(String file)</text>
<px>75</px>
<py>72</py>
</pin>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>47</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>147</px>
<py>74</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;選択する&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R55</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX89</ID>
<x0>78</x0>
<y0>274</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>AlignmentY</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>22</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
((JButton)cmp).setVerticalAlignment(cnt[ index ] );
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
for( index=0; index &lt; 2 &amp;&amp; cnt[ index ] != ((JButton)cmp).getVerticalAlignment(); index++ );
list.setSelectedIndex( index );
((JButton)cmp).setVerticalAlignment( cnt[ index ] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>list =new inlist(dsp);
list.setVisibleRowCount(1);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<codeclip>
<ID>_CX20</ID>
<x0>0</x0>
<y0>2</y0>
<width>524</width>
<height>17</height>
<codetext>int cnt[]={SwingConstants.TOP,SwingConstants.CENTER,SwingConstants.BOTTOM};
</codetext>
</codeclip>
<codeclip>
<ID>_C21</ID>
<x0>0</x0>
<y0>18</y0>
<width>198</width>
<height>21</height>
<codetext>String dsp[]={&quot;上側&quot;,&quot;中央&quot;,&quot;下側&quot;};
</codetext>
</codeclip>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>235</width>
<height>25</height>
<codetext>String LabelName=&quot;縦方向の揃え位置&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX83</ID>
<x0>78</x0>
<y0>242</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>AlignmentX</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>235</width>
<height>26</height>
<codetext>String LabelName=&quot;横方向の揃え位置&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX20</ID>
<x0>0</x0>
<y0>2</y0>
<width>524</width>
<height>17</height>
<codetext>int cnt[]={SwingConstants.LEFT,SwingConstants.CENTER,SwingConstants.RIGHT};
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>267</width>
<height>17</height>
<codetext>String dsp[]={&quot;左側&quot;,&quot;中央&quot;,&quot;右側&quot;};
</codetext>
</codeclip>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>list =new inlist(dsp);
list.setVisibleRowCount(1);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
for( index=0; index &lt; 2 &amp;&amp; cnt[ index ] != ((JButton)cmp).getHorizontalAlignment(); index++ );
list.setSelectedIndex( index );
((JButton)cmp).setHorizontalAlignment( cnt[ index ] );
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
((JButton)cmp).setHorizontalAlignment(cnt[ index ] );
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX64</ID>
<x0>78</x0>
<y0>144</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>2</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>14</x0>
<y0>294</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>9</py>
</pin>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX39</ID>
<x0>537</x0>
<y0>14</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>135</px>
<py>57</py>
</pin>
<pin>
<ID>_PX35</ID>
<x0>492</x0>
<y0>14</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>145</px>
<py>30</py>
</pin>
<xobject>
<ID>_XX34</ID>
<x0>78</x0>
<y0>111</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
</aobject>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>13</x0>
<y0>291</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;文字の色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_XX24</ID>
<x0>78</x0>
<y0>79</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>Text</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>190</width>
<height>19</height>
<codetext>String LabelName=&quot;テキスト&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JButton)cmp).getText());
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>((JButton)cmp).setText(data.getText());
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX7</ID>
<x0>286</x0>
<y0>2</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>10</px>
<py>48</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>174</x0>
<y0>24</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>52</px>
<py>101</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>331</x0>
<y0>16</y0>
<width>45</width>
<height>22</height>
<text>reset()</text>
<px>167</px>
<py>114</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>381</x0>
<y0>16</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>8</px>
<py>75</py>
</pin>
<relation>
<ID>_R150</ID>
<pin1name>_X142(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_R136</ID>
<pin1name>_XX83(_PX4)</pin1name>
<pin2name>_XX89(_PX4)</pin2name>
</relation>
<relation>
<ID>_R137</ID>
<pin1name>_XX89(_PX4)</pin1name>
<pin2name>_XX101(_PX4)</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_X106(_PX5)</pin1name>
<pin2name>_X121(_PX5)</pin2name>
</relation>
<relation>
<ID>_R141</ID>
<pin1name>_X121(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X156</ID>
<x0>78</x0>
<y0>339</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJButton)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJButton cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R157</ID>
<pin1name>_XX101(_PX3)</pin1name>
<pin2name>_X156(_PX3)</pin2name>
</relation>
<relation>
<ID>_R158</ID>
<pin1name>_XX101(_PX4)</pin1name>
<pin2name>_X156(_PX4)</pin2name>
</relation>
<relation>
<ID>_R159</ID>
<pin1name>_X156(_PX5)</pin1name>
<pin2name>_XX101(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X160</ID>
<x0>78</x0>
<y0>371</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJButton)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJButton cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R161</ID>
<pin1name>_X156(_PX3)</pin1name>
<pin2name>_X160(_PX3)</pin2name>
</relation>
<relation>
<ID>_R162</ID>
<pin1name>_X156(_PX4)</pin1name>
<pin2name>_X160(_PX4)</pin2name>
</relation>
<relation>
<ID>_R163</ID>
<pin1name>_X160(_PX5)</pin1name>
<pin2name>_X156(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X164</ID>
<x0>78</x0>
<y0>403</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>clicked_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;clickedピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJButton)c;
data.setSelected(cmp.print_clicked_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.print_clicked_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJButton cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R165</ID>
<pin1name>_X160(_PX3)</pin1name>
<pin2name>_X164(_PX3)</pin2name>
</relation>
<relation>
<ID>_R166</ID>
<pin1name>_X160(_PX4)</pin1name>
<pin2name>_X164(_PX4)</pin2name>
</relation>
<relation>
<ID>_R167</ID>
<pin1name>_X164(_PX5)</pin1name>
<pin2name>_X160(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X168</ID>
<x0>78</x0>
<y0>435</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJButton)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJButton)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R169</ID>
<pin1name>_X164(_PX3)</pin1name>
<pin2name>_X168(_PX3)</pin2name>
</relation>
<relation>
<ID>_R170</ID>
<pin1name>_X164(_PX4)</pin1name>
<pin2name>_X168(_PX4)</pin2name>
</relation>
<relation>
<ID>_R171</ID>
<pin1name>_X168(_PX5)</pin1name>
<pin2name>_X164(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R41</ID>
<pin1name>_X40(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_X40(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X40(_PX7)</pin2name>
</relation>
<relation>
<ID>_R44</ID>
<pin1name>_X40(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X40(_PX2)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X40(_PX39)</pin2name>
</relation>
<relation>
<ID>_R47</ID>
<pin1name>_X40(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
</xobject>
<relation>
<ID>_R34</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X33(_PX3)</pin2name>
</relation>
<relation>
<ID>_R35</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X33(_PX1)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_X33(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X33(_PX24)</pin2name>
</relation>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<pin>
<ID>_PX20</ID>
<x0>510</x0>
<y0>242</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>633</px>
<py>16</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>416</x0>
<y0>241</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>2</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>5</x0>
<y0>106</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>0</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>356</x0>
<y0>26</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>15</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>220</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>259</px>
<py>19</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>328</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>95</px>
<py>0</py>
</pin>
<xobject>
<ID>_XX7</ID>
<x0>156</x0>
<y0>42</y0>
<width>166</width>
<height>128</height>
<ID_maker>27</ID_maker>
<objectname>ButtonResizable</objectname>
<description>ボタン（サイズ可変）</description>
<relation>
<ID>_RX15</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX14</ID>
<x0>1</x0>
<y0>146</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>13</px>
<py>68</py>
</pin>
<codeclip>
<ID>_CX6</ID>
<x0>132</x0>
<y0>6</y0>
<width>291</width>
<height>22</height>
<codetext>String ButtonName=&quot;BUTTON&quot;;//ボタンの名前
</codetext>
</codeclip>
<aobject>
<ID>_AX3</ID>
<x0>150</x0>
<y0>33</y0>
<width>274</width>
<height>184</height>
<ID_maker>33</ID_maker>
<objectname>XButton</objectname>
<description>ボタンの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>120</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>242</x0>
<y0>299</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>139</inconnectx0>
<inconnecty0>39</inconnecty0>
<outconnectx0>141</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ボタンのインスタンスを
// 生成する
btn= new  inbutton(ButtonName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>254</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>255</x0>
<y0>214</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>28</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>42</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)btn;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>29</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inbutton btn;
class inbutton extends XJButton implements MouseListener, MouseMotionListener, KeyListener{
inbutton(String s){
((XJButton)this).ImageFile = null;
setText(s);
setOpaque(true);
setMargin( new Insets(0,0,0,0) );
setBorder(new LineBorder(Color.BLACK, 1, false));
setBackground(Color.lightGray);
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){released( (Component)this, e.getX(), e.getY() );}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void keyPressed(KeyEvent e){ key_pressed( this, e.getKeyCode());}
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<operation>
<ID>_O23</ID>
<state1>_SINIT</state1>
<state2>_S26</state2>
<x0>29</x0>
<y0>279</y0>
<width>181</width>
<height>91</height>
<inconnectx0>163</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>161</outconnectx0>
<outconnecty0>35</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>70</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>66</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>116</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;BUTTON&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;BUTTON&quot;) ) ) return;
btn = new inbutton(&quot; &quot;);
c=btn;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();
</codetext>
</operation>
<operation>
<ID>_O24</ID>
<state1>_S26</state1>
<state2>_SINIT</state2>
<x0>402</x0>
<y0>283</y0>
<width>127</width>
<height>80</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>39</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>22</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
btn.setName( fld.nextToken() );
String s = fld.nextToken();
if( s.equals(&quot;null&quot;) ) btn.setText(&quot;&quot;); else btn.setText( s );
btn.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
btn.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
btn.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
btn.setFont( new Font( fld.nextToken(),Font.PLAIN,parseInt(fld.nextToken()) ) );
String fn = fld.nextToken();
if( fn.equals(&quot;null&quot;) ) ((XJButton)btn).ImageFile = &quot;&quot;;
else{
  ((XJButton)btn).ImageFile = fn;
  btn.setIcon( new ImageIcon( fn ) );
}
btn.setHorizontalAlignment( parseInt(fld.nextToken()) );
btn.setVerticalAlignment( parseInt(fld.nextToken()) );
if( fld.hasMoreTokens() ) btn.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) btn.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) btn.print_clicked_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) btn.super_class[AppTyp] = fld.nextToken();
</codetext>
</operation>
<pin>
<ID>_P27</ID>
<x0>28</x0>
<y0>405</y0>
<width>108</width>
<height>27</height>
<text>Load(String s)</text>
<px>2</px>
<py>157</py>
</pin>
<state>
<ID>_S26</ID>
<x0>272</x0>
<y0>370</y0>
<width>70</width>
<height>40</height>
<text>     状態２</text>
<isinitstate>0</isinitstate>
</state>
<action>
<ID>_A28</ID>
<comp1name>_P27</comp1name>
<comp2name>_O23</comp2name>
</action>
<action>
<ID>_A29</ID>
<comp1name>_O23</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_C30</ID>
<x0>204</x0>
<y0>60</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P31</ID>
<x0>457</x0>
<y0>21</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P32</ID>
<x0>471</x0>
<y0>44</y0>
<width>230</width>
<height>25</height>
<text>key_pressed( Component c, int key)</text>
<px>9</px>
<py>137</py>
</pin>
</aobject>
<pin>
<ID>_PX2</ID>
<x0>3</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>20</px>
<py>36</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>41</x0>
<y0>52</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>110</py>
</pin>
<pin>
<ID>_P20</ID>
<x0>25</x0>
<y0>191</y0>
<width>88</width>
<height>30</height>
<text>Load(String s)</text>
<px>13</px>
<py>96</py>
</pin>
<relation>
<ID>_R21</ID>
<pin1name>_P20</pin1name>
<pin2name>_AX3(_P27)</pin2name>
</relation>
<aobject>
<ID>_A22</ID>
<x0>485</x0>
<y0>62</y0>
<width>303</width>
<height>137</height>
<ID_maker>19</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>642</x0>
<y0>216</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>4</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>381</x0>
<y0>144</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>89</x0>
<y0>320</y0>
<width>230</width>
<height>27</height>
<text>key_pressed( Component c, int key)</text>
<px>10</px>
<py>103</py>
</pin>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>388</x0>
<y0>314</y0>
<width>170</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A18</ID>
<comp1name>_P14</comp1name>
<comp2name>_O17</comp2name>
</action>
</aobject>
<relation>
<ID>_R23</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_A22(_PX2)</pin2name>
</relation>
<relation>
<ID>_R24</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_A22(_PX1)</pin2name>
</relation>
<relation>
<ID>_R25</ID>
<pin1name>_AX3(_P31)</pin1name>
<pin2name>_A22(_P11)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_AX3(_P32)</pin1name>
<pin2name>_A22(_P14)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R38</ID>
<pin1name>_X33(_P38)</pin1name>
<pin2name>_P32</pin2name>
</relation>
<pin>
<ID>_PX23</ID>
<x0>511</x0>
<y0>33</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>702</px>
<py>0</py>
</pin>
<relation>
<ID>_R48</ID>
<pin1name>_A45(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<codeclip>
<ID>_C44</ID>
<x0>72</x0>
<y0>275</y0>
<width>272</width>
<height>23</height>
<codetext>String ImageFile=&quot;resources/button.jpg&quot;;
</codetext>
</codeclip>
<relation>
<ID>_R39</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X33(_PX27)</pin2name>
</relation>
<pin>
<ID>_P32</ID>
<x0>626</x0>
<y0>103</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<pin>
<ID>_P49</ID>
<x0>20</x0>
<y0>168</y0>
<width>89</width>
<height>27</height>
<text>Load(String s)</text>
<px>122</px>
<py>14</py>
</pin>
<relation>
<ID>_R50</ID>
<pin1name>_P49</pin1name>
<pin2name>_XX7(_P20)</pin2name>
</relation>
<relation>
<ID>_R51</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X33(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R67</ID>
<pin1name>_X62(_PX3)</pin1name>
<pin2name>_X61(_PX3)</pin2name>
</relation>
<relation>
<ID>_R68</ID>
<pin1name>_X63(_PX3)</pin1name>
<pin2name>_X62(_PX3)</pin2name>
</relation>
<relation>
<ID>_R69</ID>
<pin1name>_X64(_PX3)</pin1name>
<pin2name>_X63(_PX3)</pin2name>
</relation>
<xobject>
<ID>_X111</ID>
<x0>0</x0>
<y0>230</y0>
<width>752</width>
<height>37</height>
<ID_maker>55</ID_maker>
<objectname>List</objectname>
<description>ボタンをクリックすると上位コンポーネントにListを貼り付けるツール
</description>
<aobject>
<ID>_A48</ID>
<x0>161</x0>
<y0>183</y0>
<width>148</width>
<height>82</height>
<ID_maker>14</ID_maker>
<objectname>XImagebutton</objectname>
<description>イメージボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>1</px>
<py>42</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
b.setToolTipText(&quot;リスト&quot;);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>97</px>
<py>25</py>
</pin>
<codeclip>
<ID>_C13</ID>
<x0>124</x0>
<y0>10</y0>
<width>318</width>
<height>24</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
XImagebutton parent;
inbutton(XImagebutton prnt){
super( new ImageIcon(ImageFile));
setBorder( new BevelBorder( BevelBorder.RAISED ) );
parent=prnt;
addActionListener(this);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>103</px>
<py>62</py>
</pin>
</aobject>
<relation>
<ID>_R49</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A48(_PX11)</pin2name>
</relation>
<relation>
<ID>_R50</ID>
<pin1name>_A48(_PX2)</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
<relation>
<ID>_R51</ID>
<pin1name>_A48(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<codeclip>
<ID>_C47</ID>
<x0>145</x0>
<y0>273</y0>
<width>272</width>
<height>23</height>
<codetext>String ImageFile=&quot;resources/list.jpg&quot;;
</codetext>
</codeclip>
<relation>
<ID>_RX11</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_PX10</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<pin>
<ID>_PX23</ID>
<x0>512</x0>
<y0>33</y0>
<width>56</width>
<height>26</height>
<text>cansel()</text>
<px>703</px>
<py>2</py>
</pin>
<xobject>
<ID>_XX7</ID>
<x0>156</x0>
<y0>42</y0>
<width>166</width>
<height>128</height>
<ID_maker>31</ID_maker>
<objectname>ListResizable</objectname>
<description>リスト</description>
<relation>
<ID>_R21</ID>
<pin1name>_AX3(_PX14)</pin1name>
<pin2name>_PX14</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX3(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX4</ID>
<pin1name>_AX3(_PX6)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<pin>
<ID>_PX1</ID>
<x0>43</x0>
<y0>36</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>110</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>11</x0>
<y0>85</y0>
<width>116</width>
<height>35</height>
<text>Join(Component c)</text>
<px>22</px>
<py>57</py>
</pin>
<aobject>
<ID>_AX3</ID>
<x0>160</x0>
<y0>21</y0>
<width>299</width>
<height>185</height>
<ID_maker>37</ID_maker>
<objectname>XList</objectname>
<description>Listの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>135</px>
<py>35</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>109</x0>
<y0>0</y0>
<width>109</width>
<height>22</height>
<codetext>inlist lst;
class inlist extends XJList implements MouseListener, MouseMotionListener, ListSelectionListener,KeyListener{
inlist(){
setFocusable(true);
addKeyListener(this);
addMouseListener(this);
addMouseMotionListener(this);
addMouseListener(this);
addMouseMotionListener(this);
addListSelectionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked(this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){ released( (Component)this, e.getX(), e.getY()); }
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
public void valueChanged(ListSelectionEvent e){ selected( getSelectedValue() ); }
public void keyPressed(KeyEvent e){ key_pressed(this, e.getKeyCode()); }
public void keyReleased(KeyEvent event){}
public void keyTyped(KeyEvent event){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>155</x0>
<y0>253</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>34</px>
<py>33</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>382</x0>
<y0>137</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>67</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=lst;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>228</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>257</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>85</x0>
<y0>145</y0>
<width>119</width>
<height>64</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>100</outconnectx0>
<outconnecty0>4</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>80</inpinx0>
<inpiny0>45</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// インスタンスを
// 生成する
lst= new  inlist();
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>235</x0>
<y0>319</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>3</px>
<py>52</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>12</px>
<py>120</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>5</px>
<py>70</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>108</x0>
<y0>21</y0>
<width>110</width>
<height>23</height>
<text>selected( Object o)</text>
<px>81</px>
<py>10</py>
</pin>
<operation>
<ID>_O27</ID>
<state1>_SINIT</state1>
<state2>_S30</state2>
<x0>17</x0>
<y0>314</y0>
<width>192</width>
<height>80</height>
<inconnectx0>173</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>174</outconnectx0>
<outconnecty0>33</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>84</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>83</outpinx0>
<outpiny0>60</outpiny0>
<outpinwidth>110</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件  s.startsWith(&quot;LIST&quot;)
インスタンスを
生成する
 */
 if( !(  s.startsWith(&quot;LIST&quot;) ) ) return;
lst = new inlist();
c = lst;
fld = new StringTokenizer( s, &quot;;&quot; );
String d = fld.nextToken();

//System.out.println(&quot;LOAD STRING=&quot;+s);
</codetext>
</operation>
<operation>
<ID>_O28</ID>
<state1>_S30</state1>
<state2>_SINIT</state2>
<x0>402</x0>
<y0>283</y0>
<width>127</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>45</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// インスタンスの
// プロパティを
// 設定する
lst.setName( fld.nextToken() );
lst.setBounds( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) );
lst.setForeground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
lst.setBackground( new Color( parseInt(fld.nextToken()),parseInt(fld.nextToken()),parseInt(fld.nextToken()) ) );
lst.setFont( new Font( fld.nextToken(),Font.PLAIN,parseInt(fld.nextToken()) ) );
if( fld.hasMoreTokens() ) lst.is_opaque = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) lst.is_scrollable = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) lst.print_created_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) lst.print_selected_pin = (parseInt(fld.nextToken())!=0);
if( fld.hasMoreTokens() ) lst.super_class[AppTyp] = fld.nextToken();

</codetext>
</operation>
<state>
<ID>_S30</ID>
<x0>264</x0>
<y0>411</y0>
<width>70</width>
<height>40</height>
<text>     状態2</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_P31</ID>
<x0>15</x0>
<y0>433</y0>
<width>89</width>
<height>23</height>
<text>Load(String s)</text>
<px>15</px>
<py>161</py>
</pin>
<action>
<ID>_A32</ID>
<comp1name>_O27</comp1name>
<comp2name>_PX6</comp2name>
</action>
<action>
<ID>_A33</ID>
<comp1name>_P31</comp1name>
<comp2name>_O27</comp2name>
</action>
<codeclip>
<ID>_C34</ID>
<x0>197</x0>
<y0>55</y0>
<width>258</width>
<height>25</height>
<codetext>StringTokenizer fld;//プロパティフィールド
</codetext>
</codeclip>
<pin>
<ID>_P35</ID>
<x0>455</x0>
<y0>23</y0>
<width>194</width>
<height>22</height>
<text>released(Component c, int x,int y)</text>
<px>3</px>
<py>103</py>
</pin>
<pin>
<ID>_P36</ID>
<x0>473</x0>
<y0>53</y0>
<width>239</width>
<height>27</height>
<text>key_pressed( Component c, int key)</text>
<px>17</px>
<py>140</py>
</pin>
</aobject>
<pin>
<ID>_PX14</ID>
<x0>1</x0>
<y0>139</y0>
<width>132</width>
<height>30</height>
<text>clicked(Component c)</text>
<px>16</px>
<py>82</py>
</pin>
<pin>
<ID>_P24</ID>
<x0>21</x0>
<y0>184</y0>
<width>82</width>
<height>30</height>
<text>Load(String s)</text>
<px>18</px>
<py>30</py>
</pin>
<relation>
<ID>_R25</ID>
<pin1name>_P24</pin1name>
<pin2name>_AX3(_P31)</pin2name>
</relation>
<aobject>
<ID>_A26</ID>
<x0>526</x0>
<y0>66</y0>
<width>263</width>
<height>137</height>
<ID_maker>19</ID_maker>
<objectname>Modefier</objectname>
<description>GUIコンポーネントの大きさを変えたり移動させたりする役割をもつオブジェクト
</description>
<action>
<ID>_AX9</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX7</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>73</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>18</x0>
<y0>252</y0>
<width>193</width>
<height>22</height>
<text>pressed(Component c, int x, int y )</text>
<px>4</px>
<py>54</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>596</x0>
<y0>86</y0>
<width>192</width>
<height>22</height>
<text>drugged(Component c, int x, int y )</text>
<px>3</px>
<py>38</py>
</pin>
<codeclip>
<ID>_CX3</ID>
<x0>20</x0>
<y0>21</y0>
<width>288</width>
<height>19</height>
<codetext>int x0, x1, x2, y0, y1, y2;//コンポーネントの位置
</codetext>
</codeclip>
<codeclip>
<ID>_CX4</ID>
<x0>20</x0>
<y0>41</y0>
<width>271</width>
<height>19</height>
<codetext>int width, height;//コンポーネントの大きさ
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>20</x0>
<y0>0</y0>
<width>278</width>
<height>20</height>
<codetext>Component cmp;//操作対象のコンポーネント
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>34</x0>
<y0>92</y0>
<width>195</width>
<height>135</height>
<inconnectx0>176</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>178</outconnectx0>
<outconnecty0>32</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>117</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 操作対象のコンポーネントと
// マウスの位置を取得し、
// 動作モードを設定する
// 0:移動モード
// 1:サイズ変更モード
// (マウスの位置は右下のとき)
cmp = c;
width = cmp.getWidth();
height = cmp.getHeight();
x0 = cmp.getLocation().x;
y0 = cmp.getLocation().y;
if(x&gt;width-10 &amp;&amp; y&gt; height-10 ) mode =1;
else mode =0;
x2=x;
y2=y;
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.requestFocus();
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>343</x0>
<y0>9</y0>
<width>217</width>
<height>98</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>29</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x, int y)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>79</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// マウスカーソルの位置に
// 矩形を描く
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
x1=x;
y1=y;
if(mode==1){
width=x1+5;
if(width&lt;10) width=10;
height=y1+5;
if(height&lt;10) height=10;
}
else{
x0+=x1-x2;
if(x0&lt;0) x0=0;
y0+=y1-y2;
if(y0&lt;0) y0=0;
}
x2=x1;
y2=y1;
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
</codetext>
</operation>
<codeclip>
<ID>_CX10</ID>
<x0>20</x0>
<y0>59</y0>
<width>143</width>
<height>20</height>
<codetext>int mode;//動作モード
</codetext>
</codeclip>
<pin>
<ID>_P11</ID>
<x0>716</x0>
<y0>223</y0>
<width>198</width>
<height>29</height>
<text>released(Component c, int x,int y)</text>
<px>5</px>
<py>71</py>
</pin>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>425</x0>
<y0>143</y0>
<width>226</width>
<height>115</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int x,int y)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>89</inpiny0>
<inpinwidth>160</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 動作モードに応じてマウスカーソル
// 位置にコンポーネント移動させたり
// コンポーネントの大きさを変えたり
// する
Graphics grp = cmp.getParent().getGraphics();
grp.setXORMode(Color.white);
grp.drawRect( x0+1, y0+1, width-2, height-2);
grp.setPaintMode();
cmp.setBounds( x0, y0, width, height );
cmp.repaint();
</codetext>
</operation>
<action>
<ID>_A13</ID>
<comp1name>_P11</comp1name>
<comp2name>_O12</comp2name>
</action>
<pin>
<ID>_P14</ID>
<x0>10</x0>
<y0>327</y0>
<width>230</width>
<height>27</height>
<text>key_pressed( Component c, int key)</text>
<px>0</px>
<py>97</py>
</pin>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>309</x0>
<y0>294</y0>
<width>170</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c, int key)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>159</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// キー入力処理


if( key == KeyEvent.VK_ENTER ) mode = -1;
if( mode == 0 ){
  if( key == KeyEvent.VK_LEFT ){
     x0--;
     if( x0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_RIGHT ){
     x0++;
   }
  if( key == KeyEvent.VK_UP ){
     y0--;
     if( y0 &lt; 0 ) x0 = 0;
   }
  if( key == KeyEvent.VK_DOWN ){
     y0++;
   }
}
if( mode == 1 ){
  if( key == KeyEvent.VK_LEFT ){
     width--;
     if( width &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_RIGHT ){
     width++;
   }
  if( key == KeyEvent.VK_UP ){
     height--;
     if( height &lt; 10 ) x0 = 10;
   }
  if( key == KeyEvent.VK_DOWN ){
     height++;
   }
}
c.setBounds( x0, y0, width, height );
c.repaint();

</codetext>
</operation>
<action>
<ID>_A18</ID>
<comp1name>_P14</comp1name>
<comp2name>_O17</comp2name>
</action>
</aobject>
<relation>
<ID>_R27</ID>
<pin1name>_AX3(_PX16)</pin1name>
<pin2name>_A26(_PX2)</pin2name>
</relation>
<relation>
<ID>_R28</ID>
<pin1name>_AX3(_PX15)</pin1name>
<pin2name>_A26(_PX1)</pin2name>
</relation>
<relation>
<ID>_R29</ID>
<pin1name>_AX3(_P35)</pin1name>
<pin2name>_A26(_P11)</pin2name>
</relation>
<relation>
<ID>_R30</ID>
<pin1name>_AX3(_P36)</pin1name>
<pin2name>_A26(_P14)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX3</ID>
<x0>326</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>94</px>
<py>0</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>4</x0>
<y0>220</y0>
<width>119</width>
<height>28</height>
<text>join(Component c)</text>
<px>258</px>
<py>16</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>357</x0>
<y0>37</y0>
<width>128</width>
<height>28</height>
<text>paste(Component c)</text>
<px>476</px>
<py>17</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>5</x0>
<y0>120</y0>
<width>129</width>
<height>24</height>
<text>clicked(Component c)</text>
<px>357</px>
<py>0</py>
</pin>
<pin>
<ID>_PX19</ID>
<x0>414</x0>
<y0>241</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>589</px>
<py>0</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>508</x0>
<y0>242</y0>
<width>71</width>
<height>29</height>
<text>get(Color c)</text>
<px>632</px>
<py>19</py>
</pin>
<pin>
<ID>_P33</ID>
<x0>620</x0>
<y0>114</y0>
<width>97</width>
<height>26</height>
<text>out(Container c)</text>
<px>175</px>
<py>0</py>
</pin>
<xobject>
<ID>_X35</ID>
<x0>333</x0>
<y0>80</y0>
<width>272</width>
<height>98</height>
<ID_maker>41</ID_maker>
<objectname>PropertyContainer</objectname>
<description></description>
<relation>
<ID>_RX29</ID>
<pin1name>_PX27</pin1name>
<pin2name>_XX7(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX26</ID>
<pin1name>_PX24</pin1name>
<pin2name>_XX7(_PX39)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_XX7(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
<aobject>
<ID>_A35</ID>
<x0>144</x0>
<y0>180</y0>
<width>227</width>
<height>68</height>
<ID_maker>10</ID_maker>
<objectname>プロパティ保持</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>35</x0>
<y0>49</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S0</ID>
<x0>209</x0>
<y0>41</y0>
<width>70</width>
<height>40</height>
<text>    待ち状態</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C1</ID>
<x0>128</x0>
<y0>286</y0>
<width>270</width>
<height>26</height>
<codetext>Container cnt;//プロパティを格納するコンテナ
</codetext>
</codeclip>
<operation>
<ID>_O2</ID>
<state1>_SINIT</state1>
<state2>_S0</state2>
<x0>93</x0>
<y0>125</y0>
<width>120</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>107</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>53</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
取得する</description>
<codetext>cnt = (Container)c;
</codetext>
</operation>
<pin>
<ID>_P3</ID>
<x0>118</x0>
<y0>243</y0>
<width>113</width>
<height>20</height>
<text>get(Component c)</text>
<px>14</px>
<py>27</py>
</pin>
<action>
<ID>_A4</ID>
<comp1name>_P3</comp1name>
<comp2name>_O2</comp2name>
</action>
<operation>
<ID>_O5</ID>
<state1>_S0</state1>
<state2>_S0</state2>
<x0>280</x0>
<y0>120</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Object d)</inpintext>
<inpinx0>58</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>34</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>96</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プロパティを
出力する</description>
<codetext>c=cnt;
</codetext>
</operation>
<pin>
<ID>_P6</ID>
<x0>456</x0>
<y0>164</y0>
<width>95</width>
<height>23</height>
<text>in(Object dmy)</text>
<px>125</px>
<py>1</py>
</pin>
<action>
<ID>_A7</ID>
<comp1name>_P6</comp1name>
<comp2name>_O5</comp2name>
</action>
<pin>
<ID>_P8</ID>
<x0>306</x0>
<y0>243</y0>
<width>109</width>
<height>27</height>
<text>out(Container c)</text>
<px>47</px>
<py>45</py>
</pin>
<action>
<ID>_A9</ID>
<comp1name>_O5</comp1name>
<comp2name>_P8</comp2name>
</action>
</aobject>
<relation>
<ID>_R30</ID>
<pin1name>_PX3</pin1name>
<pin2name>_XX7(_PX7)</pin2name>
</relation>
<relation>
<ID>_R31</ID>
<pin1name>_XX7(_PX7)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_XX7(_PX1)</pin1name>
<pin2name>_A35(_P6)</pin2name>
</relation>
<relation>
<ID>_RX12</ID>
<pin1name>_XX7(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A35(_P3)</pin2name>
</relation>
<pin>
<ID>_PX27</ID>
<x0>468</x0>
<y0>202</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>180</px>
<py>15</py>
</pin>
<codeclip>
<ID>_CX16</ID>
<x0>0</x0>
<y0>47</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<xobject>
<ID>_XX7</ID>
<x0>209</x0>
<y0>45</y0>
<width>212</width>
<height>131</height>
<ID_maker>161</ID_maker>
<objectname>PropertiesList</objectname>
<description></description>
<xobject>
<ID>_X127</ID>
<x0>79</x0>
<y0>101</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Name</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>9</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>176</width>
<height>22</height>
<codetext>String LabelName=&quot;名前&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前を得る</description>
<codetext>cmp =c;
data.setText(cmp.getName());
if( data.getText().equals(&quot;&quot;) ){
 data.setText(&quot;LIST&quot;+ID_maker++);
 cmp.setName( data.getText() );
}
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
名前をセットする</description>
<codetext>cmp.setName(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
</aobject>
</xobject>
<relation>
<ID>_R128</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X127(_PX3)</pin2name>
</relation>
<relation>
<ID>_R129</ID>
<pin1name>_X127(_PX3)</pin1name>
<pin2name>_XX34(_PX3)</pin2name>
</relation>
<xobject>
<ID>_X110</ID>
<x0>79</x0>
<y0>200</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>FontName</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>41</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>index = list.getSelectedIndex();
int st = ((JComponent)cmp).getFont().getStyle();
int si = ((JComponent)cmp).getFont().getSize();
Font f = new Font( fonts[index],st,si);
//System.out.println( f );
((JComponent)cmp).setFont( f );
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>210</x0>
<y0>136</y0>
<width>132</width>
<height>78</height>
<inconnectx0>4</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp = c;
int si = ((JComponent)cmp).getFont().getSize();
int st =((JComponent)cmp).getFont().getStyle(); 
String nm = ((JComponent)cmp).getFont().getName();
for( index = fonts.length-1; index &gt;0 &amp;&amp; (! nm.equals( fonts[index])); index-- );
list.setSelectedIndex(index);
Font f = new Font(fonts[index],st, si );
//System.out.println(f);
((JComponent)cmp).setFont(f );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>212</x0>
<y0>235</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)( new JScrollPane(list));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>51</x0>
<y0>242</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>fonts = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
list =new inlist(fonts);
list.setVisibleRowCount(1);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>105</x0>
<y0>150</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>385</x0>
<y0>284</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>402</x0>
<y0>243</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>386</x0>
<y0>100</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>387</x0>
<y0>178</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>76</width>
<height>18</height>
<codetext>inlist list;
class inlist extends JList implements ListSelectionListener{
inlist(String[] s){
setListData(s);
addListSelectionListener(this);
}
public void valueChanged(ListSelectionEvent e){changed();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>7</x0>
<y0>145</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>80</x0>
<y0>51</y0>
<width>65</width>
<height>19</height>
<text>changed()</text>
<px>159</px>
<py>53</py>
</pin>
<codeclip>
<ID>_CX18</ID>
<x0>4</x0>
<y0>88</y0>
<width>116</width>
<height>20</height>
<codetext>int index;
</codetext>
</codeclip>
<codeclip>
<ID>_CX19</ID>
<x0>0</x0>
<y0>18</y0>
<width>189</width>
<height>21</height>
<codetext>String[] fonts;//フォントの種類
</codetext>
</codeclip>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>167</width>
<height>26</height>
<codetext>String LabelName=&quot;書体&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
</xobject>
<relation>
<ID>_R130</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X127(_PX4)</pin2name>
</relation>
<relation>
<ID>_R113</ID>
<pin1name>_XX34(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R114</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X110(_PX4)</pin2name>
</relation>
<relation>
<ID>_R123</ID>
<pin1name>_X110(_PX3)</pin1name>
<pin2name>_X122(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX75</ID>
<pin1name>_XX34(_PX43)</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<relation>
<ID>_RX73</ID>
<pin1name>_XX34(_PX21)</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX71</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_XX34(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX70</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_XX34(_PX5)</pin2name>
</relation>
<relation>
<ID>_RX69</ID>
<pin1name>_XX34(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R116</ID>
<pin1name>_XX64(_PX3)</pin1name>
<pin2name>_X110(_PX3)</pin2name>
</relation>
<relation>
<ID>_R131</ID>
<pin1name>_X127(_PX4)</pin1name>
<pin2name>_XX34(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX40</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX34(_PX21)</pin2name>
</relation>
<relation>
<ID>_RX38</ID>
<pin1name>_XX34(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R136</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX34(_PX43)</pin2name>
</relation>
<relation>
<ID>_R124</ID>
<pin1name>_X110(_PX4)</pin1name>
<pin2name>_X122(_PX4)</pin2name>
</relation>
<relation>
<ID>_R134</ID>
<pin1name>_XX34(_PX5)</pin1name>
<pin2name>_X127(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX5</ID>
<x0>382</x0>
<y0>58</y0>
<width>110</width>
<height>24</height>
<text>join(Component c)</text>
<px>9</px>
<py>62</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>334</x0>
<y0>59</y0>
<width>41</width>
<height>22</height>
<text>reset()</text>
<px>151</px>
<py>104</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>176</x0>
<y0>60</y0>
<width>114</width>
<height>21</height>
<text>open(Component c)</text>
<px>47</px>
<py>86</py>
</pin>
<pin>
<ID>_PX7</ID>
<x0>287</x0>
<y0>29</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>7</px>
<py>45</py>
</pin>
<xobject>
<ID>_XX34</ID>
<x0>79</x0>
<y0>133</y0>
<width>529</width>
<height>34</height>
<ID_maker>47</ID_maker>
<objectname>FrontColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>11</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>2</x0>
<y0>292</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;文字の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>7</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>9</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
前景色を取得する</description>
<codetext>cmp=c;
color = cmp.getForeground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.black;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
前景色を設定する
</description>
<codetext>color=c;
cmp.setForeground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
</xobject>
<pin>
<ID>_PX35</ID>
<x0>493</x0>
<y0>59</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>145</px>
<py>30</py>
</pin>
<pin>
<ID>_PX39</ID>
<x0>538</x0>
<y0>60</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>135</px>
<py>57</py>
</pin>
<xobject>
<ID>_XX64</ID>
<x0>79</x0>
<y0>166</y0>
<width>529</width>
<height>35</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>252</px>
<py>9</py>
</pin>
<codeclip>
<ID>_CX7</ID>
<x0>8</x0>
<y0>292</y0>
<width>200</width>
<height>23</height>
<codetext>String LabelName=&quot;背景の色&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>205</px>
<py>29</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>125</x0>
<y0>54</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>210</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>1</x0>
<y0>297</y0>
<width>108</width>
<height>24</height>
<text>get(Component c)</text>
<px>27</px>
<py>66</py>
</pin>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=c;
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
</aobject>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>11</px>
<py>35</py>
</pin>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>186</x0>
<y0>3</y0>
<width>189</width>
<height>18</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
</xobject>
<relation>
<ID>_R126</ID>
<pin1name>_X122(_PX5)</pin1name>
<pin2name>_X110(_PX5)</pin2name>
</relation>
<relation>
<ID>_R120</ID>
<pin1name>_X110(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X122</ID>
<x0>79</x0>
<y0>232</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>FontSize</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>210</width>
<height>22</height>
<codetext>String LabelName=&quot;文字の大きさ&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>20</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =c;
data.setText(((JComponent)cmp).getFont().getSize()+&quot;&quot;);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>Font f = ((JComponent)cmp).getFont();
String nm = f.getName(); 
int st = f.getStyle();
((JComponent)cmp).setFont(new Font( nm, st,(new Integer(0)).parseInt(data.getText()) ) );
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R135</ID>
<pin1name>_X127(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<xobject>
<ID>_X141</ID>
<x0>79</x0>
<y0>264</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Transparency</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;透明コンポーネント&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJList)c;
data.setSelected(!cmp.is_opaque);
cmp.setOpaque(cmp.is_opaque);
cmp.repaint();
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.setOpaque( cmp.is_opaque = !data.isSelected() );
cmp.repaint();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJList cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R142</ID>
<pin1name>_X122(_PX3)</pin1name>
<pin2name>_X141(_PX3)</pin2name>
</relation>
<relation>
<ID>_R143</ID>
<pin1name>_X122(_PX4)</pin1name>
<pin2name>_X141(_PX4)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_X141(_PX5)</pin1name>
<pin2name>_X122(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X145</ID>
<x0>79</x0>
<y0>296</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>Scrollable</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;スクロール可能&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJList)c;
data.setSelected(cmp.is_scrollable);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.is_scrollable=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJList cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R146</ID>
<pin1name>_X141(_PX3)</pin1name>
<pin2name>_X145(_PX3)</pin2name>
</relation>
<relation>
<ID>_R147</ID>
<pin1name>_X141(_PX4)</pin1name>
<pin2name>_X145(_PX4)</pin2name>
</relation>
<relation>
<ID>_R148</ID>
<pin1name>_X145(_PX5)</pin1name>
<pin2name>_X141(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X149</ID>
<x0>79</x0>
<y0>328</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>created_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;createdピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =(XJList)c;
data.setSelected(cmp.print_created_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
cmp.print_created_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJList cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R150</ID>
<pin1name>_X145(_PX3)</pin1name>
<pin2name>_X149(_PX3)</pin2name>
</relation>
<relation>
<ID>_R151</ID>
<pin1name>_X145(_PX4)</pin1name>
<pin2name>_X149(_PX4)</pin2name>
</relation>
<relation>
<ID>_R152</ID>
<pin1name>_X149(_PX5)</pin1name>
<pin2name>_X145(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X153</ID>
<x0>79</x0>
<y0>360</y0>
<width>529</width>
<height>33</height>
<ID_maker>21</ID_maker>
<objectname>selected_pin</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>9</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>44</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends XJLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>15</x0>
<y0>85</y0>
<width>251</width>
<height>23</height>
<codetext>String LabelName=&quot;selectedピンを表示&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>21</ID_maker>
<objectname>Check</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>51</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>51</y0>
<width>129</width>
<height>18</height>
<codetext>incheckbox data;
class incheckbox extends JCheckBox implements ActionListener{
incheckbox(){
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>89</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定</description>
<codetext>data =new incheckbox();
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容を得る</description>
<codetext>cmp =(XJList)c;
data.setSelected(cmp.print_selected_pin);
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
内容をセットする</description>
<codetext>cmp.print_selected_pin=data.isSelected();
</codetext>
</operation>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>69</y0>
<width>119</width>
<height>19</height>
<codetext>XJList cmp;
</codetext>
</codeclip>
</aobject>
<relation>
<ID>_R19</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R154</ID>
<pin1name>_X149(_PX3)</pin1name>
<pin2name>_X153(_PX3)</pin2name>
</relation>
<relation>
<ID>_R155</ID>
<pin1name>_X149(_PX4)</pin1name>
<pin2name>_X153(_PX4)</pin2name>
</relation>
<relation>
<ID>_R156</ID>
<pin1name>_X153(_PX5)</pin1name>
<pin2name>_X149(_PX5)</pin2name>
</relation>
<xobject>
<ID>_X157</ID>
<x0>79</x0>
<y0>392</y0>
<width>529</width>
<height>33</height>
<ID_maker>20</ID_maker>
<objectname>SuperClass</objectname>
<description></description>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>4</x0>
<y0>75</y0>
<width>119</width>
<height>19</height>
<codetext>Component cmp;
</codetext>
</codeclip>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>131</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>29</inpinx0>
<inpiny0>57</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容をセットする
((XJList)cmp).super_class[AppTyp] = data.getText();
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>55</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントの
// 内容を得る
cmp =c;
data.setText( ((XJList)cmp).super_class[AppTyp] );
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=(Component)data;
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>59</width>
<height>23</height>
<text>update()</text>
<px>155</px>
<py>5</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>116</width>
<height>20</height>
<text>get(Component c)</text>
<px>230</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX1</ID>
<x0>4</x0>
<y0>56</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){enter();}
}
</codetext>
</codeclip>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX16</ID>
<x0>133</x0>
<y0>56</y0>
<width>44</width>
<height>19</height>
<text>enter()</text>
<px>159</px>
<py>53</py>
</pin>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>227</width>
<height>24</height>
<codetext>String LabelName=&quot;スーパークラス&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
</aobject>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>307</px>
<py>8</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>342</x0>
<y0>43</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>10</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>108</width>
<height>22</height>
<text>get(Component c)</text>
<px>104</px>
<py>10</py>
</pin>
<relation>
<ID>_R18</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R158</ID>
<pin1name>_X153(_PX3)</pin1name>
<pin2name>_X157(_PX3)</pin2name>
</relation>
<relation>
<ID>_R159</ID>
<pin1name>_X153(_PX4)</pin1name>
<pin2name>_X157(_PX4)</pin2name>
</relation>
<relation>
<ID>_R160</ID>
<pin1name>_X157(_PX5)</pin1name>
<pin2name>_X153(_PX5)</pin2name>
</relation>
</xobject>
<aobject>
<ID>_AX6</ID>
<x0>0</x0>
<y0>76</y0>
<width>139</width>
<height>172</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>21</px>
<py>57</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>169</y0>
<width>114</width>
<height>31</height>
<text>join(Component c)</text>
<px>20</px>
<py>133</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>101</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>36</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = (Component)panel;
</codetext>
</operation>
</aobject>
<pin>
<ID>_P38</ID>
<x0>190</x0>
<y0>283</y0>
<width>95</width>
<height>26</height>
<text>out(Container c)</text>
<px>172</px>
<py>42</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>153</x0>
<y0>50</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>5</px>
<py>71</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>505</x0>
<y0>128</y0>
<width>153</width>
<height>23</height>
<text>OpenDialog(Component c)</text>
<px>7</px>
<py>44</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>474</x0>
<y0>43</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>93</px>
<py>71</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>468</x0>
<y0>96</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>177</px>
<py>68</py>
</pin>
<relation>
<ID>_R39</ID>
<pin1name>_A35(_P8)</pin1name>
<pin2name>_P38</pin2name>
</relation>
<relation>
<ID>_R40</ID>
<pin1name>_PX1</pin1name>
<pin2name>_XX7(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R36</ID>
<pin1name>_PX3</pin1name>
<pin2name>_X35(_PX3)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_X35(_PX23)</pin1name>
<pin2name>_PX19</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_PX20</pin1name>
<pin2name>_X35(_PX24)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_X35(_P38)</pin1name>
<pin2name>_P33</pin2name>
</relation>
<relation>
<ID>_R40</ID>
<pin1name>_PX23</pin1name>
<pin2name>_X35(_PX27)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_XX7(_PX14)</pin1name>
<pin2name>_X35(_PX1)</pin2name>
</relation>
<pin>
<ID>_P52</ID>
<x0>19</x0>
<y0>59</y0>
<width>91</width>
<height>25</height>
<text>Load(String s)</text>
<px>122</px>
<py>17</py>
</pin>
<relation>
<ID>_R53</ID>
<pin1name>_P52</pin1name>
<pin2name>_XX7(_P24)</pin2name>
</relation>
<relation>
<ID>_R54</ID>
<pin1name>_XX7(_PX2)</pin1name>
<pin2name>_X35(_PX1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R77</ID>
<pin1name>_X61(_PX2)</pin1name>
<pin2name>_X62(_PX2)</pin2name>
</relation>
<relation>
<ID>_R78</ID>
<pin1name>_X62(_PX2)</pin1name>
<pin2name>_X63(_PX2)</pin2name>
</relation>
<relation>
<ID>_R79</ID>
<pin1name>_X63(_PX2)</pin1name>
<pin2name>_X64(_PX2)</pin2name>
</relation>
<relation>
<ID>_R112</ID>
<pin1name>_X111(_PX23)</pin1name>
<pin2name>_X64(_PX23)</pin2name>
</relation>
<relation>
<ID>_R75</ID>
<pin1name>_XX45(_PX2)</pin1name>
<pin2name>_X60(_PX2)</pin2name>
</relation>
<relation>
<ID>_R76</ID>
<pin1name>_X60(_PX2)</pin1name>
<pin2name>_X61(_PX2)</pin2name>
</relation>
<relation>
<ID>_R81</ID>
<pin1name>_XX45(_PX10)</pin1name>
<pin2name>_X60(_PX10)</pin2name>
</relation>
<relation>
<ID>_R82</ID>
<pin1name>_X60(_PX10)</pin1name>
<pin2name>_X61(_PX10)</pin2name>
</relation>
<relation>
<ID>_R83</ID>
<pin1name>_X61(_PX10)</pin1name>
<pin2name>_X62(_PX10)</pin2name>
</relation>
<relation>
<ID>_R84</ID>
<pin1name>_X62(_PX10)</pin1name>
<pin2name>_X63(_PX10)</pin2name>
</relation>
<relation>
<ID>_R85</ID>
<pin1name>_X63(_PX10)</pin1name>
<pin2name>_X64(_PX10)</pin2name>
</relation>
<relation>
<ID>_R113</ID>
<pin1name>_X111(_PX20)</pin1name>
<pin2name>_X64(_PX20)</pin2name>
</relation>
<relation>
<ID>_R87</ID>
<pin1name>_XX45(_PX1)</pin1name>
<pin2name>_X60(_PX1)</pin2name>
</relation>
<relation>
<ID>_R88</ID>
<pin1name>_X60(_PX1)</pin1name>
<pin2name>_X61(_PX1)</pin2name>
</relation>
<relation>
<ID>_R89</ID>
<pin1name>_X61(_PX1)</pin1name>
<pin2name>_X62(_PX1)</pin2name>
</relation>
<relation>
<ID>_R90</ID>
<pin1name>_X62(_PX1)</pin1name>
<pin2name>_X63(_PX1)</pin2name>
</relation>
<relation>
<ID>_R91</ID>
<pin1name>_X63(_PX1)</pin1name>
<pin2name>_X64(_PX1)</pin2name>
</relation>
<relation>
<ID>_R114</ID>
<pin1name>_X64(_PX19)</pin1name>
<pin2name>_X111(_PX19)</pin2name>
</relation>
<relation>
<ID>_R93</ID>
<pin1name>_XX45(_PX19)</pin1name>
<pin2name>_X60(_PX19)</pin2name>
</relation>
<relation>
<ID>_R94</ID>
<pin1name>_X60(_PX19)</pin1name>
<pin2name>_X61(_PX19)</pin2name>
</relation>
<relation>
<ID>_R95</ID>
<pin1name>_X61(_PX19)</pin1name>
<pin2name>_X62(_PX19)</pin2name>
</relation>
<relation>
<ID>_R96</ID>
<pin1name>_X62(_PX19)</pin1name>
<pin2name>_X63(_PX19)</pin2name>
</relation>
<relation>
<ID>_R97</ID>
<pin1name>_X63(_PX19)</pin1name>
<pin2name>_X64(_PX19)</pin2name>
</relation>
<relation>
<ID>_R115</ID>
<pin1name>_X64(_PX1)</pin1name>
<pin2name>_X111(_PX1)</pin2name>
</relation>
<relation>
<ID>_R116</ID>
<pin1name>_X64(_PX10)</pin1name>
<pin2name>_X111(_PX10)</pin2name>
</relation>
<relation>
<ID>_R100</ID>
<pin1name>_X64(_PX20)</pin1name>
<pin2name>_X63(_PX20)</pin2name>
</relation>
<relation>
<ID>_R101</ID>
<pin1name>_X63(_PX20)</pin1name>
<pin2name>_X62(_PX20)</pin2name>
</relation>
<relation>
<ID>_R102</ID>
<pin1name>_X62(_PX20)</pin1name>
<pin2name>_X61(_PX20)</pin2name>
</relation>
<relation>
<ID>_R103</ID>
<pin1name>_X61(_PX20)</pin1name>
<pin2name>_X60(_PX20)</pin2name>
</relation>
<relation>
<ID>_R104</ID>
<pin1name>_X60(_PX20)</pin1name>
<pin2name>_XX45(_PX20)</pin2name>
</relation>
<relation>
<ID>_R117</ID>
<pin1name>_X64(_PX2)</pin1name>
<pin2name>_X111(_PX2)</pin2name>
</relation>
<relation>
<ID>_R106</ID>
<pin1name>_X64(_PX23)</pin1name>
<pin2name>_X63(_PX23)</pin2name>
</relation>
<relation>
<ID>_R107</ID>
<pin1name>_X63(_PX23)</pin1name>
<pin2name>_X62(_PX23)</pin2name>
</relation>
<relation>
<ID>_R108</ID>
<pin1name>_X62(_PX23)</pin1name>
<pin2name>_X61(_PX23)</pin2name>
</relation>
<relation>
<ID>_R129</ID>
<pin1name>_X60(_PX23)</pin1name>
<pin2name>_XX45(_PX23)</pin2name>
</relation>
<relation>
<ID>_R130</ID>
<pin1name>_XX45(_PX23)</pin1name>
<pin2name>_XX4(_PX23)</pin2name>
</relation>
<relation>
<ID>_R118</ID>
<pin1name>_X111(_PX3)</pin1name>
<pin2name>_X64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R153</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A143(_PX3)</pin2name>
</relation>
<aobject>
<ID>_A143</ID>
<x0>21</x0>
<y0>361</y0>
<width>343</width>
<height>47</height>
<ID_maker>12</ID_maker>
<objectname>HBoxPanel</objectname>
<description>横方向のBoxLayoutに設定されたコンテナ
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>236</px>
<py>7</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>170</y0>
<width>114</width>
<height>31</height>
<text>join(Container c)</text>
<px>240</px>
<py>29</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>7</px>
<py>31</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>35</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = panel;
</codetext>
</operation>
</aobject>
<relation>
<ID>_R121</ID>
<pin1name>_X111(_PX10)</pin1name>
<pin2name>_PX12</pin2name>
</relation>
<relation>
<ID>_R122</ID>
<pin1name>_X111(_PX1)</pin1name>
<pin2name>_PX2</pin2name>
</relation>
<relation>
<ID>_R123</ID>
<pin1name>_X111(_PX19)</pin1name>
<pin2name>_PX28</pin2name>
</relation>
<relation>
<ID>_R126</ID>
<pin1name>_PX29</pin1name>
<pin2name>_X111(_PX20)</pin2name>
</relation>
<relation>
<ID>_R125</ID>
<pin1name>_PX43</pin1name>
<pin2name>_X111(_PX23)</pin2name>
</relation>
<pin>
<ID>_P131</ID>
<x0>366</x0>
<y0>439</y0>
<width>125</width>
<height>23</height>
<text>property(Container c)</text>
<px>8</px>
<py>166</py>
</pin>
<relation>
<ID>_R149</ID>
<pin1name>_X111(_P33)</pin1name>
<pin2name>_X148(_P0)</pin2name>
</relation>
<relation>
<ID>_R133</ID>
<pin1name>_XX4(_P31)</pin1name>
<pin2name>_XX45(_P32)</pin2name>
</relation>
<relation>
<ID>_R134</ID>
<pin1name>_XX45(_P32)</pin1name>
<pin2name>_X60(_P33)</pin2name>
</relation>
<relation>
<ID>_R135</ID>
<pin1name>_X60(_P33)</pin1name>
<pin2name>_X61(_P31)</pin2name>
</relation>
<relation>
<ID>_R136</ID>
<pin1name>_X61(_P31)</pin1name>
<pin2name>_X62(_P32)</pin2name>
</relation>
<relation>
<ID>_R137</ID>
<pin1name>_X62(_P32)</pin1name>
<pin2name>_X63(_P31)</pin2name>
</relation>
<relation>
<ID>_R138</ID>
<pin1name>_X63(_P31)</pin1name>
<pin2name>_X64(_P33)</pin2name>
</relation>
<relation>
<ID>_R139</ID>
<pin1name>_X64(_P33)</pin1name>
<pin2name>_X111(_P33)</pin2name>
</relation>
<relation>
<ID>_R154</ID>
<pin1name>_A143(_PX3)</pin1name>
<pin2name>_X148(_P2)</pin2name>
</relation>
<relation>
<ID>_R146</ID>
<pin1name>_X111(_PX2)</pin1name>
<pin2name>_A143(_PX1)</pin2name>
</relation>
<relation>
<ID>_R147</ID>
<pin1name>_A143(_PX2)</pin1name>
<pin2name>_PX1</pin2name>
</relation>
<xobject>
<ID>_X148</ID>
<x0>87</x0>
<y0>418</y0>
<width>207</width>
<height>49</height>
<ID_maker>15</ID_maker>
<objectname>XPanel</objectname>
<description>プロパティ表示用のコンテナ
</description>
<pin>
<ID>_P0</ID>
<x0>325</x0>
<y0>289</y0>
<width>106</width>
<height>24</height>
<text>set(Component c)</text>
<px>83</px>
<py>4</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>125</x0>
<y0>288</y0>
<width>117</width>
<height>27</height>
<text>out(Container c)</text>
<px>90</px>
<py>24</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>197</x0>
<y0>21</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>8</px>
<py>27</py>
</pin>
<aobject>
<ID>_A3</ID>
<x0>109</x0>
<y0>69</y0>
<width>153</width>
<height>186</height>
<ID_maker>12</ID_maker>
<objectname>VBoxPanel</objectname>
<description>縦方向のBoxLayoutに設定されたコンテナ
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>30</px>
<py>104</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>170</y0>
<width>114</width>
<height>31</height>
<text>join(Container c)</text>
<px>28</px>
<py>144</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>100</px>
<py>39</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
mainwindow.getContentPane().validate();
mainwindow.getContentPane().repaint();
mainwindow.pack();
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>35</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>scroll = new JScrollPane(panel,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
c = scroll;
</codetext>
</operation>
</aobject>
<codeclip>
<ID>_C4</ID>
<x0>279</x0>
<y0>22</y0>
<width>308</width>
<height>24</height>
<codetext>String LabelName=&quot;&lt;コンポーネントのプロパティ&gt;&quot;;
</codetext>
</codeclip>
<aobject>
<ID>_A5</ID>
<x0>291</x0>
<y0>54</y0>
<width>197</width>
<height>106</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>291</px>
<py>64</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>305</px>
<py>42</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>310</px>
<py>83</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>8</px>
<py>81</py>
</pin>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>141</px>
<py>54</py>
</pin>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setAlignmentX(JComponent.CENTER_ALIGNMENT);
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>252</px>
<py>7</py>
</pin>
</aobject>
<aobject>
<ID>_A6</ID>
<x0>292</x0>
<y0>167</y0>
<width>198</width>
<height>89</height>
<ID_maker>12</ID_maker>
<objectname>ChangablePanel</objectname>
<description>内容を交換可能なコンテナ
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>139</width>
<height>27</height>
<text>change(Component c)</text>
<px>24</px>
<py>64</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>170</y0>
<width>114</width>
<height>31</height>
<text>join(Container c)</text>
<px>36</px>
<py>46</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>140</px>
<py>19</py>
</pin>
<codeclip>
<ID>_CX4</ID>
<x0>70</x0>
<y0>34</y0>
<width>108</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
//panel.setLayout(null);
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
交換する</description>
<codetext>panel.removeAll();
panel.add(c);
mainwindow.getContentPane().validate();
mainwindow.getContentPane().repaint();
//mainwindow.pack();
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>35</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = panel;
</codetext>
</operation>
</aobject>
<relation>
<ID>_R7</ID>
<pin1name>_P0</pin1name>
<pin2name>_A6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R8</ID>
<pin1name>_A5(_PX6)</pin1name>
<pin2name>_A3(_PX1)</pin2name>
</relation>
<relation>
<ID>_R9</ID>
<pin1name>_A6(_PX2)</pin1name>
<pin2name>_A3(_PX1)</pin2name>
</relation>
<relation>
<ID>_R10</ID>
<pin1name>_A3(_PX2)</pin1name>
<pin2name>_P1</pin2name>
</relation>
<relation>
<ID>_R11</ID>
<pin1name>_P2</pin1name>
<pin2name>_A3(_PX3)</pin2name>
</relation>
<relation>
<ID>_R12</ID>
<pin1name>_A3(_PX3)</pin1name>
<pin2name>_A5(_PX11)</pin2name>
</relation>
<relation>
<ID>_R13</ID>
<pin1name>_A5(_PX11)</pin1name>
<pin2name>_A6(_PX3)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R150</ID>
<pin1name>_X148(_P1)</pin1name>
<pin2name>_P131</pin2name>
</relation>
<relation>
<ID>_R155</ID>
<pin1name>_X148(_P2)</pin1name>
<pin2name>_X111(_PX3)</pin2name>
</relation>
<pin>
<ID>_P156</ID>
<x0>119</x0>
<y0>323</y0>
<width>86</width>
<height>27</height>
<text>Load(String s)</text>
<px>166</px>
<py>54</py>
</pin>
<relation>
<ID>_R157</ID>
<pin1name>_XX45(_P49)</pin1name>
<pin2name>_XX4(_P49)</pin2name>
</relation>
<relation>
<ID>_R158</ID>
<pin1name>_X60(_P48)</pin1name>
<pin2name>_XX45(_P49)</pin2name>
</relation>
<relation>
<ID>_R159</ID>
<pin1name>_X61(_P49)</pin1name>
<pin2name>_X60(_P48)</pin2name>
</relation>
<relation>
<ID>_R160</ID>
<pin1name>_X62(_P51)</pin1name>
<pin2name>_X61(_P49)</pin2name>
</relation>
<relation>
<ID>_R161</ID>
<pin1name>_X63(_P48)</pin1name>
<pin2name>_X62(_P51)</pin2name>
</relation>
<relation>
<ID>_R162</ID>
<pin1name>_X64(_P50)</pin1name>
<pin2name>_X63(_P48)</pin2name>
</relation>
<relation>
<ID>_R163</ID>
<pin1name>_X111(_P52)</pin1name>
<pin2name>_X64(_P50)</pin2name>
</relation>
<relation>
<ID>_R164</ID>
<pin1name>_P156</pin1name>
<pin2name>_X111(_P52)</pin2name>
</relation>
<codeclip>
<ID>_C166</ID>
<x0>77</x0>
<y0>504</y0>
<width>145</width>
<height>21</height>
<codetext>JScrollPane scroll;
</codetext>
</codeclip>
</xobject>
<codeclip>
<ID>_C117</ID>
<x0>0</x0>
<y0>44</y0>
<width>179</width>
<height>20</height>
<codetext>// 拡張GUIコンポーネント
class XJLabel extends JLabel{    //イメージファイル名を持つJLabel
 String ImageFile;
 boolean is_opaque=true;
 boolean print_created_pin=true;
 boolean print_paint_pin=true;
 String super_class[] = {&quot;JLabel&quot;,&quot;JLabel&quot;,&quot;ELabel&quot;,&quot;TextView&quot;};
}

class XJButton extends JButton{//イメージファイル名を持つJButton
 String ImageFile;
 boolean is_opaque=true;
 boolean print_created_pin=true;
 boolean print_clicked_pin=true;
 String super_class[] = {&quot;JButton&quot;,&quot;JButton&quot;,&quot;EButton&quot;,&quot;Button&quot;};
}

class XJCheckBox extends JCheckBox{
 boolean is_opaque=true;
 boolean print_created_pin=true;
 boolean print_check_pin=true;
 String super_class[] = {&quot;JCheckBox&quot;,&quot;JCheckBox&quot;,&quot;ECheckBox&quot;,&quot;CheckBox&quot;};
}

class XJTextField extends JTextField{
 boolean is_opaque=true;
 boolean print_created_pin=true;
 boolean print_input_pin=true;
 String super_class[] = {&quot;JTextField&quot;,&quot;JTextField&quot;,&quot;ETextField&quot;,&quot;EditText&quot;};
}

class XJTextArea extends JTextArea{
 boolean is_opaque=true;
 boolean is_scrollable=true;
 boolean print_created_pin=true;
 String super_class[] = {&quot;JTextArea&quot;,&quot;JTextArea&quot;,&quot;ETextArea&quot;,&quot;EditText&quot;};
}

class XJHSlider extends JSlider{
 boolean is_opaque=true;
 boolean print_created_pin=true;
 boolean print_changed_pin=true;
 String super_class[] = {&quot;JSlider&quot;,&quot;JSlider&quot;,&quot;EHScrollBar&quot;,&quot;SeekBar&quot;};
}

class XJVSlider extends JSlider{
 boolean is_opaque=true;
 boolean print_created_pin=true;
 boolean print_changed_pin=true;
 String super_class[] = {&quot;JSlider&quot;,&quot;JSlider&quot;,&quot;EVScrollBar&quot;,&quot;VSeekBar&quot;};
}

class XJList extends JList{
 boolean is_opaque=true;
 boolean is_scrollable=true;
 boolean print_created_pin=true;
 boolean print_selected_pin=true;
 String super_class[] = {&quot;JList&quot;,&quot;JList&quot;,&quot;EList&quot;,&quot;ListView&quot;};
}
</codetext>
</codeclip>
<xobject>
<ID>_X118</ID>
<x0>387</x0>
<y0>202</y0>
<width>167</width>
<height>184</height>
<ID_maker>156</ID_maker>
<objectname>EditWindow</objectname>
<description></description>
<aobject>
<ID>_AX9</ID>
<x0>393</x0>
<y0>93</y0>
<width>178</width>
<height>149</height>
<ID_maker>47</ID_maker>
<objectname>GraphicPanel</objectname>
<description>グラフィックパネル
</description>
<action>
<ID>_AX44</ID>
<comp1name>_PX43</comp1name>
<comp2name>_OX42</comp2name>
</action>
<action>
<ID>_AX41</ID>
<comp1name>_PX40</comp1name>
<comp2name>_OX39</comp2name>
</action>
<action>
<ID>_AX27</ID>
<comp1name>_OX24</comp1name>
<comp2name>_PX3</comp2name>
</action>
<action>
<ID>_AX26</ID>
<comp1name>_PX25</comp1name>
<comp2name>_OX24</comp2name>
</action>
<codeclip>
<ID>_CX18</ID>
<x0>36</x0>
<y0>0</y0>
<width>352</width>
<height>19</height>
<codetext>PlanePanel panel;//単純なパネル(MouseListenerを実装する)
class PlanePanel extends JPanel implements MouseListener{
PlanePanel(){
addMouseListener(this);
}
public void mousePressed(MouseEvent e){ PressAt(e.getX(),e.getY());}
public void mouseReleased(MouseEvent e){}
public void mouseClicked(MouseEvent e){}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
}
</codetext>
</codeclip>
<operation>
<ID>_OX39</ID>
<state1>_SX45</state1>
<state2>_SX45</state2>
<x0>241</x0>
<y0>197</y0>
<width>137</width>
<height>80</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>2</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>2</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>41</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>96</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントを
// 自分に加える
panel.add(c,0);
panel.getLayout().removeLayoutComponent(c);
</codetext>
</operation>
<operation>
<ID>_OX24</ID>
<state1>_SX23</state1>
<state2>_SX45</state2>
<x0>0</x0>
<y0>207</y0>
<width>146</width>
<height>69</height>
<inconnectx0>48</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>126</outconnectx0>
<outconnecty0>5</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>48</outpiny0>
<outpinwidth>107</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=panel;
</codetext>
</operation>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX23</state2>
<x0>0</x0>
<y0>80</y0>
<width>123</width>
<height>40</height>
<inconnectx0>48</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>48</outconnectx0>
<outconnecty0>23</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>69</outpiny0>
<outpinwidth>120</outpinwidth>
<outpinheight>22</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 変数を初期化する
BorderLayout layout;
panel = new PlanePanel();
layout = new BorderLayout();
panel.setLayout(layout);
layout.invalidateLayout(panel);
panel.setBackground(Color.lightGray);
panel.setPreferredSize(new Dimension(width,height));
</codetext>
</operation>
<operation>
<ID>_OX42</ID>
<state1>_SX45</state1>
<state2>_SX45</state2>
<x0>245</x0>
<y0>52</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>31</inpinx0>
<inpiny0>71</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンポーネントを
// 削除する
panel.remove(c);
panel.repaint();
</codetext>
</operation>
<pin>
<ID>_PX40</ID>
<x0>454</x0>
<y0>251</y0>
<width>113</width>
<height>30</height>
<text>add(Component c)</text>
<px>20</px>
<py>49</py>
</pin>
<pin>
<ID>_PX25</ID>
<x0>3</x0>
<y0>295</y0>
<width>46</width>
<height>28</height>
<text>Start()</text>
<px>94</px>
<py>72</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>388</x0>
<y0>0</y0>
<width>107</width>
<height>19</height>
<text>PressAt(int x,int y)</text>
<px>14</px>
<py>31</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>81</x0>
<y0>295</y0>
<width>102</width>
<height>28</height>
<text>Join(Container c)</text>
<px>17</px>
<py>112</py>
</pin>
<pin>
<ID>_PX43</ID>
<x0>431</x0>
<y0>122</y0>
<width>135</width>
<height>21</height>
<text>remove(Component c)</text>
<px>27</px>
<py>87</py>
</pin>
<state>
<ID>_SX23</ID>
<x0>26</x0>
<y0>141</y0>
<width>63</width>
<height>37</height>
<text>    状態１</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>22</x0>
<y0>23</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX45</ID>
<x0>158</x0>
<y0>138</y0>
<width>70</width>
<height>40</height>
<text>   待機状態</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<aobject>
<ID>_A67</ID>
<x0>393</x0>
<y0>249</y0>
<width>191</width>
<height>68</height>
<ID_maker>28</ID_maker>
<objectname>Window</objectname>
<description>JAVAのJFrameウィンドウ</description>
<action>
<ID>_A27</ID>
<comp1name>_OX5</comp1name>
<comp2name>_P26</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX5</comp2name>
</action>
<codeclip>
<ID>_CX9</ID>
<x0>1</x0>
<y0>0</y0>
<width>275</width>
<height>23</height>
<codetext>Window0 window;//ウィンドウのインスタンス
Container container;//ウィンドウの表示領域
class Window0 extends JFrame implements WindowListener{
Window0(){
setTitle(&quot;NoTitle&quot;);
addWindowListener(this);
}
public void windowActivated(WindowEvent e){ Activated(); }
public void windowClosed(WindowEvent e){ Closed(); }
public void windowClosing(WindowEvent e){ Closing(); }
public void windowDeactivated(WindowEvent e){ Deactivated(); }
public void windowDeiconified(WindowEvent e){ Deiconfied(); }
public void windowIconified(WindowEvent e){ Iconfied(); }
public void windowOpened(WindowEvent e){ Opened(); }
}
</codetext>
</codeclip>
<operation>
<ID>_OX4</ID>
<state1>_SINIT</state1>
<state2>_SX3</state2>
<x0>51</x0>
<y0>268</y0>
<width>101</width>
<height>58</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>87</outconnectx0>
<outconnecty0>1</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ウィンドウを
生成する</description>
<codetext>window = new Window0();
window.setVisible(true);
editwindow=window;
container=window.getContentPane();
</codetext>
</operation>
<operation>
<ID>_OX5</ID>
<state1>_SX3</state1>
<state2>_SX3</state2>
<x0>228</x0>
<y0>267</y0>
<width>160</width>
<height>96</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>18</inconnecty0>
<outconnectx0>1</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in(Container c)</inpintext>
<inpinx0>62</inpinx0>
<inpiny0>51</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out(JFrame f)</outpintext>
<outpinx0>79</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>82</outpinwidth>
<outpinheight>24</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ウィンドウの
コンテントペインを設定</description>
<codetext>window.setContentPane(c);
window.pack();
f=window;
</codetext>
</operation>
<pin>
<ID>_P26</ID>
<x0>433</x0>
<y0>360</y0>
<width>91</width>
<height>26</height>
<text>join(JFrame f)</text>
<px>85</px>
<py>23</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>406</x0>
<y0>21</y0>
<width>57</width>
<height>23</height>
<text>Opened()</text>
<px>379</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>347</x0>
<y0>21</y0>
<width>59</width>
<height>23</height>
<text>Iconfied()</text>
<px>363</px>
<py>58</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>276</x0>
<y0>21</y0>
<width>71</width>
<height>23</height>
<text>Deiconfied()</text>
<px>365</px>
<py>98</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>457</x0>
<y0>0</y0>
<width>80</width>
<height>21</height>
<text>Deactivated()</text>
<px>364</px>
<py>47</py>
</pin>
<pin>
<ID>_PX12</ID>
<x0>397</x0>
<y0>0</y0>
<width>60</width>
<height>21</height>
<text>Closing()</text>
<px>126</px>
<py>47</py>
</pin>
<pin>
<ID>_PX11</ID>
<x0>341</x0>
<y0>0</y0>
<width>56</width>
<height>21</height>
<text>Closed()</text>
<px>359</px>
<py>20</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>276</x0>
<y0>0</y0>
<width>65</width>
<height>21</height>
<text>Activated()</text>
<px>80</px>
<py>102</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>418</x0>
<y0>297</y0>
<width>96</width>
<height>29</height>
<text>set(Container c)</text>
<px>0</px>
<py>40</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>6</x0>
<y0>194</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX3</ID>
<x0>135</x0>
<y0>195</y0>
<width>70</width>
<height>40</height>
<text>   待機状態</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<aobject>
<ID>_A56</ID>
<x0>396</x0>
<y0>322</y0>
<width>163</width>
<height>70</height>
<ID_maker>47</ID_maker>
<objectname>Creater</objectname>
<description>ObjectEditor用のファイルをつくる</description>
<action>
<ID>_A2</ID>
<comp1name>_P1</comp1name>
<comp2name>_O0</comp2name>
</action>
<action>
<ID>_A13</ID>
<comp1name>_P5</comp1name>
<comp2name>_O12</comp2name>
</action>
<codeclip>
<ID>_C3</ID>
<x0>241</x0>
<y0>0</y0>
<width>138</width>
<height>20</height>
<codetext>JFrame ウィンドウ;

</codetext>
</codeclip>
<codeclip>
<ID>_C17</ID>
<x0>241</x0>
<y0>19</y0>
<width>458</width>
<height>22</height>
<codetext>public String getRegulerFileName( String fname ){//ファイル名の正規表現を得る
  String ret;
  if( ( fname==null ) || ( fname.equals(&quot;&quot;) ) ) return(&quot;null&quot;);
  XFile f = new XFile(fname);
  if( !f.isFile() ) return(&quot;null&quot;);
  try{
    ret = f.toURL().getFile();
  } catch( MalformedURLException e ){ ret = &quot;null&quot;; }
  return( ret );
}
  
</codetext>
</codeclip>
<operation>
<ID>_O0</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>86</x0>
<y0>12</y0>
<width>144</width>
<height>67</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>48</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>48</outconnecty0>
<inpintext>in(JFrame f)</inpintext>
<inpinx0>66</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>78</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ウィンドウを取得する
ウィンドウ = f;
</codetext>
</operation>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_S11</state2>
<x0>88</x0>
<y0>145</y0>
<width>144</width>
<height>66</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>127</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>76</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>/* 条件 s.equals(&quot;CRE&quot;)
状態１に遷移する */
 if( !( s.equals(&quot;CRE&quot;) ) ) return;
</codetext>
</operation>
<pin>
<ID>_P1</ID>
<x0>150</x0>
<y0>99</y0>
<width>83</width>
<height>25</height>
<text>get(JFrame f)</text>
<px>83</px>
<py>31</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>155</x0>
<y0>238</y0>
<width>85</width>
<height>26</height>
<text>cmd(String s)</text>
<px>54</px>
<py>50</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>163</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S11</ID>
<x0>351</x0>
<y0>184</y0>
<width>70</width>
<height>40</height>
<text>     状態１</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_S18</ID>
<x0>351</x0>
<y0>386</y0>
<width>70</width>
<height>40</height>
<text>      状態2</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_O24</ID>
<state1>_S26</state1>
<state2>_SINIT</state2>
<x0>26</x0>
<y0>287</y0>
<width>143</width>
<height>69</height>
<inconnectx0>111</inconnectx0>
<inconnecty0>51</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// メニューをセーブする
JMenuBar メニューバー = ウィンドウ.getJMenuBar();
if( メニューバー != null ){
  int i;
  for( i = 0; i &lt; メニューバー.getComponentCount(); i++ ){
    f1.Xappend( メニューを文字列に変換(  (JMenu)メニューバー.getComponent( i ) ) + &quot;END;\n&quot; );
  }
}
</codetext>
</operation>
<codeclip>
<ID>_C25</ID>
<x0>241</x0>
<y0>59</y0>
<width>310</width>
<height>22</height>
<codetext>private String メニューを文字列に変換( JMenu m ){
  String s = &quot;Menu;&quot; + m.getText() + &quot;;&quot; + m.getMnemonic() + &quot;;&quot;;
  int i;
  for( i = 0; i &lt; m.getItemCount(); i++){
    s = s + メニューを文字列に変換( (JMenu)m.getItem( i ) );
  }
  return( s + &quot;/Menu;&quot; );
}

</codetext>
</codeclip>
<state>
<ID>_S26</ID>
<x0>134</x0>
<y0>387</y0>
<width>70</width>
<height>40</height>
<text>      状態3</text>
<isinitstate>0</isinitstate>
</state>
<codeclip>
<ID>_C32</ID>
<x0>551</x0>
<y0>59</y0>
<width>69</width>
<height>22</height>
<codetext>XFile f1;
</codetext>
</codeclip>
<codeclip>
<ID>_C35</ID>
<x0>241</x0>
<y0>39</y0>
<width>252</width>
<height>21</height>
<codetext>private String メニューの名前( JMenu m ){
  int i;
  String s = m.getText();
  for( i = 0; i &lt; s.length(); i++ ){
     char c = s.charAt( i );
     if( c ==&apos;+&apos; || c ==&apos;-&apos; || c ==&apos;*&apos; || c == &apos;/&apos; || c == &apos;\\&apos; || c == &apos;&amp;&apos; || c == &apos;|&apos; || c == &apos;~&apos; || c==&apos;=&apos;
      || c ==&apos;(&apos; || c == &apos;)&apos; || c == &apos;[&apos; || c == &apos;]&apos; || c == &apos;{&apos;  || c == &apos;}&apos;
      || c == &apos;:&apos; || c == &apos;,&apos; || c == &apos;:&apos; || c == &apos;;&apos; || c == &apos;\&apos;&apos; || c == &apos;\&quot;&apos; || c == &apos;%&apos; || c == &apos;!&apos; ) break;
  }  
  if( i == 0 ) return( &quot;&quot; ); else return( s.substring( 0, i ) );
}
</codetext>
</codeclip>
<codeclip>
<ID>_C36</ID>
<x0>241</x0>
<y0>99</y0>
<width>432</width>
<height>22</height>
<codetext>private String メニュークラス生成C( String 親クラス名, JMenu メニュー ){
  String テキスト = メニュー.getText();
  int キー = メニュー.getMnemonic();
  String クラス名 = メニューの名前( メニュー );
   int i;
   String s = &quot;&quot;;
   int n = メニュー.getItemCount();
   if( n == 0 ){
      s =
      &quot; class &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot; : public EMenuItem{\npublic:\n&quot; +
      &quot;   &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;(){\n&quot; +
      &quot;    setText( \&quot;&quot; + メニュー文字列(テキスト, キー) + &quot;\&quot; );\n&quot; +
      &quot;  }\n&quot; +
      &quot;  void actionPerformed(){\n&quot; +
      &quot;    &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;_selected();\n&quot; +
      &quot;  }\n};\n&quot;;
      return( s );
   }


   else {
      s =&quot;&quot;; 
      for( i = 0; i &lt; メニュー.getItemCount(); i++ ){
        s = s + メニュークラス生成C(  親クラス名 + &quot;_&quot; + クラス名,  (JMenu)メニュー.getItem( i )  );
      }

      s = s +
      &quot; class &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot; : public EMenu{\npublic:\n&quot; +
      &quot;   &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;(){\n&quot; +
      &quot;    setText( \&quot;&quot; + メニュー文字列(テキスト, キー) + &quot;\&quot; );\n&quot;;
 
     for( i = 0; i &lt; メニュー.getItemCount(); i++ ){
        s = s + &quot;    add( new &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;_&quot; + メニューの名前(  (JMenu)メニュー.getItem( i )  ) + &quot;() );\n&quot;;
      }
      s = s + &quot; }\n};\n&quot;;
      return( s );
    }
}

</codetext>
</codeclip>
<codeclip>
<ID>_C37</ID>
<x0>241</x0>
<y0>80</y0>
<width>448</width>
<height>20</height>
<codetext>private void メニュー名を追加( String 親クラス名, JMenu メニュー, Vector v ){
  int i;
  int n = メニュー.getItemCount();
  if( n == 0 )  v.add( 親クラス名  + &quot;_&quot; + メニューの名前( メニュー ) );
  else{
    for( i = 0; i &lt; n; i++ ){
      メニュー名を追加( 親クラス名 + &quot;_&quot; + メニューの名前( メニュー ), (JMenu)メニュー.getItem( i ), v );
    }
  }

}
</codetext>
</codeclip>
<operation>
<ID>_O40</ID>
<state1>_S11</state1>
<state2>_S18</state2>
<x0>478</x0>
<y0>150</y0>
<width>195</width>
<height>53</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>20</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>74</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>71</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>/* 条件: AppTyp==cpp
CPP用ファイルを生成する
 */
 if( AppTyp!=2 ) return;
String xml;
int i = 0;;
int j = 0;

double scale = Double.parseDouble(xxscale.getText());
Container cnt =ウィンドウ.getContentPane();
int wid0 = (int)(ウィンドウ.getWidth() * scale);
int hei0 = (int)(ウィンドウ.getHeight() * scale);

StringBuffer guideclare = new StringBuffer(&quot;&quot;);
StringBuffer guiconstruct   = new StringBuffer(&quot; XGUI(){\n setTitle(\&quot;&quot; + editwindow.getTitle() + &quot;\&quot;);\n&quot;);
guiconstruct.append(&quot; setBounds(0, 0, &quot; + wid0 + &quot;, &quot; + hei0 + &quot;);\n&quot; );

xml=           &quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;Shift_JIS\&quot; ?&gt;\n&lt;!-- なんちゃってXML version 0.1( ObjectEditor専用 ) --&gt;\n&quot;;
xml=xml+&quot;&lt;aobject&gt;\n&lt;ID&gt;GUI&lt;/ID&gt;&lt;x0&gt;100&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;280&lt;/width&gt;&lt;objectname&gt;GUI&lt;/objectname&gt;&lt;description&gt;GUIオブジェクト\n&lt;/description&gt;\n&quot;;
xml=xml+&quot;&lt;state&gt;&lt;ID&gt;_SINIT&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;70&lt;/width&gt;&lt;height&gt;40&lt;/height&gt;&lt;text&gt;  InitState&lt;/text&gt;&lt;isinitstate&gt;1&lt;/isinitstate&gt;&lt;/state&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_Pstart&lt;/ID&gt;&lt;x0&gt;400&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;80&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;Start()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;36&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_PGUIout&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;84&lt;/y0&gt;&lt;width&gt;180&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;GUI_created(EWindow* e)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;54&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_PGUIclosed&lt;/ID&gt;&lt;x0&gt;310&lt;/x0&gt;&lt;y0&gt;0&lt;/y0&gt;&lt;width&gt;180&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;GUI_closed()&lt;/text&gt;&lt;px&gt;100&lt;/px&gt;&lt;py&gt;6&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_PGUIpaint&lt;/ID&gt;&lt;x0&gt;490&lt;/x0&gt;&lt;y0&gt;0&lt;/y0&gt;&lt;width&gt;180&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;GUI_paint(HWND hwnd)&lt;/text&gt;&lt;px&gt;100&lt;/px&gt;&lt;py&gt;26&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;action&gt;&lt;ID&gt;_Astart&lt;/ID&gt;&lt;comp1name&gt;_Pstart&lt;/comp1name&gt;&lt;comp2name&gt;_Ocreate&lt;/comp2name&gt;&lt;/action&gt;\n&quot;;
xml=xml+&quot;&lt;operation&gt;&lt;ID&gt;_Ocreate&lt;/ID&gt;&lt;state1&gt;_SINIT&lt;/state1&gt;&lt;state2&gt;_SINIT&lt;/state2&gt;&lt;x0&gt;220&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;130&lt;/width&gt;&lt;height&gt;64&lt;/height&gt;&quot;;
xml=xml+&quot;&lt;inconnectx0&gt;0&lt;/inconnectx0&gt;&lt;inconnecty0&gt;30&lt;/inconnecty0&gt;&lt;outconnectx0&gt;0&lt;/outconnectx0&gt;&lt;outconnecty0&gt;30&lt;/outconnecty0&gt;&quot;;
xml=xml+&quot;&lt;inpintext&gt;in()&lt;/inpintext&gt;&lt;inpinx0&gt;90&lt;/inpinx0&gt;&lt;inpiny0&gt;43&lt;/inpiny0&gt;&lt;inpinwidth&gt;40&lt;/inpinwidth&gt;&lt;inpinheight&gt;20&lt;/inpinheight&gt;&quot;;
xml=xml+&quot;&lt;outpintext&gt;out()&lt;/outpintext&gt;&lt;outpinx0&gt;90&lt;/outpinx0&gt;&lt;outpiny0&gt;40&lt;/outpiny0&gt;&lt;outpinwidth&gt;40&lt;/outpinwidth&gt;&lt;outpinheight&gt;20&lt;/outpinheight&gt;&quot;;
xml=xml+&quot;&lt;inpinlinkcount&gt;1&lt;/inpinlinkcount&gt;&lt;description&gt;GUIを作成する\n&lt;/description&gt;&lt;codetext&gt;new XGUI();\n\n&lt;/codetext&gt;&lt;/operation&gt;\n&quot;;

JMenuBar menubar = ウィンドウ.getJMenuBar();
if( menubar != null &amp;&amp; menubar.getComponentCount() != 0 ){
    Vector menu_names = new Vector();
    guideclare.append(   &quot;EMenuBar* menubar;\n&quot; );
    guiconstruct.append(  &quot;menubar = new EMenuBar();\nsetEMenuBar( menubar );\n&quot; );

    for( i=0; i&lt; menubar.getComponentCount(); i++ ){
       メニュー名を追加( &quot;&quot;, (JMenu)menubar.getComponent( i ), menu_names );
       guideclare.append(   メニュークラス生成C( &quot;&quot;, (JMenu)menubar.getComponent( i ) ) );
       guiconstruct.append(  &quot;menubar-&gt;add( new  _&quot; + メニューの名前( (JMenu)menubar.getComponent( i )  ) + &quot;() );\n&quot; );
    }

    for( i = 0; i &lt; menu_names.size(); i++ ){
      String name = menu_names.get( i ).toString();
      xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_selected()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    }

}

for( i=cnt.getComponentCount()-1;i&gt;=0;i--){
  if( cnt.getComponent(i) instanceof JLabel ){
    XJLabel lbl = (XJLabel)( cnt.getComponent(i) );    
    String name = lbl.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LBL&quot;+ i;
    Color  fcol = lbl.getForeground();
    Color  bcol = lbl.getBackground();
    Font f = lbl.getFont();
    int ax = lbl.getHorizontalAlignment();
    int ay = lbl.getVerticalAlignment();
    String txt = lbl.getText();

    String imagefile = getRegulerFileName( ( (XJLabel)(cnt.getComponent(i)) ).ImageFile );
    
    int x0 = (int)(lbl.getX()* scale);
    int y0 = (int)(lbl.getY() * scale);
    int wid = (int)(lbl.getWidth()* scale);
    int hei  = (int)(lbl.getHeight() * scale);
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + lbl.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( lbl.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    if( lbl.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_create(ELabel* l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JButton ){
    XJButton btn = (XJButton)( cnt.getComponent(i) );    
    String name = btn.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;BTN&quot;+ i;
    Color  fcol = btn.getForeground();
    Color  bcol = btn.getBackground();
    Font f = btn.getFont();
    int ax = btn.getHorizontalAlignment();
    int ay = btn.getVerticalAlignment();
    String txt = btn.getText();

    String imagefile = getRegulerFileName( ( (XJButton)(cnt.getComponent(i)) ).ImageFile );
    
    int x0 = (int)(btn.getX() * scale);
    int y0 = (int)(btn.getY() * scale);
    int wid = (int)(btn.getWidth() * scale);
    int hei  = (int)(btn.getHeight() * scale);
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + btn.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot; + name + &quot;(){\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( btn.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; void actionPerformed(){&quot; );
    if( btn.print_clicked_pin ) guideclare.append( &quot; &quot;+ name +&quot;_clicked();\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( btn.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_create(EButton* b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( btn.print_clicked_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_clicked()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JTextField ){
    XJTextField fld= (XJTextField)( cnt.getComponent(i) );    
    String name = fld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;FLD&quot;+ i;
    Color  fcol = fld.getForeground();
    Color  bcol = fld.getBackground();
    Font f = fld.getFont();
    String txt = fld.getText();
    int x0 = (int)(fld.getX() * scale);
    int y0 = (int)(fld.getY() * scale);
    int wid = (int)(fld.getWidth() * scale);
    int hei  = (int)(fld.getHeight() * scale);
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + fld.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( fld.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( fld.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_create(ETextField* t)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.HORIZONTAL ) ){
    XJHSlider sld= (XJHSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;HSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth() * scale);
    int hei  = (int)(sld.getHeight() * scale);
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + sld.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    guideclare.append( &quot; setMinimum( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMaximum( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; void stateChanged( int i ){\n&quot; );
    if( sld.print_changed_pin ) guideclare.append( &quot; &quot; + name +&quot;_changed( i );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( sld.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_create(EHScrollBar* s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }
  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.VERTICAL ) ){
    XJVSlider sld= (XJVSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;VSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth() * scale);
    int hei  = (int)(sld.getHeight() * scale);
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + sld.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    guideclare.append( &quot; setMinimum( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMaximum( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; void stateChanged( int i ){\n&quot; );
    if( sld.print_changed_pin ) guideclare.append( &quot; &quot; + name +&quot;_changed( i );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( sld.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_create(EVScrollBar* s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JCheckBox ){
    XJCheckBox chk= (XJCheckBox)( cnt.getComponent(i) );    
    String name = chk.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;CHK&quot;+ i;
    Color  fcol = chk.getForeground();
    Color  bcol = chk.getBackground();
    int x0 = (int)(chk.getX() * scale);
    int y0 = (int)(chk.getY() * scale);
    int wid = (int)(chk.getWidth() * scale);
    int hei  = (int)(chk.getHeight() * scale);
    boolean sl = chk.isSelected();
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + chk.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    guideclare.append( &quot; setSelected( &quot; + sl +&quot; );\n&quot;);
    if( chk.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; void actionPerformed(){\n&quot; );
    if( chk.print_check_pin ) guideclare.append( &quot; &quot; + name + &quot;_check( isSelected() );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( chk.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(ECheckBox* c)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( chk.print_check_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_check(int b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JTextArea ){
    XJTextArea ara =  (XJTextArea)( cnt.getComponent(i) );
    String name = ara.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;ARA&quot;+ i;
    Color  fcol = ara.getForeground();
    Color  bcol = ara.getBackground();
    Font f = ara.getFont();
    String txt = ara.getText();
    int x0 = (int)(ara.getX() * scale);
    int y0 = (int)(ara.getY() * scale);
    int wid = (int)(ara.getWidth() * scale);
    int hei  = (int)(ara.getHeight() * scale);
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + ara.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( ara.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot; I&quot; + name + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( ara.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_create(ETextArea* t)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JList ){
    XJList lst =  (XJList)( cnt.getComponent(i) );
    String name = lst.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LST&quot;+ i;
    Color  fcol = lst.getForeground();
    Color  bcol = lst.getBackground();
    Font f = lst.getFont();
    int x0 = (int)(lst.getX() * scale);
    int y0 = (int)(lst.getY() * scale);
    int wid = (int)(lst.getWidth() * scale);
    int hei  = (int)(lst.getHeight() * scale);
    guideclare.append( &quot; class &quot;+ name +&quot; : public &quot; + lst.super_class[AppTyp] + &quot;{\npublic:\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( lst.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_create( this );\n}\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; void valueChanged( char* s ){\n&quot; );
    if( lst.print_selected_pin ) guideclare.append( &quot; &quot; + name +&quot;_selected( s );\n&quot; );
    guideclare.append( &quot; }\n&quot; );
    guideclare.append( &quot; };\n&quot; );
    guideclare.append(   name + &quot;* I&quot;+name+&quot;;\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; add( I&quot; + name + &quot;);\n&quot; );
    guiconstruct.append( &quot;I&quot; + name  + &quot;-&gt;setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( lst.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_create(EList* l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( lst.print_selected_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_selected(char* s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
}
guiconstruct.append( &quot; setVisible( 1 );\n GUI_created( this );\n}\n&quot; );
guideclare.append( &quot;class XGUI : public EWindow{\npublic:\n&quot; );
guideclare.append( guiconstruct.toString()  );
guideclare.append( &quot; void EWindowClosing(){ GUI_closed(); }\n&quot; );
guideclare.append( &quot; void paintEWindow(HWND hwnd){ GUI_paint(hwnd); }\n&quot; );
guideclare.append( &quot;};\n&quot; );

String s1 = guideclare.toString();
String s2 = &quot;&quot;;
for( int p = 0; p &lt; s1.length(); p++ ){
  char c = s1.charAt(p);
  if( c == &apos;&lt;&apos; ) s2 = s2 + &quot;&amp;lt;&quot;;
  else if( c == &apos;&gt;&apos; ) s2 = s2 + &quot;&amp;gt;&quot;;
  else if( c == &apos;&amp;&apos; ) s2 = s2 + &quot;&amp;amp;&quot;;
  else if( c == &apos;\&apos;&apos; ) s2 =s2 + &quot;&amp;apos;&quot;;
  else if( c == &apos;\&quot;&apos; ) s2 = s2 + &quot;&amp;quot;&quot;;
  else s2 = s2 + c;
}

xml = xml + &quot;&lt;codeclip&gt;&lt;ID&gt;_CXSTART&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;0&lt;/y0&gt;&lt;width&gt;300&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;codetext&gt;&quot; + s2 + &quot;&lt;/codetext&gt;&lt;/codeclip&gt;\n&quot;
          + &quot;&lt;ID_maker&gt;&quot; + (j+20) + &quot;&lt;/ID_maker&gt;&lt;height&gt;&quot; + (18*j+76) + &quot;&lt;/height&gt;&lt;/aobject&gt;\n&quot;;

f1 = new XFile(&quot;GUI.xml&quot;);
f1.Xdelete();
f1.Xappend( xml );


</codetext>
</operation>
<operation>
<ID>_O41</ID>
<state1>_S11</state1>
<state2>_S18</state2>
<x0>481</x0>
<y0>262</y0>
<width>197</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>16</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>74</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>71</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>/* 条件: AppTyp==java
Java用ファイルを生成する
 */
 if( AppTyp!=0 ) return;
String xml;
int i = 0;;
int j = 0;

double scale = Double.parseDouble(xxscale.getText());
Container cnt =ウィンドウ.getContentPane();
int wid0 = (int)(cnt.getWidth() * scale);
int hei0 = (int)(cnt.getHeight() * scale);

StringBuffer guideclare = new StringBuffer(&quot; class XGUI extends JFrame implements WindowListener{\n JPanel cnt;\n&quot;);
StringBuffer guiconstruct   = new StringBuffer(&quot; XGUI(){\n setTitle(\&quot;&quot; + editwindow.getTitle() + &quot;\&quot;);\n cnt = new JPanel( new BorderLayout() );\n&quot;);
guiconstruct.append(&quot; cnt.setPreferredSize(  new  Dimension( &quot; + wid0 + &quot;, &quot; + hei0 + &quot; ) );\n&quot; );
Color col = ((Component)cnt).getBackground();
guiconstruct.append(&quot; ((Component)cnt).setBackground( new Color( &quot; + col.getRed() + &quot;, &quot; + col.getGreen() + &quot;, &quot; + col.getBlue() +  &quot; ) );\n&quot;  );

xml=           &quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;Shift_JIS\&quot; ?&gt;\n&lt;!-- なんちゃってXML version 0.1( ObjectEditor専用 ) --&gt;\n&quot;;
xml=xml+&quot;&lt;aobject&gt;\n&lt;ID&gt;GUI&lt;/ID&gt;&lt;x0&gt;100&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;280&lt;/width&gt;&lt;objectname&gt;GUI&lt;/objectname&gt;&lt;description&gt;GUIオブジェクト\n&lt;/description&gt;\n&quot;;
xml=xml+&quot;&lt;state&gt;&lt;ID&gt;_SINIT&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;70&lt;/width&gt;&lt;height&gt;40&lt;/height&gt;&lt;text&gt;  InitState&lt;/text&gt;&lt;isinitstate&gt;1&lt;/isinitstate&gt;&lt;/state&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_Pstart&lt;/ID&gt;&lt;x0&gt;400&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;80&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;Start()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;36&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_PGUIout&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;84&lt;/y0&gt;&lt;width&gt;180&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;GUI_created(JFrame f)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;54&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_PGUIclosed&lt;/ID&gt;&lt;x0&gt;310&lt;/x0&gt;&lt;y0&gt;0&lt;/y0&gt;&lt;width&gt;180&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;GUI_closed()&lt;/text&gt;&lt;px&gt;100&lt;/px&gt;&lt;py&gt;6&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;action&gt;&lt;ID&gt;_Astart&lt;/ID&gt;&lt;comp1name&gt;_Pstart&lt;/comp1name&gt;&lt;comp2name&gt;_Ocreate&lt;/comp2name&gt;&lt;/action&gt;\n&quot;;
xml=xml+&quot;&lt;operation&gt;&lt;ID&gt;_Ocreate&lt;/ID&gt;&lt;state1&gt;_SINIT&lt;/state1&gt;&lt;state2&gt;_SINIT&lt;/state2&gt;&lt;x0&gt;220&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;130&lt;/width&gt;&lt;height&gt;64&lt;/height&gt;&quot;;
xml=xml+&quot;&lt;inconnectx0&gt;0&lt;/inconnectx0&gt;&lt;inconnecty0&gt;30&lt;/inconnecty0&gt;&lt;outconnectx0&gt;0&lt;/outconnectx0&gt;&lt;outconnecty0&gt;30&lt;/outconnecty0&gt;&quot;;
xml=xml+&quot;&lt;inpintext&gt;in()&lt;/inpintext&gt;&lt;inpinx0&gt;90&lt;/inpinx0&gt;&lt;inpiny0&gt;43&lt;/inpiny0&gt;&lt;inpinwidth&gt;40&lt;/inpinwidth&gt;&lt;inpinheight&gt;20&lt;/inpinheight&gt;&quot;;
xml=xml+&quot;&lt;outpintext&gt;out()&lt;/outpintext&gt;&lt;outpinx0&gt;90&lt;/outpinx0&gt;&lt;outpiny0&gt;40&lt;/outpiny0&gt;&lt;outpinwidth&gt;40&lt;/outpinwidth&gt;&lt;outpinheight&gt;20&lt;/outpinheight&gt;&quot;;
xml=xml+&quot;&lt;inpinlinkcount&gt;1&lt;/inpinlinkcount&gt;&lt;description&gt;GUIを作成する\n&lt;/description&gt;&lt;codetext&gt;XGUI x = new XGUI();\n\n&lt;/codetext&gt;&lt;/operation&gt;\n&quot;;

JMenuBar menubar = ウィンドウ.getJMenuBar();
if( menubar != null &amp;&amp; menubar.getComponentCount() != 0 ){
    Vector menu_names = new Vector();
    guideclare.append(   &quot;JMenuBar menubar;\n&quot; );
    guiconstruct.append(  &quot;menubar = new JMenuBar();\nsetJMenuBar( menubar );\n&quot; );

    for( i=0; i&lt; menubar.getComponentCount(); i++ ){
       メニュー名を追加( &quot;&quot;, (JMenu)menubar.getComponent( i ), menu_names );
       guideclare.append(   メニュークラス生成J( &quot;&quot;, (JMenu)menubar.getComponent( i ) ) );
       guiconstruct.append(  &quot;menubar.add( new  _&quot; + メニューの名前( (JMenu)menubar.getComponent( i )  ) + &quot;() );\n&quot; );
    }

    for( i = 0; i &lt; menu_names.size(); i++ ){
      String name = menu_names.get( i ).toString();
      xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_selected()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    }

}


for( i=cnt.getComponentCount()-1;i&gt;=0;i--){

  if( cnt.getComponent(i) instanceof JLabel ){
    XJLabel lbl = (XJLabel)( cnt.getComponent(i) );    
    String name = lbl.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LBL&quot;+ i;
    Color  fcol = lbl.getForeground();
    Color  bcol = lbl.getBackground();
    Font f = lbl.getFont();
    int ax = lbl.getHorizontalAlignment();
    int ay = lbl.getVerticalAlignment();
    String txt = lbl.getText();

    String imagefile = getRegulerFileName( ( (XJLabel)(cnt.getComponent(i)) ).ImageFile );
    
    int x0 = (int)(lbl.getX() * scale);
    int y0 = (int)(lbl.getY() * scale);
    int wid = (int)(lbl.getWidth() * scale);
    int hei  = (int)(lbl.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot; + name + &quot; extends &quot;+ lbl.super_class[AppTyp] +&quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( lbl.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setHorizontalAlignment( &quot; + ax + &quot; );\n&quot; );
    guideclare.append( &quot; setVerticalAlignment( &quot; + ay + &quot; );\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( !imagefile.equals(&quot;null&quot;) ) guideclare.append( &quot; setIcon( new ImageIcon( \&quot;&quot; + imagefile + &quot;\&quot; ));\n&quot; );
    if( lbl.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( lbl.print_paint_pin) guideclare.append( &quot; public void paintComponent( Graphics g ){ super.paintComponent(g); &quot; + name +&quot;_paint(g); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    if( lbl.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JLabel l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( lbl.print_paint_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PP&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_paint(Graphics g)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JButton ){
    XJButton btn = (XJButton)( cnt.getComponent(i) );    
    String name = btn.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;BTN&quot;+ i;
    Color  fcol = btn.getForeground();
    Color  bcol = btn.getBackground();
    Font f = btn.getFont();
    int ax = btn.getHorizontalAlignment();
    int ay = btn.getVerticalAlignment();
    String txt = btn.getText();

    String imagefile = getRegulerFileName( ( (XJButton)(cnt.getComponent(i)) ).ImageFile );
    
    int x0 = (int)(btn.getX() * scale);
    int y0 = (int)(btn.getY() * scale);
    int wid = (int)(btn.getWidth() * scale);
    int hei  = (int)(btn.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( btn.print_clicked_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + btn.super_class[AppTyp] + &quot; implements ActionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + btn.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot; + name + &quot;(){\n&quot; );
    if( btn.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setHorizontalAlignment( &quot; + ax + &quot; );\n&quot; );
    guideclare.append( &quot; setVerticalAlignment( &quot; + ay + &quot; );\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( !imagefile.equals(&quot;null&quot;) ) guideclare.append( &quot; setIcon( new ImageIcon( \&quot;&quot; + imagefile + &quot;\&quot; ));\n&quot; );
    if( btn.print_clicked_pin) guideclare.append( &quot; addActionListener( this );\n&quot; );
    if( btn.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( btn.print_clicked_pin) guideclare.append( &quot; public void actionPerformed( ActionEvent e ){ &quot; + name +&quot;_clicked(); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( btn.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JButton b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( btn.print_clicked_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_clicked()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JTextField ){
    XJTextField fld= (XJTextField)( cnt.getComponent(i) );    
    String name = fld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;FLD&quot;+ i;
    Color  fcol = fld.getForeground();
    Color  bcol = fld.getBackground();
    Font f = fld.getFont();
    String txt = fld.getText();
    int x0 = (int)(fld.getX() * scale);
    int y0 = (int)(fld.getY() * scale);
    int wid = (int)(fld.getWidth() * scale);
    int hei  = (int)(fld.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( fld.print_input_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + fld.super_class[AppTyp] + &quot; implements ActionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + fld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( fld.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( fld.print_input_pin) guideclare.append( &quot; addActionListener( this );\n&quot; );
    if( fld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( fld.print_input_pin) guideclare.append( &quot; public void actionPerformed( ActionEvent e ){ &quot; + name +&quot;_input( getText() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( fld.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JTextField t)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( fld.print_input_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_input(String s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.HORIZONTAL ) ){
    XJHSlider sld= (XJHSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;HSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth() * scale);
    int hei  = (int)(sld.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot;+ sld.super_class[AppTyp] + &quot; implements ChangeListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( sld.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setOrientation( SwingConstants.HORIZONTAL );\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setMinimum( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMaximum( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; addChangeListener( this );\n&quot; );
    if( sld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; public void stateChanged( ChangeEvent e ){ &quot; + name +&quot;_changed( getValue() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( sld.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JSlider s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }
  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.VERTICAL ) ){
    XJVSlider sld= (XJVSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;VSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth() * scale);
    int hei  = (int)(sld.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot; implements ChangeListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( sld.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setOrientation( SwingConstants.VERTICAL );\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setMinimum( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMaximum( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; addChangeListener( this );\n&quot; );
    if( sld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; public void stateChanged( ChangeEvent e ){ &quot; + name +&quot;_changed( getValue() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( sld.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JSlider s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JCheckBox ){
    XJCheckBox chk= (XJCheckBox)( cnt.getComponent(i) );    
    String name = chk.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;CHK&quot;+ i;
    Color  fcol = chk.getForeground();
    Color  bcol = chk.getBackground();
    int x0 = (int)(chk.getX() * scale);
    int y0 = (int)(chk.getY() * scale);
    int wid = (int)(chk.getWidth() * scale);
    int hei  = (int)(chk.getHeight() * scale);
    boolean sl = chk.isSelected();
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( chk.print_check_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + chk.super_class[AppTyp] + &quot; implements ActionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + chk.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( chk.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setSelected( &quot; + sl +&quot; );\n&quot;);
    if( chk.print_check_pin) guideclare.append( &quot; addActionListener( this );\n&quot; );
    if( chk.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( chk.print_check_pin) guideclare.append( &quot; public void actionPerformed( ActionEvent e ){ &quot; + name +&quot;_check( isSelected() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( chk.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JCheckBox c)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( chk.print_check_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_check(boolean b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JTextArea ){
    XJTextArea ara= (XJTextArea)( cnt.getComponent(i) );    
    String name = ara.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;ARA&quot;+ i;
    Color  fcol = ara.getForeground();
    Color  bcol = ara.getBackground();
    Font f = ara.getFont();
    String txt = ara.getText();
    int x0 = (int)(ara.getX() * scale);
    int y0 = (int)(ara.getY() * scale);
    int wid = (int)(ara.getWidth() * scale);
    int hei  = (int)(ara.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + ara.super_class[AppTyp] + &quot;{\n&quot; );
    if( ara.is_scrollable ) guideclare.append( &quot; JScrollPane scrl;\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( ara.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( ara.is_scrollable ) guideclare.append( &quot; scrl = new JScrollPane( this );\n&quot; );
    if( ara.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    if( ara.is_scrollable ){
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;.scrl, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;.scrl );\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;.scrl ).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }
    else{
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;);\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }

    if( ara.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JTextArea t)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JList ){
    XJList lst= (XJList)( cnt.getComponent(i) );    
    String name = lst.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LST&quot;+ i;
    Color  fcol = lst.getForeground();
    Color  bcol = lst.getBackground();
    Font f = lst.getFont();
    int x0 = (int)(lst.getX() * scale);
    int y0 = (int)(lst.getY() * scale);
    int wid = (int)(lst.getWidth() * scale);
    int hei  = (int)(lst.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( lst.print_selected_pin ) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + lst.super_class[AppTyp] + &quot; implements ListSelectionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + lst.super_class[AppTyp] + &quot;{\n&quot; );
    if( lst.is_scrollable ) guideclare.append( &quot; JScrollPane scrl;\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( lst.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    if( lst.is_scrollable ) guideclare.append( &quot; scrl = new JScrollPane( this );\n&quot; );
    if( lst.print_selected_pin ) guideclare.append( &quot; addListSelectionListener( this );\n&quot; );
    if( lst.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( lst.print_selected_pin ) guideclare.append( &quot; public void valueChanged( ListSelectionEvent e ){ &quot; + name +&quot;_selected( getSelectedValue() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    if( lst.is_scrollable ){
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;.scrl, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;.scrl );\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;.scrl ).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }
    else{
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;);\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }

    if( lst.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JList l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( lst.print_selected_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_selected(Object o)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
}



guiconstruct.append( &quot; setContentPane( cnt );\n pack();\n addWindowListener( this );\n setVisible( true );\n GUI_created( this );\n}\n&quot; );
guideclare.append( guiconstruct.toString() );
guideclare.append( &quot; public void windowActivated( WindowEvent e ){}\n&quot; );
guideclare.append( &quot; public void windowClosed( WindowEvent e ){}\n&quot; );
guideclare.append( &quot; public void windowClosing( WindowEvent e ){ GUI_closed(); }\n&quot; );
guideclare.append( &quot; public void windowDeactivated( WindowEvent e ){}\n&quot; );
guideclare.append( &quot; public void windowDeiconified( WindowEvent e ){}\n&quot; );
guideclare.append( &quot; public void windowIconified( WindowEvent e ){}\n&quot; );
guideclare.append( &quot; public void windowOpened( WindowEvent e ){}\n&quot; );
guideclare.append( &quot;}\n&quot; );

String s1 = guideclare.toString();
String s2 = &quot;&quot;;
for( int p = 0; p &lt; s1.length(); p++ ){
  char c = s1.charAt(p);
  if( c == &apos;&lt;&apos; ) s2 = s2 + &quot;&amp;lt;&quot;;
  else if( c == &apos;&gt;&apos; ) s2 = s2 + &quot;&amp;gt;&quot;;
  else if( c == &apos;&amp;&apos; ) s2 = s2 + &quot;&amp;amp;&quot;;
  else if( c == &apos;\&apos;&apos; ) s2 =s2 + &quot;&amp;apos;&quot;;
  else if( c == &apos;\&quot;&apos; ) s2 = s2 + &quot;&amp;quot;&quot;;
  else s2 = s2 + c;
}

xml = xml + &quot;&lt;codeclip&gt;&lt;ID&gt;_CXSTART&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;0&lt;/y0&gt;&lt;width&gt;300&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;codetext&gt;&quot; + s2 + &quot;&lt;/codetext&gt;&lt;/codeclip&gt;\n&quot;
          + &quot;&lt;ID_maker&gt;&quot; + (j+20) + &quot;&lt;/ID_maker&gt;&lt;height&gt;&quot; + (18*j+76) + &quot;&lt;/height&gt;&lt;/aobject&gt;\n&quot;;

f1 = new XFile(&quot;GUI.xml&quot;);
f1.Xdelete();
f1.Xappend( xml );
</codetext>
</operation>
<operation>
<ID>_O42</ID>
<state1>_S11</state1>
<state2>_S18</state2>
<x0>486</x0>
<y0>373</y0>
<width>202</width>
<height>55</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>14</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>74</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>71</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>/* 条件: AppTyp==applet
アプレット用ファイルを生成する
 */
 if( AppTyp!=1 ) return;
String xml;
int i = 0;;
int j = 0;

double scale = Double.parseDouble(xxscale.getText());

Container cnt =ウィンドウ.getContentPane();

StringBuffer guideclare = new StringBuffer(&quot; class XGUI{\n JPanel cnt;\n&quot;);
StringBuffer guiconstruct   = new StringBuffer(&quot; XGUI(){\n cnt = new JPanel( new BorderLayout() );\n&quot;);
guiconstruct.append(&quot; cnt.setPreferredSize(  new  Dimension( &quot; + cnt.getWidth() + &quot;, &quot; + cnt.getHeight() + &quot; ) );\n&quot; );
Color col = ((Component)cnt).getBackground();
guiconstruct.append(&quot; ((Component)cnt).setBackground( new Color( &quot; + col.getRed() + &quot;, &quot; + col.getGreen() + &quot;, &quot; + col.getBlue() +  &quot; ) );\n&quot;  );

xml=           &quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;Shift_JIS\&quot; ?&gt;\n&lt;!-- なんちゃってXML version 0.1( ObjectEditor専用 ) --&gt;\n&quot;;
xml=xml+&quot;&lt;aobject&gt;\n&lt;ID&gt;GUI&lt;/ID&gt;&lt;x0&gt;100&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;280&lt;/width&gt;&lt;objectname&gt;GUI&lt;/objectname&gt;&lt;description&gt;GUIオブジェクト\n&lt;/description&gt;\n&quot;;
xml=xml+&quot;&lt;state&gt;&lt;ID&gt;_SINIT&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;70&lt;/width&gt;&lt;height&gt;40&lt;/height&gt;&lt;text&gt;  InitState&lt;/text&gt;&lt;isinitstate&gt;1&lt;/isinitstate&gt;&lt;/state&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_Pstart&lt;/ID&gt;&lt;x0&gt;400&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;80&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;Start()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;36&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_PGUIout&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;84&lt;/y0&gt;&lt;width&gt;180&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;GUI_created(Applet a)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;54&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;action&gt;&lt;ID&gt;_Astart&lt;/ID&gt;&lt;comp1name&gt;_Pstart&lt;/comp1name&gt;&lt;comp2name&gt;_Ocreate&lt;/comp2name&gt;&lt;/action&gt;\n&quot;;
xml=xml+&quot;&lt;operation&gt;&lt;ID&gt;_Ocreate&lt;/ID&gt;&lt;state1&gt;_SINIT&lt;/state1&gt;&lt;state2&gt;_SINIT&lt;/state2&gt;&lt;x0&gt;220&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;130&lt;/width&gt;&lt;height&gt;64&lt;/height&gt;&quot;;
xml=xml+&quot;&lt;inconnectx0&gt;0&lt;/inconnectx0&gt;&lt;inconnecty0&gt;30&lt;/inconnecty0&gt;&lt;outconnectx0&gt;0&lt;/outconnectx0&gt;&lt;outconnecty0&gt;30&lt;/outconnecty0&gt;&quot;;
xml=xml+&quot;&lt;inpintext&gt;in()&lt;/inpintext&gt;&lt;inpinx0&gt;90&lt;/inpinx0&gt;&lt;inpiny0&gt;43&lt;/inpiny0&gt;&lt;inpinwidth&gt;40&lt;/inpinwidth&gt;&lt;inpinheight&gt;20&lt;/inpinheight&gt;&quot;;
xml=xml+&quot;&lt;outpintext&gt;out()&lt;/outpintext&gt;&lt;outpinx0&gt;90&lt;/outpinx0&gt;&lt;outpiny0&gt;40&lt;/outpiny0&gt;&lt;outpinwidth&gt;40&lt;/outpinwidth&gt;&lt;outpinheight&gt;20&lt;/outpinheight&gt;&quot;;
xml=xml+&quot;&lt;inpinlinkcount&gt;1&lt;/inpinlinkcount&gt;&lt;description&gt;GUIを作成する\n\n&lt;/description&gt;&lt;codetext&gt;XGUI x = new XGUI();\n\n&lt;/codetext&gt;&lt;/operation&gt;\n&quot;;





for( i=cnt.getComponentCount()-1;i&gt;=0;i--){

  if( cnt.getComponent(i) instanceof JLabel ){
    XJLabel lbl = (XJLabel)( cnt.getComponent(i) );    
    String name = lbl.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LBL&quot;+ i;
    Color  fcol = lbl.getForeground();
    Color  bcol = lbl.getBackground();
    Font f = lbl.getFont();
    int ax = lbl.getHorizontalAlignment();
    int ay = lbl.getVerticalAlignment();
    String txt = lbl.getText();

    String imagefile = getRegulerFileName( ( (XJLabel)(cnt.getComponent(i)) ).ImageFile );
    
    int x0 = (int)(lbl.getX() * scale);
    int y0 = (int)(lbl.getY() * scale);
    int wid = (int)(lbl.getWidth() * scale);
    int hei  = (int)(lbl.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot; + name + &quot; extends &quot; + lbl.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( lbl.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setHorizontalAlignment( &quot; + ax + &quot; );\n&quot; );
    guideclare.append( &quot; setVerticalAlignment( &quot; + ay + &quot; );\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( !imagefile.equals(&quot;null&quot;) ) guideclare.append( &quot; setIcon( new ImageIcon( \&quot;&quot; + imagefile + &quot;\&quot; ));\n&quot; );
    if( lbl.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( lbl.print_paint_pin) guideclare.append( &quot; public void paintComponent( Graphics g ){ super.paintComponent(g); &quot; + name +&quot;_paint(g); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    if( lbl.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JLabel l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( lbl.print_paint_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PP&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_paint(Graphics g)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JButton ){
    XJButton btn = (XJButton)( cnt.getComponent(i) );    
    String name = btn.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;BTN&quot;+ i;
    Color  fcol = btn.getForeground();
    Color  bcol = btn.getBackground();
    Font f = btn.getFont();
    int ax = btn.getHorizontalAlignment();
    int ay = btn.getVerticalAlignment();
    String txt = btn.getText();

    String imagefile = getRegulerFileName( ( (XJButton)(cnt.getComponent(i)) ).ImageFile );
    
    int x0 = (int)(btn.getX() * scale);
    int y0 = (int)(btn.getY() * scale);
    int wid = (int)(btn.getWidth() * scale);
    int hei  = (int)(btn.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( btn.print_clicked_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + btn.super_class[AppTyp] + &quot; implements ActionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + btn.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot; + name + &quot;(){\n&quot; );
    if( btn.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setHorizontalAlignment( &quot; + ax + &quot; );\n&quot; );
    guideclare.append( &quot; setVerticalAlignment( &quot; + ay + &quot; );\n&quot; );
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( !imagefile.equals(&quot;null&quot;) ) guideclare.append( &quot; setIcon( new ImageIcon( \&quot;&quot; + imagefile + &quot;\&quot; ));\n&quot; );
    if( btn.print_clicked_pin) guideclare.append( &quot; addActionListener( this );\n&quot; );
    if( btn.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( btn.print_clicked_pin) guideclare.append( &quot; public void actionPerformed( ActionEvent e ){ &quot; + name +&quot;_clicked(); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( btn.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JButton b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( btn.print_clicked_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_clicked()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JTextField ){
    XJTextField fld= (XJTextField)( cnt.getComponent(i) );    
    String name = fld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;FLD&quot;+ i;
    Color  fcol = fld.getForeground();
    Color  bcol = fld.getBackground();
    Font f = fld.getFont();
    String txt = fld.getText();
    int x0 = (int)(fld.getX() * scale);
    int y0 = (int)(fld.getY() * scale);
    int wid = (int)(fld.getWidth() * scale);
    int hei  = (int)(fld.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( fld.print_input_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + fld.super_class[AppTyp] + &quot; implements ActionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + fld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( fld.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( fld.print_input_pin) guideclare.append( &quot; addActionListener( this );\n&quot; );
    if( fld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( fld.print_input_pin) guideclare.append( &quot; public void actionPerformed( ActionEvent e ){ &quot; + name +&quot;_input( getText() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( fld.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JTextField t)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( fld.print_input_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_input(String s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.HORIZONTAL ) ){
    XJHSlider sld= (XJHSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;HSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth() * scale);
    int hei  = (int)(sld.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot;+ sld.super_class[AppTyp] + &quot; implements ChangeListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( sld.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setOrientation( SwingConstants.HORIZONTAL );\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setMinimum( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMaximum( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; addChangeListener( this );\n&quot; );
    if( sld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; public void stateChanged( ChangeEvent e ){ &quot; + name +&quot;_changed( getValue() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( sld.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JSlider s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }
  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.VERTICAL ) ){
    XJVSlider sld= (XJVSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;VSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth() * scale);
    int hei  = (int)(sld.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot; implements ChangeListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( sld.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setOrientation( SwingConstants.VERTICAL );\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setMinimum( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMaximum( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; addChangeListener( this );\n&quot; );
    if( sld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( sld.print_changed_pin) guideclare.append( &quot; public void stateChanged( ChangeEvent e ){ &quot; + name +&quot;_changed( getValue() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( sld.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JSlider s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JCheckBox ){
    XJCheckBox chk= (XJCheckBox)( cnt.getComponent(i) );    
    String name = chk.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;CHK&quot;+ i;
    Color  fcol = chk.getForeground();
    Color  bcol = chk.getBackground();
    int x0 = (int)(chk.getX() * scale);
    int y0 = (int)(chk.getY() * scale);
    int wid = (int)(chk.getWidth() * scale);
    int hei  = (int)(chk.getHeight() * scale);
    boolean sl = chk.isSelected();
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( chk.print_check_pin) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + chk.super_class[AppTyp] + &quot; implements ActionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + chk.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( chk.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setSelected( &quot; + sl +&quot; );\n&quot;);
    if( chk.print_check_pin) guideclare.append( &quot; addActionListener( this );\n&quot; );
    if( chk.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( chk.print_check_pin) guideclare.append( &quot; public void actionPerformed( ActionEvent e ){ &quot; + name +&quot;_check( isSelected() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
    guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot; );\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );

    if( chk.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JCheckBox c)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( chk.print_check_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_check(boolean b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JTextArea ){
    XJTextArea ara= (XJTextArea)( cnt.getComponent(i) );    
    String name = ara.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;ARA&quot;+ i;
    Color  fcol = ara.getForeground();
    Color  bcol = ara.getBackground();
    Font f = ara.getFont();
    String txt = ara.getText();
    int x0 = (int)(ara.getX() * scale);
    int y0 = (int)(ara.getY() * scale);
    int wid = (int)(ara.getWidth() * scale);
    int hei  = (int)(ara.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + ara.super_class[AppTyp] + &quot;{\n&quot; );
    if( ara.is_scrollable ) guideclare.append( &quot; JScrollPane scrl;\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( ara.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( ara.is_scrollable ) guideclare.append( &quot; scrl = new JScrollPane( this );\n&quot; );
    if( ara.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    if( ara.is_scrollable ){
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;.scrl, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;.scrl );\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;.scrl ).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }
    else{
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;);\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }

    if( ara.print_created_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JTextArea t)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
  if( cnt.getComponent(i) instanceof JList ){
    XJList lst= (XJList)( cnt.getComponent(i) );    
    String name = lst.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LST&quot;+ i;
    Color  fcol = lst.getForeground();
    Color  bcol = lst.getBackground();
    Font f = lst.getFont();
    int x0 = (int)(lst.getX() * scale);
    int y0 = (int)(lst.getY() * scale);
    int wid = (int)(lst.getWidth() * scale);
    int hei  = (int)(lst.getHeight() * scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    if( lst.print_selected_pin ) guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + lst.super_class[AppTyp] + &quot; implements ListSelectionListener{\n&quot; );
    else guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + lst.super_class[AppTyp] + &quot;{\n&quot; );
    if( lst.is_scrollable ) guideclare.append( &quot; JScrollPane scrl;\n&quot; );
    guideclare.append( &quot;  &quot;  + name + &quot;(){\n&quot; );
    if( lst.is_opaque ) guideclare.append( &quot; setOpaque( true );\n&quot; ); else guideclare.append( &quot; setOpaque( false );\n setBorder(null);\n&quot; );
    guideclare.append( &quot; setName(  \&quot;&quot; + name + &quot;\&quot; );\n&quot; );
    guideclare.append( &quot; setFont( new Font( \&quot;&quot; + f.getName() +&quot;\&quot;, &quot; + f.getStyle() + &quot;, &quot; + f.getSize() + &quot; ));\n&quot;);
    guideclare.append( &quot; setForeground( new Color(  &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    guideclare.append( &quot; setBackground( new Color(  &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    if( lst.is_scrollable ) guideclare.append( &quot; scrl = new JScrollPane( this );\n&quot; );
    if( lst.print_selected_pin ) guideclare.append( &quot; addListSelectionListener( this );\n&quot; );
    if( lst.print_created_pin ) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    if( lst.print_selected_pin ) guideclare.append( &quot; public void valueChanged( ListSelectionEvent e ){ &quot; + name +&quot;_selected( getSelectedValue() ); }\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    if( lst.is_scrollable ){
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;.scrl, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;.scrl );\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;.scrl ).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }
    else{
      guiconstruct.append( &quot; cnt.add( I&quot; + name + &quot;, 0 );\n&quot; );
      guiconstruct.append( &quot; cnt.getLayout().removeLayoutComponent( I&quot; + name + &quot;);\n&quot; );
      guiconstruct.append( &quot; (  I&quot; + name  + &quot;).setBounds( &quot; + x0 + &quot;, &quot; + y0 + &quot;, &quot; + wid + &quot;, &quot; + hei + &quot; );\n&quot; );
    }

    if( lst.print_created_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(JList l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( lst.print_selected_pin ) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_selected(Object o)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

  }
}







guiconstruct.append( &quot; APPLET.add( cnt );\n GUI_created( APPLET );\n}\n&quot; );
guideclare.append( guiconstruct.toString() );
guideclare.append( &quot;}\n&quot; );

String s1 = guideclare.toString();
String s2 = &quot;&quot;;
for( int p = 0; p &lt; s1.length(); p++ ){
  char c = s1.charAt(p);
  if( c == &apos;&lt;&apos; ) s2 = s2 + &quot;&amp;lt;&quot;;
  else if( c == &apos;&gt;&apos; ) s2 = s2 + &quot;&amp;gt;&quot;;
  else if( c == &apos;&amp;&apos; ) s2 = s2 + &quot;&amp;amp;&quot;;
  else if( c == &apos;\&apos;&apos; ) s2 =s2 + &quot;&amp;apos;&quot;;
  else if( c == &apos;\&quot;&apos; ) s2 = s2 + &quot;&amp;quot;&quot;;
  else s2 = s2 + c;
}

xml = xml + &quot;&lt;codeclip&gt;&lt;ID&gt;_CXSTART&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;0&lt;/y0&gt;&lt;width&gt;300&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;codetext&gt;&quot; + s2 + &quot;&lt;/codetext&gt;&lt;/codeclip&gt;\n&quot;
          + &quot;&lt;ID_maker&gt;&quot; + (j+20) +&quot;&lt;/ID_maker&gt;&lt;height&gt;&quot; + (18*j+76) + &quot;&lt;/height&gt;&lt;/aobject&gt;\n&quot;;

f1 = new XFile(&quot;GUI.xml&quot;);
f1.Xdelete();
f1.Xappend( xml );
</codetext>
</operation>
<codeclip>
<ID>_C43</ID>
<x0>241</x0>
<y0>120</y0>
<width>432</width>
<height>22</height>
<codetext>private String メニュークラス生成J( String 親クラス名, JMenu メニュー ){
  String テキスト = メニュー.getText();
  int キー = メニュー.getMnemonic();
  String クラス名 = メニューの名前( メニュー );
   int i;
   String s = &quot;&quot;;
   int n = メニュー.getItemCount();
   if( n == 0 ){
      s =
      &quot; class &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot; extends JMenuItem implements ActionListener{\n&quot; +
      &quot;   &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;(){\n&quot; +
      &quot;    setText( \&quot;&quot; + テキスト + &quot;\&quot; );\n&quot; +
      &quot;    setMnemonic( &quot; + キー + &quot; );\n&quot; +
      &quot;    addActionListener( this );\n&quot; +
      &quot;  }\n&quot; +
      &quot;  public void actionPerformed( ActionEvent e ){\n&quot; +
      &quot;    &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;_selected();\n&quot; +
      &quot;  }\n&quot; +
      &quot;}\n&quot;;

      return( s );
   }


   else {
      s = 
      &quot; class &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot; extends JMenu{\n&quot; +
      &quot;   &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;(){\n&quot; +
      &quot;    setText( \&quot;&quot; + テキスト + &quot;\&quot; );\n&quot; +
      &quot;    setMnemonic( &quot; + キー + &quot; );\n&quot; ;
 
     for( i = 0; i &lt; メニュー.getItemCount(); i++ ){
        s = s + &quot;    add( new &quot; + 親クラス名 + &quot;_&quot; + クラス名 + &quot;_&quot; + メニューの名前(  (JMenu)メニュー.getItem( i )  ) + &quot;() );\n&quot;;
      }
      s = s + &quot; }\n&quot;;

     for( i = 0; i &lt; メニュー.getItemCount(); i++ ){
        s = s + メニュークラス生成J(  親クラス名 + &quot;_&quot; + クラス名,  (JMenu)メニュー.getItem( i )  );
      }
      s = s + &quot;}\n&quot;;
      return( s );
    }
}

</codetext>
</codeclip>
<codeclip>
<ID>_C44</ID>
<x0>379</x0>
<y0>0</y0>
<width>280</width>
<height>20</height>
<codetext>public String メニュー文字列( String txt, int key ){
  int p = txt.indexOf( (char)key );
  if( p &gt;= 0 ) return( txt.substring( 0, p ) + &quot;&amp;&quot; + txt.substring( p ) );
  return( txt );
}

</codetext>
</codeclip>
<operation>
<ID>_O45</ID>
<state1>_S11</state1>
<state2>_S18</state2>
<x0>488</x0>
<y0>463</y0>
<width>214</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>74</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>71</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>/* 条件: AppTyp==android
android用ファイルを生成する
 */
 if( AppTyp!=3 ) return;
String xml;
int i = 0;;
int j = 0;

double scale = Double.parseDouble(xxscale.getText());

Container cnt =ウィンドウ.getContentPane();

StringBuffer guideclare = new StringBuffer(&quot; class XGUI{\n&quot;);
StringBuffer guiconstruct   = new StringBuffer(&quot; XGUI(){\n AbsoluteLayout layout=new AbsoluteLayout(ACTIVITY);\n&quot;);
Color col = ((Component)cnt).getBackground();
guiconstruct.append(&quot;layout.setBackgroundColor(Color.rgb( &quot; + col.getRed() + &quot;, &quot; + col.getGreen() + &quot;, &quot; + col.getBlue() +  &quot;));\n&quot;);
guiconstruct.append(&quot;ACTIVITY.setContentView(layout);\n&quot;);
guiconstruct.append(&quot;ACTIVITY.setTitle(\&quot;&quot; + editwindow.getTitle() + &quot;\&quot;);\n&quot;);


xml=           &quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;Shift_JIS\&quot; ?&gt;\n&lt;!-- なんちゃってXML version 0.1( ObjectEditor専用 ) --&gt;\n&quot;;
xml=xml+&quot;&lt;aobject&gt;\n&lt;ID&gt;GUI&lt;/ID&gt;&lt;x0&gt;100&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;280&lt;/width&gt;&lt;objectname&gt;GUI&lt;/objectname&gt;&lt;description&gt;GUIオブジェクト\n&lt;/description&gt;\n&quot;;
xml=xml+&quot;&lt;state&gt;&lt;ID&gt;_SINIT&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;70&lt;/width&gt;&lt;height&gt;40&lt;/height&gt;&lt;text&gt;  InitState&lt;/text&gt;&lt;isinitstate&gt;1&lt;/isinitstate&gt;&lt;/state&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_Pstart&lt;/ID&gt;&lt;x0&gt;400&lt;/x0&gt;&lt;y0&gt;100&lt;/y0&gt;&lt;width&gt;80&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;Start()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;36&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;pin&gt;&lt;ID&gt;_PGUIout&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;84&lt;/y0&gt;&lt;width&gt;180&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;GUI_created(AbsoluteLayout l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;54&lt;/py&gt;&lt;/pin&gt;\n&quot;;
xml=xml+&quot;&lt;action&gt;&lt;ID&gt;_Astart&lt;/ID&gt;&lt;comp1name&gt;_Pstart&lt;/comp1name&gt;&lt;comp2name&gt;_Ocreate&lt;/comp2name&gt;&lt;/action&gt;\n&quot;;
xml=xml+&quot;&lt;operation&gt;&lt;ID&gt;_Ocreate&lt;/ID&gt;&lt;state1&gt;_SINIT&lt;/state1&gt;&lt;state2&gt;_SINIT&lt;/state2&gt;&lt;x0&gt;220&lt;/x0&gt;&lt;y0&gt;40&lt;/y0&gt;&lt;width&gt;130&lt;/width&gt;&lt;height&gt;64&lt;/height&gt;&quot;;
xml=xml+&quot;&lt;inconnectx0&gt;0&lt;/inconnectx0&gt;&lt;inconnecty0&gt;30&lt;/inconnecty0&gt;&lt;outconnectx0&gt;0&lt;/outconnectx0&gt;&lt;outconnecty0&gt;30&lt;/outconnecty0&gt;&quot;;
xml=xml+&quot;&lt;inpintext&gt;in()&lt;/inpintext&gt;&lt;inpinx0&gt;90&lt;/inpinx0&gt;&lt;inpiny0&gt;43&lt;/inpiny0&gt;&lt;inpinwidth&gt;40&lt;/inpinwidth&gt;&lt;inpinheight&gt;20&lt;/inpinheight&gt;&quot;;
xml=xml+&quot;&lt;outpintext&gt;out()&lt;/outpintext&gt;&lt;outpinx0&gt;90&lt;/outpinx0&gt;&lt;outpiny0&gt;40&lt;/outpiny0&gt;&lt;outpinwidth&gt;40&lt;/outpinwidth&gt;&lt;outpinheight&gt;20&lt;/outpinheight&gt;&quot;;
xml=xml+&quot;&lt;inpinlinkcount&gt;1&lt;/inpinlinkcount&gt;&lt;description&gt;GUIを作成する\n&lt;/description&gt;&lt;codetext&gt;XGUI x = new XGUI();\n\n&lt;/codetext&gt;&lt;/operation&gt;\n&quot;;


for( i=cnt.getComponentCount()-1;i&gt;=0;i--){

  if( cnt.getComponent(i) instanceof JLabel ){
  
    XJLabel lbl = (XJLabel)( cnt.getComponent(i) );    
    if(lbl.super_class[AppTyp].equals(&quot;TextView&quot;)){ 
      String name = lbl.getName();
      if( name == null || name.equals(&quot;&quot;) ) name = &quot;LBL&quot;+ i;
      Color  fcol = lbl.getForeground();
      Color  bcol = lbl.getBackground();
      Font f = lbl.getFont();
      String txt = lbl.getText();

      int x0 = (int)(lbl.getX()*scale);
      int y0 = (int)(lbl.getY()*scale);
      int wid = (int)(lbl.getWidth()*scale);
      int hei = (int)(lbl.getHeight()*scale);
      int ax = lbl.getHorizontalAlignment();
      String sax=&quot;&quot;;
      if( ax == javax.swing.SwingConstants.LEFT )   sax = &quot;Gravity.LEFT&quot;;
      if( ax == javax.swing.SwingConstants.CENTER ) sax = &quot;Gravity.CENTER&quot;;
      if( ax == javax.swing.SwingConstants.RIGHT )  sax = &quot;Gravity.RIGHT&quot;;
      int ay = lbl.getVerticalAlignment();
      String say=&quot;&quot;;
      if( ay == javax.swing.SwingConstants.TOP )    say = &quot;Gravity.TOP&quot;;
      if( ay == javax.swing.SwingConstants.CENTER ) say = &quot;Gravity.CENTER&quot;; 
      if( ay == javax.swing.SwingConstants.BOTTOM ) say = &quot;Gravity.BOTTOM&quot;;
      guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
      guideclare.append( &quot; class &quot; + name + &quot; extends &quot; + lbl.super_class[AppTyp] + &quot;{\n&quot; );
      guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
      guideclare.append( &quot; setGravity(&quot; + sax + &quot;|&quot; + say + &quot;);\n&quot;);
      guideclare.append( &quot; setPadding(1, 1, 1, 1);\n&quot;);
      guideclare.append( &quot; setTextSize( &quot;+ f.getSize() + &quot;f );&quot;);
      guideclare.append( &quot; setTextColor( Color.rgb( &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
      if( lbl.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
      else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
      if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
      if( lbl.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
      guideclare.append( &quot;}\n&quot; );

    if( lbl.print_paint_pin) guideclare.append( &quot; protected void onDraw(Canvas g){ super.onDraw( g ); &quot; + name +&quot;_paint(g); }\n&quot; );

      guideclare.append( &quot;}\n&quot; );

      guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
      guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
      guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
      if( lbl.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(TextView t)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

      if( lbl.print_paint_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PP&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_paint(Canvas g)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;

    }

    if(lbl.super_class[AppTyp].equals(&quot;SurfaceView&quot;)){ 
      String name = lbl.getName();
      if( name == null || name.equals(&quot;&quot;) ) name = &quot;SUR&quot;+ i;

      int x0 = (int)(lbl.getX()*scale);
      int y0 = (int)(lbl.getY()*scale);
      int wid = (int)(lbl.getWidth()*scale);
      int hei = (int)(lbl.getHeight()*scale);
      guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
      guideclare.append( &quot; class &quot; + name + &quot; extends &quot; + lbl.super_class[AppTyp] + &quot;{\n&quot; );
      guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
      if( lbl.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
      guideclare.append( &quot;}\n&quot; );
      guideclare.append( &quot;}\n&quot; );

      guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
      guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
      guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
      if( lbl.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(SurfaceView s)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    }

  }

  if( cnt.getComponent(i) instanceof JButton ){
    XJButton btn = (XJButton)( cnt.getComponent(i) );    
    String name = btn.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;BTN&quot;+ i;
    Color  fcol = btn.getForeground();
    Color  bcol = btn.getBackground();
    Font f = btn.getFont();
    String txt = btn.getText();

    int x0 = (int)(btn.getX()*scale);
    int y0 = (int)(btn.getY()*scale);
    int wid = (int)(btn.getWidth()*scale);
    int hei  = (int)(btn.getHeight()*scale);
    int ax = btn.getHorizontalAlignment();
    String sax=&quot;&quot;;
    if( ax == javax.swing.SwingConstants.LEFT )   sax = &quot;Gravity.LEFT&quot;;
    if( ax == javax.swing.SwingConstants.CENTER ) sax = &quot;Gravity.CENTER&quot;;
    if( ax == javax.swing.SwingConstants.RIGHT )  sax = &quot;Gravity.RIGHT&quot;;
    int ay = btn.getVerticalAlignment();
    String say=&quot;&quot;;
    if( ay == javax.swing.SwingConstants.TOP )    say = &quot;Gravity.TOP&quot;;
    if( ay == javax.swing.SwingConstants.CENTER ) say = &quot;Gravity.CENTER&quot;;
    if( ay == javax.swing.SwingConstants.BOTTOM ) say = &quot;Gravity.BOTTOM&quot;;
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot; + name + &quot; extends &quot; + btn.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
    guideclare.append( &quot; setGravity(&quot; + sax + &quot;|&quot; + say + &quot;);\n&quot;);
    guideclare.append( &quot; setPadding(1, 1, 1, 1);\n&quot;);
    guideclare.append( &quot; setTextSize( &quot;+ f.getSize() + &quot;f );&quot;);
    guideclare.append( &quot; setTextColor( Color.rgb( &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    if( btn.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( btn.print_clicked_pin) guideclare.append( &quot; setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {&quot; + name + &quot;_clicked();}} );\n&quot;);
    if( btn.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
    guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
    if( btn.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(Button b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( btn.print_clicked_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_clicked()&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JTextField ){
    XJTextField fld= (XJTextField)( cnt.getComponent(i) );    
    String name = fld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;FLD&quot;+ i;
    Color  fcol = fld.getForeground();
    Color  bcol = fld.getBackground();
    Font f = fld.getFont();
    String txt = fld.getText();
    int x0 = (int)(fld.getX()*scale);
    int y0 = (int)(fld.getY()*scale);
    int wid = (int)(fld.getWidth()*scale);
    int hei  = (int)(fld.getHeight()*scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + fld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
    guideclare.append( &quot; setPadding(1, 1, 1, 1);\n&quot;);
    guideclare.append( &quot; setTextSize( &quot;+ f.getSize() + &quot;f );&quot;);
    guideclare.append( &quot; setTextColor( Color.rgb( &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    if( fld.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( fld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
    guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
    if( fld.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(EditText e)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JCheckBox ){
    XJCheckBox chk= (XJCheckBox)( cnt.getComponent(i) );    
    String name = chk.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;CHK&quot;+ i;
    Color  fcol = chk.getForeground();
    Color  bcol = chk.getBackground();
    int x0 = (int)(chk.getX()*scale);
    int y0 = (int)(chk.getY()*scale);
    int wid = (int)(chk.getWidth()*scale);
    int hei  = (int)(chk.getHeight()*scale);
    boolean sl = chk.isSelected();
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + chk.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
    guideclare.append( &quot; setPadding(1, 1, 1, 1);\n&quot;);
    guideclare.append( &quot; setTextColor( Color.rgb( &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    if( chk.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
    if( chk.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; I&quot; + name + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
    guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
    if( chk.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(CheckBox c)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JTextArea ){
    XJTextArea ara= (XJTextArea)( cnt.getComponent(i) );    
    String name = ara.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;ARA&quot;+ i;
    Color  fcol = ara.getForeground();
    Color  bcol = ara.getBackground();
    Font f = ara.getFont();
    String txt = ara.getText();
    int x0 = (int)(ara.getX()*scale);
    int y0 = (int)(ara.getY()*scale);
    int wid = (int)(ara.getWidth()*scale);
    int hei  = (int)(ara.getHeight()*scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + ara.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
    guideclare.append( &quot; setPadding(1, 1, 1, 1);\n&quot;);
    guideclare.append( &quot; setGravity(Gravity.LEFT | Gravity.TOP);\n&quot;);
    guideclare.append( &quot; setTextSize( &quot;+ f.getSize() + &quot;f );&quot;);
    guideclare.append( &quot; setTextColor( Color.rgb( &quot; + fcol.getRed() + &quot;, &quot; + fcol.getGreen() + &quot;, &quot; + fcol.getBlue() + &quot; ));\n&quot;);
    if( ara.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
    if( txt != null ) guideclare.append( &quot; setText( \&quot;&quot; + txt + &quot;\&quot; );\n&quot; );
    if( ara.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
    guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
    if( ara.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(EditText e)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( cnt.getComponent(i) instanceof JList ){
    XJList lst= (XJList)( cnt.getComponent(i) );    
    String name = lst.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LST&quot;+ i;
    Color  bcol = lst.getBackground();
    int x0 = (int)(lst.getX()*scale);
    int y0 = (int)(lst.getY()*scale);
    int wid = (int)(lst.getWidth()*scale);
    int hei  = (int)(lst.getHeight()*scale);
    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + lst.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
    guideclare.append( &quot; setPadding(1, 1, 1, 1);\n&quot;);
    if( lst.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
    if( lst.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
    guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
    if( lst.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(ListView l)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.HORIZONTAL ) ){
    XJHSlider sld= (XJHSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;HSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth()* scale);
    int hei  = (int)(sld.getHeight() * scale);

    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
    if( sld.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
    guideclare.append( &quot; setProgress( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMax( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_changed_pin){
      guideclare.append( &quot; setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\n&quot; );
      guideclare.append( &quot; public void onStopTrackingTouch(SeekBar seekBar) {}\n&quot; );
      guideclare.append( &quot; public void onStartTrackingTouch(SeekBar seekBar) {}\n&quot; );
      guideclare.append( &quot; public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { &quot; + name +&quot;_changed( progress ); }\n&quot; );
      guideclare.append( &quot; });\n&quot; );
    }
    if( sld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
    guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
    if( sld.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(SeekBar b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.VERTICAL ) ){
    XJHSlider sld= (XJHSlider)( cnt.getComponent(i) );    
    String name = sld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;VSL&quot;+ i;
    Color  fcol = sld.getForeground();
    Color  bcol = sld.getBackground();
    int minval = sld.getMinimum();
    int maxval = sld.getMaximum();
    int x0 = (int)(sld.getX() * scale);
    int y0 = (int)(sld.getY() * scale);
    int wid = (int)(sld.getWidth() * scale);
    int hei  = (int)(sld.getHeight() * scale);

    guideclare.append(   name + &quot; I&quot;+name+&quot;;\n&quot; );
    guideclare.append( &quot; class &quot;+ name +&quot; extends &quot; + sld.super_class[AppTyp] + &quot;{\n&quot; );
    guideclare.append( &quot; &quot;  + name + &quot;(){\n super(ACTIVITY);\n&quot; );
    if( sld.is_opaque )  guideclare.append( &quot; setBackgroundColor( Color.rgb( &quot; + bcol.getRed() + &quot;, &quot; + bcol.getGreen() + &quot;, &quot; + bcol.getBlue() + &quot; ));\n&quot;);
    else  guideclare.append( &quot; setBackgroundColor( Color.argb( 0,0,0,0 ));\n&quot;);
    guideclare.append( &quot; setProgress( &quot; + minval + &quot; );\n&quot; );
    guideclare.append( &quot; setMax( &quot; + maxval + &quot; );\n&quot; );
    if( sld.print_changed_pin){
      guideclare.append( &quot; setOnSeekBarChangeListener(new VSeekBar.OnVSeekBarChangeListener() {\n&quot; );
      guideclare.append( &quot; public void onStopTrackingTouch(VSeekBar seekBar) {}\n&quot; );
      guideclare.append( &quot; public void onStartTrackingTouch(VSeekBar seekBar) {}\n&quot; );
      guideclare.append( &quot; public void onProgressChanged(VSeekBar seekBar, int progress, boolean fromUser) { &quot; + name +&quot;_changed( progress ); }\n&quot; );
      guideclare.append( &quot; });\n&quot; );
    }
    if( sld.print_created_pin) guideclare.append( &quot; &quot; + name + &quot;_created( this );\n&quot; );
    guideclare.append( &quot;}\n&quot; );
    guideclare.append( &quot;}\n&quot; );

    guiconstruct.append( &quot; I&quot; + name + &quot; = new &quot; + name + &quot;();\n&quot; );
    guiconstruct.append( &quot; I&quot; + name  + &quot;.setLayoutParams( new AbsoluteLayout.LayoutParams( &quot; + wid + &quot;,&quot; + hei + &quot;,&quot; + x0 + &quot;,&quot; + y0 +&quot; ) );\n&quot; );
    guiconstruct.append( &quot; layout.addView( I&quot; + name + &quot; );\n&quot; );
    if( sld.print_created_pin)  xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_P&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_created(SeekBar b)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
    if( sld.print_changed_pin) xml = xml + &quot;&lt;pin&gt;&lt;ID&gt;_PA&quot; + name + &quot;&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;&quot; + (j*28+110) + &quot;&lt;/y0&gt;&lt;width&gt;200&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;text&gt;&quot; + name + &quot;_changed(int val)&lt;/text&gt;&lt;px&gt;0&lt;/px&gt;&lt;py&gt;&quot; + ((j++)*18+72) + &quot;&lt;/py&gt;&lt;/pin&gt;\n&quot;;
  }

}

guiconstruct.append( &quot; GUI_created( layout );\n}\n&quot; );
guideclare.append( guiconstruct.toString() );
guideclare.append( &quot;}\n&quot; );

String s1 = guideclare.toString();
String s2 = &quot;&quot;;
for( int p = 0; p &lt; s1.length(); p++ ){
  char c = s1.charAt(p);
  if( c == &apos;&lt;&apos; ) s2 = s2 + &quot;&amp;lt;&quot;;
  else if( c == &apos;&gt;&apos; ) s2 = s2 + &quot;&amp;gt;&quot;;
  else if( c == &apos;&amp;&apos; ) s2 = s2 + &quot;&amp;amp;&quot;;
  else if( c == &apos;\&apos;&apos; ) s2 =s2 + &quot;&amp;apos;&quot;;
  else if( c == &apos;\&quot;&apos; ) s2 = s2 + &quot;&amp;quot;&quot;;
  else s2 = s2 + c;
}

xml = xml + &quot;&lt;codeclip&gt;&lt;ID&gt;_CXSTART&lt;/ID&gt;&lt;x0&gt;0&lt;/x0&gt;&lt;y0&gt;0&lt;/y0&gt;&lt;width&gt;300&lt;/width&gt;&lt;height&gt;26&lt;/height&gt;&lt;codetext&gt;&quot; + s2 + &quot;&lt;/codetext&gt;&lt;/codeclip&gt;\n&quot;
          + &quot;&lt;ID_maker&gt;&quot; + (j+20) + &quot;&lt;/ID_maker&gt;&lt;height&gt;&quot; + (18*j+76) + &quot;&lt;/height&gt;&lt;/aobject&gt;\n&quot;;

f1 = new XFile(&quot;GUI.xml&quot;);
f1.Xdelete();
f1.Xappend( xml );
</codetext>
</operation>
<operation>
<ID>_O46</ID>
<state1>_S18</state1>
<state2>_S26</state2>
<x0>199</x0>
<y0>287</y0>
<width>155</width>
<height>63</height>
<inconnectx0>132</inconnectx0>
<inconnecty0>42</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>45</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>72</inpinx0>
<inpiny0>51</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// エディット画面を
// セーブする
int i, j;
Container cnt = ウィンドウ.getContentPane();

f1 = new XFile(  &quot;Layout.dat&quot; );
f1.Xdelete();

Color col = ((Component)cnt).getBackground();
f1.Xappend( editwindow.getTitle() + &quot;\n&quot; + cnt.getWidth() +&quot;\n&quot; +cnt.getHeight() +&quot;\n&quot; + col.getRed()+ &quot;\n&quot;+ col.getGreen()+&quot;\n&quot;+col.getBlue()+&quot;\n&quot; );

f1.Xappend(&quot;xxscale=&quot;+xxscale.getText()+&quot;\n&quot;);

for( i=cnt.getComponentCount()-1,j=0;i&gt;=0;i--){

  if( cnt.getComponent(i) instanceof JLabel ){
    XJLabel lbl = (XJLabel)( cnt.getComponent(i) );    
    String name = lbl.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LBL&quot;+ i;
    String txt = lbl.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = lbl.getX();
    int y0 = lbl.getY();
    int wid = lbl.getWidth();
    int hei  = lbl.getHeight();
    Color  fcol = lbl.getForeground();
    Color  bcol = lbl.getBackground();
    Font f = lbl.getFont();

    String imagefile = lbl.ImageFile;
    if( imagefile==null || imagefile.equals(&quot;&quot;) || (!( new XFile(imagefile) ).isFile() ) ) imagefile = &quot;null&quot;;

    int ax = lbl.getHorizontalAlignment();
    int ay = lbl.getVerticalAlignment();

    f1.Xappend( &quot;LABEL;&quot;);
    f1.Xappend(  name + &quot;;&quot; + txt + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot;+ imagefile + &quot;;&quot; + ax + &quot;;&quot; + ay + &quot;;&quot; );
    if( lbl.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lbl.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lbl.print_paint_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( lbl.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JButton ){
    XJButton btn = (XJButton)( cnt.getComponent(i) );    
    String name = btn.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;BTN&quot;+ i;
    String txt = btn.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = btn.getX();
    int y0 = btn.getY();
    int wid = btn.getWidth();
    int hei  = btn.getHeight();
    Color  fcol = btn.getForeground();
    Color  bcol = btn.getBackground();
    Font f = btn.getFont();

    String imagefile = btn.ImageFile;
    if( imagefile==null || imagefile.equals(&quot;&quot;) || (!( new XFile(imagefile) ).isFile() ) ) imagefile = &quot;null&quot;;

    int ax = btn.getHorizontalAlignment();
    int ay = btn.getVerticalAlignment();

    f1.Xappend( &quot;BUTTON;&quot;);
    f1.Xappend(  name + &quot;;&quot; + txt + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot;+ imagefile + &quot;;&quot; + ax + &quot;;&quot; + ay + &quot;;&quot; );
    if( btn.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( btn.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( btn.print_clicked_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( btn.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JTextField ){
    XJTextField fld= (XJTextField)( cnt.getComponent(i) );    
    String name = fld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;FLD&quot;+ i;
    String txt = fld.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = fld.getX();
    int y0 = fld.getY();
    int wid = fld.getWidth();
    int hei  = fld.getHeight();
    Color  fcol = fld.getForeground();
    Color  bcol = fld.getBackground();
    Font f = fld.getFont();

    f1.Xappend( &quot;TEXTFIELD;&quot;);
    f1.Xappend(  name + &quot;;&quot; + txt + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot; );
    if( fld.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( fld.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( fld.print_input_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( fld.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.HORIZONTAL ) ){
    XJHSlider sldr= (XJHSlider)( cnt.getComponent(i) );    
    String name = sldr.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;HSL&quot;+ i;
    int minval = sldr.getMinimum();
    int maxval = sldr.getMaximum();
    int x0 = sldr.getX();
    int y0 = sldr.getY();
    int wid = sldr.getWidth();
    int hei  = sldr.getHeight();
    Color  fcol = sldr.getForeground();
    Color  bcol = sldr.getBackground();

    f1.Xappend( &quot;HSLIDER;&quot;);
    f1.Xappend(  name + &quot;;&quot; + minval + &quot;;&quot; + maxval + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    if( sldr.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_changed_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( sldr.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.VERTICAL ) ){
    XJVSlider sldr= (XJVSlider)( cnt.getComponent(i) );    
    String name = sldr.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;VSL&quot;+ i;
    int minval = sldr.getMinimum();
    int maxval = sldr.getMaximum();
    int x0 = sldr.getX();
    int y0 = sldr.getY();
    int wid = sldr.getWidth();
    int hei  = sldr.getHeight();
    Color  fcol = sldr.getForeground();
    Color  bcol = sldr.getBackground();

    f1.Xappend( &quot;VSLIDER;&quot;);
    f1.Xappend(  name + &quot;;&quot; + minval + &quot;;&quot; + maxval + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    if( sldr.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_changed_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( sldr.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JCheckBox ){
    XJCheckBox chk= (XJCheckBox)( cnt.getComponent(i) );    
    String name = chk.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;CHK&quot;+ i;
    int s1 = 0;
    if ( chk.isSelected() )  s1 =1;
    int x0 = chk.getX();
    int y0 = chk.getY();
    int wid = chk.getWidth();
    int hei  = chk.getHeight();
    Color  fcol = chk.getForeground();
    Color  bcol = chk.getBackground();

    f1.Xappend( &quot;CHECKBOX;&quot;);
    f1.Xappend(  name + &quot;;&quot;  + s1 + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    if( chk.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( chk.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( chk.print_check_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( chk.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JTextArea ){
    XJTextArea ara=  (XJTextArea)( cnt.getComponent(i) );    
    String name = ara.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;ARA&quot;+ i;
    String txt = ara.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = ara.getX();
    int y0 = ara.getY();
    int wid = ara.getWidth();
    int hei  = ara.getHeight();
    Color  fcol = ara.getForeground();
    Color  bcol = ara.getBackground();
    Font f = ara.getFont();

    f1.Xappend( &quot;TEXTAREA;&quot;);
    f1.Xappend(  name + &quot;;&quot; + getFirstLine(txt) + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot; );
    if( ara.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( ara.is_scrollable ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( ara.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( ara.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JList ){
    XJList lst=  (XJList)( cnt.getComponent(i) );    
    String name = lst.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LST&quot;+ i;
    int x0 = lst.getX();
    int y0 = lst.getY();
    int wid = lst.getWidth();
    int hei  = lst.getHeight();
    Color  fcol = lst.getForeground();
    Color  bcol = lst.getBackground();
    Font f = lst.getFont();

    f1.Xappend( &quot;LIST;&quot;);
    f1.Xappend(  name + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot; );
    if( lst.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lst.is_scrollable ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lst.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lst.print_selected_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( lst.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
}
</codetext>
</operation>
</aobject>
<aobject>
<ID>_AX18</ID>
<x0>138</x0>
<y0>85</y0>
<width>247</width>
<height>78</height>
<ID_maker>35</ID_maker>
<objectname>Adder</objectname>
<description>エディタのコントロール部</description>
<action>
<ID>_AX21</ID>
<comp1name>_OX14</comp1name>
<comp2name>_PX20</comp2name>
</action>
<action>
<ID>_AX19</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX14</comp2name>
</action>
<action>
<ID>_AX13</ID>
<comp1name>_PX12</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_A30</ID>
<comp1name>_P29</comp1name>
<comp2name>_O28</comp2name>
</action>
<action>
<ID>_A32</ID>
<comp1name>_PX12</comp1name>
<comp2name>_O31</comp2name>
</action>
<action>
<ID>_A33</ID>
<comp1name>_O31</comp1name>
<comp2name>_PX20</comp2name>
</action>
<codeclip>
<ID>_CX16</ID>
<x0>30</x0>
<y0>58</y0>
<width>105</width>
<height>20</height>
<codetext>Component cc;
</codetext>
</codeclip>
<codeclip>
<ID>_CX17</ID>
<x0>429</x0>
<y0>27</y0>
<width>67</width>
<height>21</height>
<codetext>int xx,yy;
</codetext>
</codeclip>
<operation>
<ID>_O28</ID>
<state1>_SINIT</state1>
<state2>_S27</state2>
<x0>381</x0>
<y0>316</y0>
<width>131</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>34</inconnecty0>
<outconnectx0>47</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>91</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ロードモードに
遷移する</description>
<codetext></codetext>
</operation>
<operation>
<ID>_O31</ID>
<state1>_S27</state1>
<state2>_SINIT</state2>
<x0>162</x0>
<y0>121</y0>
<width>220</width>
<height>51</height>
<inconnectx0>200</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>61</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c1)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>30</inpiny0>
<inpinwidth>105</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Component c2)</outpintext>
<outpinx0>104</outpinx0>
<outpiny0>30</outpiny0>
<outpinwidth>117</outpinwidth>
<outpinheight>22</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを貼り付ける


</description>
<codetext>c2=c1;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SINIT</state1>
<state2>_SX10</state2>
<x0>25</x0>
<y0>82</y0>
<width>117</width>
<height>93</height>
<inconnectx0>96</inconnectx0>
<inconnecty0>76</inconnecty0>
<outconnectx0>98</outconnectx0>
<outconnecty0>14</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>70</inpiny0>
<inpinwidth>100</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>貼り付けモードに
遷移する</description>
<codetext>cc = c;
</codetext>
</operation>
<operation>
<ID>_OX14</ID>
<state1>_SX10</state1>
<state2>_SX18</state2>
<x0>386</x0>
<y0>53</y0>
<width>183</width>
<height>73</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>16</inconnecty0>
<outconnectx0>164</outconnectx0>
<outconnecty0>33</outconnecty0>
<inpintext>in(int x,int y)</inpintext>
<inpinx0>112</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>71</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>21</outpinx0>
<outpiny0>53</outpiny0>
<outpinwidth>107</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
貼り付ける</description>
<codetext>xx=x;
yy=y;
c=cc;
</codetext>
</operation>
<operation>
<ID>_OX22</ID>
<state1>_SX18</state1>
<state2>_SINIT</state2>
<x0>436</x0>
<y0>182</y0>
<width>177</width>
<height>60</height>
<inconnectx0>160</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>17</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>貼り付けたコンポーネントを
クリック位置に移動させる</description>
<codetext>cc.setBounds(xx,yy,140,35);
</codetext>
</operation>
<pin>
<ID>_P29</ID>
<x0>549</x0>
<y0>353</y0>
<width>58</width>
<height>31</height>
<text>isLoad()</text>
<px>39</px>
<py>44</py>
</pin>
<pin>
<ID>_PX12</ID>
<x0>6</x0>
<y0>240</y0>
<width>122</width>
<height>27</height>
<text>paste(Component c)</text>
<px>122</px>
<py>24</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>654</x0>
<y0>29</y0>
<width>100</width>
<height>24</height>
<text>clickAt(int x,int y)</text>
<px>112</px>
<py>39</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>403</x0>
<y0>150</y0>
<width>114</width>
<height>24</height>
<text>add(Component c)</text>
<px>106</px>
<py>57</py>
</pin>
<state>
<ID>_S27</ID>
<x0>372</x0>
<y0>247</y0>
<width>86</width>
<height>41</height>
<text>  ロードモード</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>225</x0>
<y0>289</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX10</ID>
<x0>243</x0>
<y0>39</y0>
<width>94</width>
<height>38</height>
<text> 貼り付けモード</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SX18</ID>
<x0>605</x0>
<y0>125</y0>
<width>99</width>
<height>36</height>
<text> 位置決めモード</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<xobject>
<ID>_X69</ID>
<x0>576</x0>
<y0>123</y0>
<width>221</width>
<height>104</height>
<ID_maker>84</ID_maker>
<objectname>WindowProperty</objectname>
<description></description>
<aobject>
<ID>_AX6</ID>
<x0>61</x0>
<y0>78</y0>
<width>155</width>
<height>126</height>
<ID_maker>12</ID_maker>
<objectname>GridPanel</objectname>
<description>GridLayoutに設定されたコンテナ
行数と列数は変数rowとcolumnで設定する
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new GridLayout(row, column));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>35</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = panel;
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>13</px>
<py>55</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>170</y0>
<width>114</width>
<height>31</height>
<text>join(Container c)</text>
<px>29</px>
<py>32</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>99</px>
<py>78</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<xobject>
<ID>_X30</ID>
<x0>70</x0>
<y0>221</y0>
<width>216</width>
<height>122</height>
<ID_maker>133</ID_maker>
<objectname>Properties</objectname>
<description></description>
<xobject>
<ID>_XX64</ID>
<x0>76</x0>
<y0>117</y0>
<width>529</width>
<height>35</height>
<ID_maker>47</ID_maker>
<objectname>BackColor</objectname>
<description></description>
<aobject>
<ID>_AX33</ID>
<x0>194</x0>
<y0>23</y0>
<width>193</width>
<height>96</height>
<ID_maker>13</ID_maker>
<objectname>Xbutton</objectname>
<description>ボタンオブジェクト</description>
<action>
<ID>_AX12</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_CX1</ID>
<x0>85</x0>
<y0>23</y0>
<width>327</width>
<height>17</height>
<codetext>//ボタンをクリックするとClickピンに信号が出力される
inbutton b;//ボタンのインスタンス
class inbutton extends JButton implements ActionListener{
Xbutton parent;
inbutton(Xbutton prnt){
parent=prnt;
addActionListener(this);
setText(ButtonName);
}

public void actionPerformed(ActionEvent e){
parent.Click();
}
}
</codetext>
</codeclip>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SX8</state2>
<x0>380</x0>
<y0>74</y0>
<width>138</width>
<height>93</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>32</inconnecty0>
<outconnectx0>119</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>0</outpinx0>
<outpiny0>72</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)b;
</codetext>
</operation>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>100</x0>
<y0>81</y0>
<width>153</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>26</inconnecty0>
<outconnectx0>134</outconnectx0>
<outconnecty0>25</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ボタンのインスタンスを
生成する
</description>
<codetext>b= new inbutton(this);
</codetext>
</operation>
<pin>
<ID>_PX11</ID>
<x0>235</x0>
<y0>148</y0>
<width>60</width>
<height>30</height>
<text>Ready()</text>
<px>12</px>
<py>34</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>199</x0>
<y0>40</y0>
<width>60</width>
<height>30</height>
<text>Click()</text>
<px>111</px>
<py>56</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>178</x0>
<y0>187</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>79</px>
<py>75</py>
</pin>
<state>
<ID>_SX8</ID>
<x0>537</x0>
<y0>91</y0>
<width>70</width>
<height>40</height>
<text> 待機状態2</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>13</x0>
<y0>95</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX4</ID>
<x0>286</x0>
<y0>94</y0>
<width>70</width>
<height>40</height>
<text>  待機状態1</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<aobject>
<ID>_AX27</ID>
<x0>403</x0>
<y0>49</y0>
<width>155</width>
<height>111</height>
<ID_maker>22</ID_maker>
<objectname>Control</objectname>
<description></description>
<action>
<ID>_AX21</ID>
<comp1name>_PX20</comp1name>
<comp2name>_OX19</comp2name>
</action>
<action>
<ID>_AX18</ID>
<comp1name>_PX15</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX14</ID>
<comp1name>_PX13</comp1name>
<comp2name>_OX12</comp2name>
</action>
<action>
<ID>_AX11</ID>
<comp1name>_PX10</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<codeclip>
<ID>_CX6</ID>
<x0>37</x0>
<y0>22</y0>
<width>165</width>
<height>20</height>
<codetext>Color color = Color.gray;
</codetext>
</codeclip>
<codeclip>
<ID>_CX5</ID>
<x0>36</x0>
<y0>0</y0>
<width>164</width>
<height>21</height>
<codetext>Component cmp,display;
</codetext>
</codeclip>
<operation>
<ID>_OX17</ID>
<state1>_SINIT</state1>
<state2>_SX16</state2>
<x0>311</x0>
<y0>0</y0>
<width>120</width>
<height>66</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>33</inconnecty0>
<outconnectx0>101</outconnectx0>
<outconnecty0>29</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>81</inpinx0>
<inpiny0>10</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色設定
モードに遷移する</description>
<codetext></codetext>
</operation>
<operation>
<ID>_OX12</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>190</y0>
<width>119</width>
<height>79</height>
<inconnectx0>99</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Color c)</inpintext>
<inpinx0>43</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>77</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>取得した色で
コンポーネントの
背景色を設定する
</description>
<codetext>color=c;
cmp.setBackground(color);
display.setBackground(color);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>189</y0>
<width>116</width>
<height>79</height>
<inconnectx0>109</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>110</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>15</inpinx0>
<inpiny0>60</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>色表示のための
コンポーネントを
取得する</description>
<codetext>display=c;
display.setBackground(color);
</codetext>
</operation>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>7</x0>
<y0>190</y0>
<width>144</width>
<height>77</height>
<inconnectx0>123</inconnectx0>
<inconnecty0>1</inconnecty0>
<outconnectx0>123</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in(JFrame f)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>61</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントの
背景色を取得する</description>
<codetext>cmp=f.getContentPane();
color = cmp.getBackground();
display.setBackground(color);
</codetext>
</operation>
<operation>
<ID>_OX19</ID>
<state1>_SX16</state1>
<state2>_SINIT</state2>
<x0>313</x0>
<y0>95</y0>
<width>113</width>
<height>56</height>
<inconnectx0>93</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>82</inpinx0>
<inpiny0>34</inpiny0>
<inpinwidth>32</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>設定を取り消す</description>
<codetext></codetext>
</operation>
<pin>
<ID>_PX15</ID>
<x0>497</x0>
<y0>5</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>88</px>
<py>30</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>359</x0>
<y0>302</y0>
<width>77</width>
<height>26</height>
<text>get(Color c)</text>
<px>4</px>
<py>88</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>168</x0>
<y0>301</y0>
<width>145</width>
<height>25</height>
<text>getDisplay(Component c)</text>
<px>4</px>
<py>49</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>3</x0>
<y0>297</y0>
<width>86</width>
<height>22</height>
<text>get(JFrame f)</text>
<px>27</px>
<py>66</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>501</x0>
<y0>223</y0>
<width>55</width>
<height>24</height>
<text>cansel()</text>
<px>98</px>
<py>88</py>
</pin>
<state>
<ID>_SX16</ID>
<x0>479</x0>
<y0>95</y0>
<width>91</width>
<height>42</height>
<text> RequestMode</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>173</x0>
<y0>101</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<aobject>
<ID>_AX6</ID>
<x0>3</x0>
<y0>146</y0>
<width>250</width>
<height>142</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>78</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>0</px>
<py>59</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>104</px>
<py>119</py>
</pin>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>206</px>
<py>29</py>
</pin>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<codeclip>
<ID>_CX38</ID>
<x0>250</x0>
<y0>0</y0>
<width>190</width>
<height>29</height>
<codetext>String ButtonName=&quot;変える&quot;;
</codetext>
</codeclip>
<codeclip>
<ID>_CX7</ID>
<x0>13</x0>
<y0>322</y0>
<width>204</width>
<height>28</height>
<codetext>String LabelName=&quot;土台の色&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX21</ID>
<x0>373</x0>
<y0>210</y0>
<width>77</width>
<height>22</height>
<text>get(Color c)</text>
<px>460</px>
<py>8</py>
</pin>
<pin>
<ID>_PX20</ID>
<x0>497</x0>
<y0>20</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>416</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>422</x0>
<y0>258</y0>
<width>80</width>
<height>26</height>
<text>get(JFrame f)</text>
<px>104</px>
<py>11</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>116</x0>
<y0>73</y0>
<width>42</width>
<height>24</height>
<text>start()</text>
<px>206</px>
<py>11</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>273</x0>
<y0>260</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>257</px>
<py>8</py>
</pin>
<pin>
<ID>_PX43</ID>
<x0>524</x0>
<y0>204</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>365</px>
<py>9</py>
</pin>
<relation>
<ID>_RX44</ID>
<pin1name>_PX43</pin1name>
<pin2name>_AX27(_PX20)</pin2name>
</relation>
<relation>
<ID>_RX42</ID>
<pin1name>_AX27(_PX15)</pin1name>
<pin2name>_PX20</pin2name>
</relation>
<relation>
<ID>_RX41</ID>
<pin1name>_AX33(_PX2)</pin1name>
<pin2name>_AX27(_PX15)</pin2name>
</relation>
<relation>
<ID>_RX39</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX37</ID>
<pin1name>_AX33(_PX6)</pin1name>
<pin2name>_AX27(_PX10)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX33(_PX11)</pin2name>
</relation>
<relation>
<ID>_RX31</ID>
<pin1name>_PX21</pin1name>
<pin2name>_AX27(_PX13)</pin2name>
</relation>
<relation>
<ID>_RX29</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX27(_PX1)</pin2name>
</relation>
<relation>
<ID>_RX25</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X120</ID>
<x0>75</x0>
<y0>76</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Title</objectname>
<description></description>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX14</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX13</comp2name>
</action>
<action>
<ID>_AX12</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX11</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>JFrame frm;
</codetext>
</codeclip>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>64</x0>
<y0>216</y0>
<width>80</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot; &quot;);
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=data;
</codetext>
</operation>
<operation>
<ID>_OX11</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>225</x0>
<y0>110</y0>
<width>132</width>
<height>78</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(JFrame f)</inpintext>
<inpinx0>61</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>72</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ウィンドウの
// タイトルを得る
frm =f;
data.setText(frm.getTitle());
</codetext>
</operation>
<operation>
<ID>_OX13</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>221</x0>
<y0>13</y0>
<width>132</width>
<height>85</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>31</inpinx0>
<inpiny0>64</inpiny0>
<inpinwidth>102</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ウィンドウの
// タイトルを
// セットする
frm.setTitle(data.getText());
</codetext>
</operation>
<pin>
<ID>_PX2</ID>
<x0>396</x0>
<y0>154</y0>
<width>84</width>
<height>22</height>
<text>get(JFrame f)</text>
<px>230</px>
<py>5</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>419</x0>
<y0>64</y0>
<width>56</width>
<height>25</height>
<text>update()</text>
<px>156</px>
<py>5</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>192</width>
<height>21</height>
<codetext>String LabelName=&quot;タイトル&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX2</ID>
<x0>407</x0>
<y0>76</y0>
<width>59</width>
<height>22</height>
<text>update()</text>
<px>364</px>
<py>11</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>483</x0>
<y0>75</y0>
<width>82</width>
<height>25</height>
<text>get(JFrame f)</text>
<px>104</px>
<py>12</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>260</px>
<py>10</py>
</pin>
<relation>
<ID>_RX17</ID>
<pin1name>_AX8(_PX16)</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX14</ID>
<pin1name>_PX3</pin1name>
<pin2name>_AX8(_PX2)</pin2name>
</relation>
<relation>
<ID>_RX13</ID>
<pin1name>_PX2</pin1name>
<pin2name>_AX8(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
</xobject>
<pin>
<ID>_PX39</ID>
<x0>542</x0>
<y0>246</y0>
<width>69</width>
<height>22</height>
<text>get(Color c)</text>
<px>139</px>
<py>103</py>
</pin>
<pin>
<ID>_PX35</ID>
<x0>487</x0>
<y0>269</y0>
<width>41</width>
<height>23</height>
<text>color()</text>
<px>18</px>
<py>99</py>
</pin>
<pin>
<ID>_PX7</ID>
<x0>289</x0>
<y0>19</y0>
<width>39</width>
<height>21</height>
<text>start()</text>
<px>91</px>
<py>29</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>179</x0>
<y0>43</y0>
<width>86</width>
<height>25</height>
<text>get(JFrame f)</text>
<px>81</px>
<py>78</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>434</x0>
<y0>207</y0>
<width>52</width>
<height>22</height>
<text>cansel()</text>
<px>76</px>
<py>101</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>352</x0>
<y0>41</y0>
<width>111</width>
<height>20</height>
<text>join(Component c)</text>
<px>5</px>
<py>46</py>
</pin>
<relation>
<ID>_R114</ID>
<pin1name>_PX39</pin1name>
<pin2name>_XX64(_PX21)</pin2name>
</relation>
<relation>
<ID>_R115</ID>
<pin1name>_XX64(_PX20)</pin1name>
<pin2name>_PX35</pin2name>
</relation>
<relation>
<ID>_R121</ID>
<pin1name>_PX7</pin1name>
<pin2name>_X120(_PX4)</pin2name>
</relation>
<relation>
<ID>_R123</ID>
<pin1name>_X120(_PX4)</pin1name>
<pin2name>_XX64(_PX4)</pin2name>
</relation>
<relation>
<ID>_R124</ID>
<pin1name>_X120(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_R125</ID>
<pin1name>_XX64(_PX5)</pin1name>
<pin2name>_X120(_PX5)</pin2name>
</relation>
<relation>
<ID>_R126</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X120(_PX3)</pin2name>
</relation>
<relation>
<ID>_R127</ID>
<pin1name>_X120(_PX3)</pin1name>
<pin2name>_XX64(_PX3)</pin2name>
</relation>
<relation>
<ID>_R128</ID>
<pin1name>_PX2</pin1name>
<pin2name>_XX64(_PX43)</pin2name>
</relation>
<xobject>
<ID>_X129</ID>
<x0>70</x0>
<y0>160</y0>
<width>529</width>
<height>33</height>
<ID_maker>22</ID_maker>
<objectname>Scale</objectname>
<description></description>
<aobject>
<ID>_AX6</ID>
<x0>7</x0>
<y0>130</y0>
<width>222</width>
<height>160</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ラベルのインスタンスを
// 生成する
lbl= new  inlabel(LabelName);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 上位のコンテナに
// 自分を加える
c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>0</px>
<py>70</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>4</px>
<py>86</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>10</px>
<py>103</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>113</px>
<py>56</py>
</pin>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>174</px>
<py>36</py>
</pin>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>88</px>
<py>5</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<aobject>
<ID>_AX8</ID>
<x0>257</x0>
<y0>136</y0>
<width>338</width>
<height>83</height>
<ID_maker>18</ID_maker>
<objectname>Field</objectname>
<description></description>
<action>
<ID>_AX10</ID>
<comp1name>_OX8</comp1name>
<comp2name>_PX5</comp2name>
</action>
<action>
<ID>_AX9</ID>
<comp1name>_PX4</comp1name>
<comp2name>_OX8</comp2name>
</action>
<codeclip>
<ID>_CX15</ID>
<x0>37</x0>
<y0>75</y0>
<width>119</width>
<height>21</height>
<codetext>JFrame frm;
</codetext>
</codeclip>
<codeclip>
<ID>_CX1</ID>
<x0>35</x0>
<y0>52</y0>
<width>129</width>
<height>18</height>
<codetext>intextfield data;
class intextfield extends JTextField implements ActionListener{
intextfield(String s){
setText(s);
addActionListener(this);
}
public void actionPerformed(ActionEvent e){ enter(); }
}
</codetext>
</codeclip>
<operation>
<ID>_OX7</ID>
<state1>_SINIT</state1>
<state2>_SX6</state2>
<x0>37</x0>
<y0>212</y0>
<width>118</width>
<height>62</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>68</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// 初期設定
data =new intextfield(&quot;1&quot;);
xxscale = data;
</codetext>
</operation>
<operation>
<ID>_OX8</ID>
<state1>_SX6</state1>
<state2>_SX6</state2>
<x0>177</x0>
<y0>205</y0>
<width>144</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>104</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>39</outpinx0>
<outpiny0>49</outpiny0>
<outpinwidth>105</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 上位コンポーネントに
// 自分を加える
c=data;
</codetext>
</operation>
<pin>
<ID>_PX4</ID>
<x0>355</x0>
<y0>217</y0>
<width>41</width>
<height>26</height>
<text>start()</text>
<px>90</px>
<py>30</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>335</x0>
<y0>282</y0>
<width>111</width>
<height>27</height>
<text>join(Component c)</text>
<px>6</px>
<py>50</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>131</x0>
<y0>29</y0>
<width>46</width>
<height>23</height>
<text>enter()</text>
<px>160</px>
<py>54</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX6</ID>
<x0>128</x0>
<y0>108</y0>
<width>70</width>
<height>40</height>
<text>    State1</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<codeclip>
<ID>_CX7</ID>
<x0>16</x0>
<y0>101</y0>
<width>192</width>
<height>21</height>
<codetext>String LabelName=&quot;倍率&quot;;
</codetext>
</codeclip>
<pin>
<ID>_PX4</ID>
<x0>278</x0>
<y0>76</y0>
<width>40</width>
<height>28</height>
<text>start()</text>
<px>210</px>
<py>12</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>261</x0>
<y0>274</y0>
<width>107</width>
<height>26</height>
<text>join(Component c)</text>
<px>260</px>
<py>10</py>
</pin>
<relation>
<ID>_R20</ID>
<pin1name>_PX4</pin1name>
<pin2name>_AX6(_PX11)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_AX6(_PX11)</pin1name>
<pin2name>_AX8(_PX4)</pin2name>
</relation>
<relation>
<ID>_RX10</ID>
<pin1name>_AX8(_PX5)</pin1name>
<pin2name>_PX5</pin2name>
</relation>
<relation>
<ID>_RX9</ID>
<pin1name>_AX6(_PX6)</pin1name>
<pin2name>_AX8(_PX5)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R131</ID>
<pin1name>_XX64(_PX4)</pin1name>
<pin2name>_X129(_PX4)</pin2name>
</relation>
<relation>
<ID>_R132</ID>
<pin1name>_X129(_PX5)</pin1name>
<pin2name>_XX64(_PX5)</pin2name>
</relation>
</xobject>
<aobject>
<ID>_A49</ID>
<x0>224</x0>
<y0>69</y0>
<width>145</width>
<height>85</height>
<ID_maker>12</ID_maker>
<objectname>VBoxPanel</objectname>
<description>縦方向のBoxLayoutに設定されたコンテナ
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
mainwindow.getContentPane().validate();
mainwindow.getContentPane().repaint();
mainwindow.pack();
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>35</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = panel;
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>17</px>
<py>41</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>170</y0>
<width>114</width>
<height>31</height>
<text>join(Container c)</text>
<px>23</px>
<py>62</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>103</px>
<py>18</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<xobject>
<ID>_X69</ID>
<x0>387</x0>
<y0>84</y0>
<width>152</width>
<height>97</height>
<ID_maker>6</ID_maker>
<objectname>Label1</objectname>
<description>新しいオブジェクト</description>
<aobject>
<ID>_A0</ID>
<x0>257</x0>
<y0>140</y0>
<width>140</width>
<height>122</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setAlignmentX(JComponent.CENTER_ALIGNMENT);
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>291</px>
<py>64</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>305</px>
<py>42</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>310</px>
<py>83</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>12</px>
<py>48</py>
</pin>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>27</px>
<py>94</py>
</pin>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>160</px>
<py>0</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<codeclip>
<ID>_C1</ID>
<x0>225</x0>
<y0>92</y0>
<width>245</width>
<height>31</height>
<codetext>String LabelName=&quot;&lt;GUIのプロパティ&gt;&quot;;
</codetext>
</codeclip>
<pin>
<ID>_P2</ID>
<x0>447</x0>
<y0>161</y0>
<width>116</width>
<height>27</height>
<text>join(Component c)</text>
<px>36</px>
<py>26</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>453</x0>
<y0>244</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>18</px>
<py>72</py>
</pin>
<relation>
<ID>_R4</ID>
<pin1name>_A0(_PX6)</pin1name>
<pin2name>_P2</pin2name>
</relation>
<relation>
<ID>_R5</ID>
<pin1name>_P3</pin1name>
<pin2name>_A0(_PX11)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X70</ID>
<x0>388</x0>
<y0>194</y0>
<width>152</width>
<height>78</height>
<ID_maker>6</ID_maker>
<objectname>Label2</objectname>
<description>新しいオブジェクト</description>
<aobject>
<ID>_A0</ID>
<x0>257</x0>
<y0>140</y0>
<width>140</width>
<height>122</height>
<ID_maker>23</ID_maker>
<objectname>XLabel</objectname>
<description>ラベルの内部オブジェクト
マウスイベントを発生する
</description>
<action>
<ID>_AX19</ID>
<comp1name>_PX11</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX6</comp2name>
</action>
<codeclip>
<ID>_CX13</ID>
<x0>129</x0>
<y0>0</y0>
<width>89</width>
<height>20</height>
<codetext>inlabel lbl;
class inlabel extends JLabel implements MouseListener, MouseMotionListener{
inlabel(String s){
setAlignmentX(JComponent.CENTER_ALIGNMENT);
setText(s);
setOpaque(true);
setBackground(Color.lightGray);
addMouseListener(this);
addMouseMotionListener(this);
}
public void mouseClicked(MouseEvent e){ Click();Clicked((Component)this);}
public void mouseEntered(MouseEvent e){}
public void mouseExited(MouseEvent e){}
public void mousePressed(MouseEvent e){ pressed( (Component)this, e.getX(), e.getY()); }
public void mouseReleased(MouseEvent e){}
public void mouseDragged(MouseEvent e){ drugged( (Component)this, e.getX(), e.getY()); }
public void mouseMoved(MouseEvent e){}
}
</codetext>
</codeclip>
<operation>
<ID>_OX5</ID>
<state1>_SINIT</state1>
<state2>_SX4</state2>
<x0>59</x0>
<y0>142</y0>
<width>159</width>
<height>63</height>
<inconnectx0>138</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>139</outconnectx0>
<outconnecty0>37</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>84</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>47</outpinx0>
<outpiny0>64</outpiny0>
<outpinwidth>104</outpinwidth>
<outpinheight>25</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ラベルのインスタンスを
生成する
</description>
<codetext>lbl= new  inlabel(LabelName);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX4</state1>
<state2>_SINIT</state2>
<x0>357</x0>
<y0>129</y0>
<width>143</width>
<height>82</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>56</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>12</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>103</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out(Component c)</outpintext>
<outpinx0>37</outpinx0>
<outpiny0>61</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>上位のコンテナに
自分を加える
</description>
<codetext>c=(Component)lbl;
</codetext>
</operation>
<pin>
<ID>_PX16</ID>
<x0>218</x0>
<y0>21</y0>
<width>189</width>
<height>23</height>
<text>drugged(Component c, int x,int y)</text>
<px>291</px>
<py>64</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>217</x0>
<y0>0</y0>
<width>190</width>
<height>21</height>
<text>pressed(Component c, int x,int y)</text>
<px>305</px>
<py>42</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>407</x0>
<y0>1</y0>
<width>143</width>
<height>21</height>
<text>Clicked(Component c)</text>
<px>310</px>
<py>83</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>396</x0>
<y0>242</y0>
<width>122</width>
<height>32</height>
<text>Join(Component c)</text>
<px>12</px>
<py>48</py>
</pin>
<pin>
<ID>_PX11</ID>
<x0>121</x0>
<y0>239</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>27</px>
<py>94</py>
</pin>
<pin>
<ID>_PX22</ID>
<x0>407</x0>
<y0>21</y0>
<width>47</width>
<height>23</height>
<text>Click()</text>
<px>160</px>
<py>0</py>
</pin>
<state>
<ID>_SX4</ID>
<x0>251</x0>
<y0>198</y0>
<width>70</width>
<height>40</height>
<text>    状態1</text>
<isinitstate>0</isinitstate>
</state>
<state>
<ID>_SINIT</ID>
<x0>254</x0>
<y0>117</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<codeclip>
<ID>_C1</ID>
<x0>225</x0>
<y0>92</y0>
<width>279</width>
<height>28</height>
<codetext>String LabelName=&quot;&lt;コンポーネントの種類 &gt;&quot;;
</codetext>
</codeclip>
<pin>
<ID>_P2</ID>
<x0>447</x0>
<y0>161</y0>
<width>116</width>
<height>27</height>
<text>join(Component c)</text>
<px>35</px>
<py>31</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>453</x0>
<y0>244</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>21</px>
<py>56</py>
</pin>
<relation>
<ID>_R4</ID>
<pin1name>_A0(_PX6)</pin1name>
<pin2name>_P2</pin2name>
</relation>
<relation>
<ID>_R5</ID>
<pin1name>_P3</pin1name>
<pin2name>_A0(_PX11)</pin2name>
</relation>
</xobject>
<codeclip>
<ID>_CX16</ID>
<x0>44</x0>
<y0>46</y0>
<width>136</width>
<height>22</height>
<codetext>int row=0,column=2;
</codetext>
</codeclip>
<pin>
<ID>_P46</ID>
<x0>231</x0>
<y0>178</y0>
<width>125</width>
<height>31</height>
<text>Property(Container c)</text>
<px>77</px>
<py>36</py>
</pin>
<pin>
<ID>_PX27</ID>
<x0>135</x0>
<y0>368</y0>
<width>60</width>
<height>30</height>
<text>cansel()</text>
<px>123</px>
<py>73</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>388</x0>
<y0>23</y0>
<width>43</width>
<height>26</height>
<text>Start()</text>
<px>6</px>
<py>38</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>307</x0>
<y0>323</y0>
<width>102</width>
<height>24</height>
<text>get(JFrame f)</text>
<px>5</px>
<py>78</py>
</pin>
<pin>
<ID>_PX23</ID>
<x0>59</x0>
<y0>370</y0>
<width>60</width>
<height>30</height>
<text>color()</text>
<px>168</px>
<py>54</py>
</pin>
<pin>
<ID>_PX24</ID>
<x0>206</x0>
<y0>371</y0>
<width>73</width>
<height>28</height>
<text>get(Color c)</text>
<px>75</px>
<py>57</py>
</pin>
<relation>
<ID>_R54</ID>
<pin1name>_PX3</pin1name>
<pin2name>_A49(_PX3)</pin2name>
</relation>
<relation>
<ID>_R79</ID>
<pin1name>_A49(_PX3)</pin1name>
<pin2name>_X69(_P3)</pin2name>
</relation>
<relation>
<ID>_R31</ID>
<pin1name>_X30(_PX5)</pin1name>
<pin2name>_AX6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R59</ID>
<pin1name>_A49(_PX2)</pin1name>
<pin2name>_P46</pin2name>
</relation>
<relation>
<ID>_R60</ID>
<pin1name>_PX1</pin1name>
<pin2name>_X30(_PX1)</pin2name>
</relation>
<relation>
<ID>_R65</ID>
<pin1name>_X30(_PX35)</pin1name>
<pin2name>_PX23</pin2name>
</relation>
<relation>
<ID>_R62</ID>
<pin1name>_PX24</pin1name>
<pin2name>_X30(_PX39)</pin2name>
</relation>
<relation>
<ID>_R80</ID>
<pin1name>_X69(_P2)</pin1name>
<pin2name>_A49(_PX1)</pin2name>
</relation>
<relation>
<ID>_R83</ID>
<pin1name>_X70(_P2)</pin1name>
<pin2name>_X69(_P2)</pin2name>
</relation>
<relation>
<ID>_R56</ID>
<pin1name>_AX6(_PX3)</pin1name>
<pin2name>_X30(_PX7)</pin2name>
</relation>
<relation>
<ID>_R75</ID>
<pin1name>_X69(_P3)</pin1name>
<pin2name>_AX6(_PX3)</pin2name>
</relation>
<relation>
<ID>_R58</ID>
<pin1name>_AX6(_PX2)</pin1name>
<pin2name>_A49(_PX1)</pin2name>
</relation>
<relation>
<ID>_R63</ID>
<pin1name>_PX27</pin1name>
<pin2name>_X30(_PX2)</pin2name>
</relation>
<relation>
<ID>_R77</ID>
<pin1name>_X30(_PX7)</pin1name>
<pin2name>_X70(_P3)</pin2name>
</relation>
</xobject>
<aobject>
<ID>_A84</ID>
<x0>202</x0>
<y0>166</y0>
<width>186</width>
<height>72</height>
<ID_maker>27</ID_maker>
<objectname>Remover</objectname>
<description>エディタのコントロール部</description>
<action>
<ID>_AX9</ID>
<comp1name>_OX5</comp1name>
<comp2name>_PX8</comp2name>
</action>
<action>
<ID>_AX7</ID>
<comp1name>_PX6</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX4</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX3</comp2name>
</action>
<operation>
<ID>_OX3</ID>
<state1>_SINIT</state1>
<state2>_SX2</state2>
<x0>75</x0>
<y0>175</y0>
<width>157</width>
<height>77</height>
<inconnectx0>137</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>137</outconnectx0>
<outconnecty0>51</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>87</inpinx0>
<inpiny0>54</inpiny0>
<inpinwidth>71</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件  s.equals(&quot;DEL&quot;)
削除モードに
遷移する</description>
<codetext></codetext>
</operation>
<operation>
<ID>_OX5</ID>
<state1>_SX2</state1>
<state2>_SINIT</state2>
<x0>379</x0>
<y0>163</y0>
<width>168</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>60</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>1</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>65</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>103</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out(Component cmp)</outpintext>
<outpinx0>42</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>126</outpinwidth>
<outpinheight>24</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
削除する</description>
<codetext>cmp=c;
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>135</x0>
<y0>315</y0>
<width>90</width>
<height>28</height>
<text>cmd(String s)</text>
<px>60</px>
<py>56</py>
</pin>
<pin>
<ID>_PX6</ID>
<x0>582</x0>
<y0>158</y0>
<width>136</width>
<height>26</height>
<text>selected(Component c)</text>
<px>12</px>
<py>38</py>
</pin>
<pin>
<ID>_PX8</ID>
<x0>546</x0>
<y0>268</y0>
<width>130</width>
<height>29</height>
<text>remove(Component c)</text>
<px>17</px>
<py>24</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>264</x0>
<y0>123</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX2</ID>
<x0>271</x0>
<y0>263</y0>
<width>79</width>
<height>39</height>
<text>  削除モード</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<xobject>
<ID>_X94</ID>
<x0>140</x0>
<y0>249</y0>
<width>240</width>
<height>73</height>
<ID_maker>20</ID_maker>
<objectname>Loader</objectname>
<description>新しいオブジェクト</description>
<aobject>
<ID>_A0</ID>
<x0>421</x0>
<y0>134</y0>
<width>185</width>
<height>87</height>
<ID_maker>16</ID_maker>
<objectname>XLoader</objectname>
<description>新しいオブジェクト</description>
<action>
<ID>_A8</ID>
<comp1name>_P3</comp1name>
<comp2name>_O4</comp2name>
</action>
<action>
<ID>_A12</ID>
<comp1name>_P1</comp1name>
<comp2name>_O11</comp2name>
</action>
<codeclip>
<ID>_C7</ID>
<x0>118</x0>
<y0>11</y0>
<width>255</width>
<height>41</height>
<codetext>JFrame window;      //ウィンドウ
BufferedReader din;//ロードするファイル
</codetext>
</codeclip>
<operation>
<ID>_O4</ID>
<state1>_SINIT</state1>
<state2>_S6</state2>
<x0>40</x0>
<y0>88</y0>
<width>139</width>
<height>71</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>120</outconnectx0>
<outconnecty0>16</outconnecty0>
<inpintext>in(JFrame f)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>49</inpiny0>
<inpinwidth>90</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ウィンドウを取得する
window =f;
</codetext>
</operation>
<operation>
<ID>_O11</ID>
<state1>_S6</state1>
<state2>_S6</state2>
<x0>310</x0>
<y0>126</y0>
<width>139</width>
<height>81</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>8</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>61</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>69</inpinx0>
<inpiny0>58</inpiny0>
<inpinwidth>71</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>102</outpinx0>
<outpiny0>35</outpiny0>
<outpinwidth>39</outpinwidth>
<outpinheight>24</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ロードを開始する
JPanel panel= null;
String line;

try{
//System.out.println(s);
din = new BufferedReader( new FileReader(s) );
window.setTitle( din.readLine() );
int wid = parseInt( din.readLine() );
int hei = parseInt( din.readLine() );
panel = (JPanel)(window.getContentPane());
panel.removeAll();
panel.setBackground( new Color( parseInt( din.readLine() ),parseInt( din.readLine() ),parseInt( din.readLine() ) ) );
panel.setPreferredSize( new Dimension( wid, hei ) );
panel.setSize( wid, hei );
window.pack();
put(window);
} catch( IOException ie ) { System.out.println(&quot;file: [&quot;+s+&quot;] format error&quot;);}
try{
while( ( line=din.readLine() )!=null ){
//  System.out.println(&quot;line&quot;+line);
  if( line.startsWith(&quot;xxscale=&quot;) ) xxscale.setText(line.substring(8));
  else{
    isLoad();
    Load(line);
  }
}
din.close();
} catch( IOException ie ) {System.out.println(&quot;data error&quot;);}
panel.validate();
</codetext>
</operation>
<pin>
<ID>_P0</ID>
<x0>453</x0>
<y0>180</y0>
<width>85</width>
<height>25</height>
<text>Load(String s)</text>
<px>87</px>
<py>67</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>334</x0>
<y0>265</y0>
<width>130</width>
<height>29</height>
<text>open(String filename)</text>
<px>11</px>
<py>27</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>453</x0>
<y0>154</y0>
<width>59</width>
<height>24</height>
<text>isLoad()</text>
<px>7</px>
<py>67</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>44</x0>
<y0>207</y0>
<width>96</width>
<height>26</height>
<text>get(JFrame f)</text>
<px>89</px>
<py>8</py>
</pin>
<pin>
<ID>_P15</ID>
<x0>453</x0>
<y0>126</y0>
<width>85</width>
<height>25</height>
<text>put(JFrame f)</text>
<px>9</px>
<py>46</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>3</x0>
<y0>18</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S6</ID>
<x0>218</x0>
<y0>128</y0>
<width>70</width>
<height>40</height>
<text>     状態１</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<aobject>
<ID>_A6</ID>
<x0>142</x0>
<y0>124</y0>
<width>259</width>
<height>57</height>
<ID_maker>10</ID_maker>
<objectname>FileSelector</objectname>
<description></description>
<action>
<ID>_AX9</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX8</comp2name>
</action>
<operation>
<ID>_OX8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>255</x0>
<y0>122</y0>
<width>119</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>80</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ファイル選択
ダイアログを開く</description>
<codetext>JFileChooser chooser = new JFileChooser( &quot;LayoutLib&quot; );
chooser.setDialogTitle( &quot;レイアウト情報のロード&quot; );
chooser.setFileSelectionMode( JFileChooser.FILES_AND_DIRECTORIES );
if( chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION ){
    selected( chooser.getSelectedFile().getPath() );
}
else cansel();
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>395</x0>
<y0>215</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>24</px>
<py>33</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>390</x0>
<y0>104</y0>
<width>62</width>
<height>28</height>
<text>cansel()</text>
<px>206</px>
<py>0</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>389</x0>
<y0>142</y0>
<width>152</width>
<height>23</height>
<text>selected(String fileName)</text>
<px>109</px>
<py>37</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>138</x0>
<y0>82</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<aobject>
<ID>_A7</ID>
<x0>22</x0>
<y0>120</y0>
<width>104</width>
<height>71</height>
<ID_maker>5</ID_maker>
<objectname>Commander</objectname>
<description>新しいオブジェクト</description>
<action>
<ID>_A2</ID>
<comp1name>_P1</comp1name>
<comp2name>_O0</comp2name>
</action>
<action>
<ID>_A4</ID>
<comp1name>_O0</comp1name>
<comp2name>_P3</comp2name>
</action>
<operation>
<ID>_O0</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>146</x0>
<y0>48</y0>
<width>170</width>
<height>91</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>get(String cmd)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>70</inpiny0>
<inpinwidth>93</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>Load()</outpintext>
<outpinx0>119</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>51</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件  cmd.equals(&quot;LOAD&quot;)
Load() を発行する</description>
<codetext></codetext>
</operation>
<pin>
<ID>_P1</ID>
<x0>140</x0>
<y0>179</y0>
<width>99</width>
<height>27</height>
<text>get(String cmd)</text>
<px>6</px>
<py>52</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>265</x0>
<y0>180</y0>
<width>51</width>
<height>27</height>
<text>Load()</text>
<px>64</px>
<py>37</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>11</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<pin>
<ID>_P5</ID>
<x0>410</x0>
<y0>264</y0>
<width>61</width>
<height>25</height>
<text>isLoad()</text>
<px>37</px>
<py>40</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>28</x0>
<y0>255</y0>
<width>88</width>
<height>28</height>
<text>cmd(String s)</text>
<px>155</px>
<py>45</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>499</x0>
<y0>262</y0>
<width>99</width>
<height>26</height>
<text>Load(String s)</text>
<px>2</px>
<py>26</py>
</pin>
<pin>
<ID>_P13</ID>
<x0>512</x0>
<y0>58</y0>
<width>87</width>
<height>26</height>
<text>get(JFrame f)</text>
<px>99</px>
<py>22</py>
</pin>
<pin>
<ID>_P15</ID>
<x0>285</x0>
<y0>196</y0>
<width>86</width>
<height>28</height>
<text>put(JFrame f)</text>
<px>100</px>
<py>6</py>
</pin>
<pin>
<ID>_P17</ID>
<x0>670</x0>
<y0>157</y0>
<width>84</width>
<height>24</height>
<text>open(String f)</text>
<px>1</px>
<py>53</py>
</pin>
<relation>
<ID>_R8</ID>
<pin1name>_P2</pin1name>
<pin2name>_A7(_P1)</pin2name>
</relation>
<relation>
<ID>_R9</ID>
<pin1name>_A7(_P3)</pin1name>
<pin2name>_A6(_PX1)</pin2name>
</relation>
<relation>
<ID>_R10</ID>
<pin1name>_A6(_PX5)</pin1name>
<pin2name>_A0(_P1)</pin2name>
</relation>
<relation>
<ID>_R11</ID>
<pin1name>_A0(_P2)</pin1name>
<pin2name>_P5</pin2name>
</relation>
<relation>
<ID>_R12</ID>
<pin1name>_A0(_P0)</pin1name>
<pin2name>_P3</pin2name>
</relation>
<relation>
<ID>_R14</ID>
<pin1name>_P13</pin1name>
<pin2name>_A0(_P3)</pin2name>
</relation>
<relation>
<ID>_R16</ID>
<pin1name>_A0(_P15)</pin1name>
<pin2name>_P15</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_P17</pin1name>
<pin2name>_A0(_P1)</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X147</ID>
<x0>598</x0>
<y0>313</y0>
<width>121</width>
<height>80</height>
<ID_maker>7</ID_maker>
<objectname>プログラム終了</objectname>
<description>新しいオブジェクト</description>
<operation>
<ID>_O0</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>213</x0>
<y0>59</y0>
<width>142</width>
<height>65</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>45</inpiny0>
<inpinwidth>69</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>102</outpinx0>
<outpiny0>45</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件: s.equals(&quot;QUIT&quot;)</description>
<codetext></codetext>
</operation>
<operation>
<ID>_O1</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>372</x0>
<y0>58</y0>
<width>119</width>
<height>66</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>46</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>2</inpinlinkcount>
<description>プログラム終了</description>
<codetext>System.exit(0);
</codetext>
</operation>
<pin>
<ID>_P2</ID>
<x0>208</x0>
<y0>160</y0>
<width>78</width>
<height>26</height>
<text>cmd(String s)</text>
<px>0</px>
<py>59</py>
</pin>
<relation>
<ID>_R3</ID>
<pin1name>_P2</pin1name>
<pin2name>_O0</pin2name>
</relation>
<relation>
<ID>_R4</ID>
<pin1name>_O0</pin1name>
<pin2name>_O1</pin2name>
</relation>
<pin>
<ID>_P5</ID>
<x0>373</x0>
<y0>160</y0>
<width>39</width>
<height>29</height>
<text>exit()</text>
<px>0</px>
<py>40</py>
</pin>
<relation>
<ID>_R6</ID>
<pin1name>_P5</pin1name>
<pin2name>_O1</pin2name>
</relation>
</xobject>
<relation>
<ID>_R148</ID>
<pin1name>_A67(_PX12)</pin1name>
<pin2name>_X147(_P5)</pin2name>
</relation>
<codeclip>
<ID>_CX8</ID>
<x0>229</x0>
<y0>37</y0>
<width>293</width>
<height>24</height>
<codetext>int width=400,height=300;//GraphicPanelのサイズ
</codetext>
</codeclip>
<pin>
<ID>_P81</ID>
<x0>446</x0>
<y0>413</y0>
<width>104</width>
<height>25</height>
<text>cmd(String s)</text>
<px>41</px>
<py>102</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>3</x0>
<y0>103</y0>
<width>124</width>
<height>29</height>
<text>paste(Component c)</text>
<px>30</px>
<py>70</py>
</pin>
<pin>
<ID>_PX4</ID>
<x0>577</x0>
<y0>89</y0>
<width>42</width>
<height>27</height>
<text>Start()</text>
<px>117</px>
<py>141</py>
</pin>
<pin>
<ID>_PX17</ID>
<x0>20</x0>
<y0>200</y0>
<width>130</width>
<height>25</height>
<text>clicked(Component c)</text>
<px>23</px>
<py>84</py>
</pin>
<pin>
<ID>_P73</ID>
<x0>677</x0>
<y0>84</y0>
<width>144</width>
<height>27</height>
<text>Property(Container c)</text>
<px>6</px>
<py>166</py>
</pin>
<pin>
<ID>_P75</ID>
<x0>648</x0>
<y0>286</y0>
<width>72</width>
<height>21</height>
<text>get(Color c)</text>
<px>101</px>
<py>29</py>
</pin>
<pin>
<ID>_P76</ID>
<x0>748</x0>
<y0>279</y0>
<width>46</width>
<height>28</height>
<text>color()</text>
<px>118</px>
<py>13</py>
</pin>
<pin>
<ID>_P77</ID>
<x0>701</x0>
<y0>242</y0>
<width>60</width>
<height>23</height>
<text>cansel()</text>
<px>114</px>
<py>0</py>
</pin>
<pin>
<ID>_P106</ID>
<x0>15</x0>
<y0>270</y0>
<width>99</width>
<height>26</height>
<text>Load(String s)</text>
<px>83</px>
<py>54</py>
</pin>
<pin>
<ID>_P132</ID>
<x0>24</x0>
<y0>296</y0>
<width>81</width>
<height>29</height>
<text>open(String f)</text>
<px>45</px>
<py>123</py>
</pin>
<relation>
<ID>_R82</ID>
<pin1name>_PX4</pin1name>
<pin2name>_X69(_PX3)</pin2name>
</relation>
<relation>
<ID>_RX24</ID>
<pin1name>_PX1</pin1name>
<pin2name>_AX18(_PX12)</pin2name>
</relation>
<relation>
<ID>_RX23</ID>
<pin1name>_AX18(_PX20)</pin1name>
<pin2name>_AX9(_PX40)</pin2name>
</relation>
<relation>
<ID>_RX22</ID>
<pin1name>_AX9(_PX4)</pin1name>
<pin2name>_AX18(_PX15)</pin2name>
</relation>
<relation>
<ID>_R86</ID>
<pin1name>_A84(_PX8)</pin1name>
<pin2name>_AX9(_PX43)</pin2name>
</relation>
<relation>
<ID>_R83</ID>
<pin1name>_X69(_PX3)</pin1name>
<pin2name>_AX9(_PX25)</pin2name>
</relation>
<relation>
<ID>_R119</ID>
<pin1name>_AX9(_PX3)</pin1name>
<pin2name>_A67(_PX2)</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_A67(_P26)</pin1name>
<pin2name>_X69(_PX1)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_A67(_P26)</pin1name>
<pin2name>_A56(_P1)</pin2name>
</relation>
<relation>
<ID>_R74</ID>
<pin1name>_X69(_P46)</pin1name>
<pin2name>_P73</pin2name>
</relation>
<relation>
<ID>_R78</ID>
<pin1name>_P77</pin1name>
<pin2name>_X69(_PX27)</pin2name>
</relation>
<relation>
<ID>_R79</ID>
<pin1name>_X69(_PX23)</pin1name>
<pin2name>_P76</pin2name>
</relation>
<relation>
<ID>_R80</ID>
<pin1name>_P75</pin1name>
<pin2name>_X69(_PX24)</pin2name>
</relation>
<relation>
<ID>_R87</ID>
<pin1name>_PX17</pin1name>
<pin2name>_A84(_PX6)</pin2name>
</relation>
<relation>
<ID>_R107</ID>
<pin1name>_X94(_P3)</pin1name>
<pin2name>_P106</pin2name>
</relation>
<relation>
<ID>_R108</ID>
<pin1name>_X94(_P2)</pin1name>
<pin2name>_A84(_PX1)</pin2name>
</relation>
<relation>
<ID>_R110</ID>
<pin1name>_P81</pin1name>
<pin2name>_A56(_P5)</pin2name>
</relation>
<relation>
<ID>_R117</ID>
<pin1name>_X94(_P5)</pin1name>
<pin2name>_AX18(_P29)</pin2name>
</relation>
<relation>
<ID>_R149</ID>
<pin1name>_A56(_P5)</pin1name>
<pin2name>_X147(_P2)</pin2name>
</relation>
<relation>
<ID>_R131</ID>
<pin1name>_X94(_P15)</pin1name>
<pin2name>_X69(_PX1)</pin2name>
</relation>
<relation>
<ID>_R133</ID>
<pin1name>_P132</pin1name>
<pin2name>_X94(_P17)</pin2name>
</relation>
<pin>
<ID>_P136</ID>
<x0>593</x0>
<y0>246</y0>
<width>80</width>
<height>26</height>
<text>out(JFrame f)</text>
<px>5</px>
<py>43</py>
</pin>
<relation>
<ID>_R142</ID>
<pin1name>_X69(_PX1)</pin1name>
<pin2name>_P136</pin2name>
</relation>
<xobject>
<ID>_X151</ID>
<x0>141</x0>
<y0>329</y0>
<width>240</width>
<height>73</height>
<ID_maker>23</ID_maker>
<objectname>Saver</objectname>
<description>新しいオブジェクト</description>
<aobject>
<ID>_A6</ID>
<x0>142</x0>
<y0>124</y0>
<width>259</width>
<height>57</height>
<ID_maker>10</ID_maker>
<objectname>FileSelector</objectname>
<description></description>
<action>
<ID>_AX9</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX8</comp2name>
</action>
<operation>
<ID>_OX8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>255</x0>
<y0>122</y0>
<width>119</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>0</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>80</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ファイル選択
ダイアログを開く</description>
<codetext>JFileChooser chooser = new JFileChooser( &quot;LayoutLib&quot; );
chooser.setDialogTitle( &quot;レイアウト情報の保存&quot; );
chooser.setFileSelectionMode( JFileChooser.FILES_AND_DIRECTORIES );
if( chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION ){
    selected( chooser.getSelectedFile().getPath() );
}
else cansel();
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>395</x0>
<y0>215</y0>
<width>60</width>
<height>30</height>
<text>request()</text>
<px>24</px>
<py>33</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>390</x0>
<y0>104</y0>
<width>62</width>
<height>28</height>
<text>cansel()</text>
<px>206</px>
<py>0</py>
</pin>
<pin>
<ID>_PX5</ID>
<x0>389</x0>
<y0>142</y0>
<width>152</width>
<height>23</height>
<text>selected(String fileName)</text>
<px>109</px>
<py>37</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>138</x0>
<y0>82</y0>
<width>70</width>
<height>40</height>
<text> InitialState</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<aobject>
<ID>_A7</ID>
<x0>22</x0>
<y0>120</y0>
<width>104</width>
<height>71</height>
<ID_maker>5</ID_maker>
<objectname>Commander</objectname>
<description>新しいオブジェクト</description>
<action>
<ID>_A2</ID>
<comp1name>_P1</comp1name>
<comp2name>_O0</comp2name>
</action>
<action>
<ID>_A4</ID>
<comp1name>_O0</comp1name>
<comp2name>_P3</comp2name>
</action>
<operation>
<ID>_O0</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>146</x0>
<y0>48</y0>
<width>170</width>
<height>91</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>get(String cmd)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>70</inpiny0>
<inpinwidth>93</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>Load()</outpintext>
<outpinx0>119</outpinx0>
<outpiny0>70</outpiny0>
<outpinwidth>51</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>条件  cmd.equals(&quot;SAVE&quot;)
Load() を発行する</description>
<codetext></codetext>
</operation>
<pin>
<ID>_P1</ID>
<x0>140</x0>
<y0>179</y0>
<width>99</width>
<height>27</height>
<text>get(String cmd)</text>
<px>6</px>
<py>52</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>265</x0>
<y0>180</y0>
<width>51</width>
<height>27</height>
<text>Load()</text>
<px>64</px>
<py>37</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>11</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<pin>
<ID>_P2</ID>
<x0>28</x0>
<y0>255</y0>
<width>88</width>
<height>28</height>
<text>cmd(String s)</text>
<px>154</px>
<py>43</py>
</pin>
<pin>
<ID>_P13</ID>
<x0>503</x0>
<y0>56</y0>
<width>87</width>
<height>26</height>
<text>get(JFrame f)</text>
<px>98</px>
<py>24</py>
</pin>
<relation>
<ID>_R8</ID>
<pin1name>_P2</pin1name>
<pin2name>_A7(_P1)</pin2name>
</relation>
<relation>
<ID>_R9</ID>
<pin1name>_A7(_P3)</pin1name>
<pin2name>_A6(_PX1)</pin2name>
</relation>
<aobject>
<ID>_A20</ID>
<x0>409</x0>
<y0>116</y0>
<width>242</width>
<height>69</height>
<ID_maker>20</ID_maker>
<objectname>XSaver</objectname>
<description>ObjectEditor用のファイルをつくる</description>
<action>
<ID>_A6</ID>
<comp1name>_P5</comp1name>
<comp2name>_O4</comp2name>
</action>
<operation>
<ID>_O4</ID>
<state1>_SINIT</state1>
<state2>_S12</state2>
<x0>274</x0>
<y0>168</y0>
<width>140</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>59</inconnecty0>
<outconnectx0>109</outconnectx0>
<outconnecty0>74</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>72</inpinx0>
<inpiny0>51</inpiny0>
<inpinwidth>68</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// エディット画面を
// セーブする
int i, j;
Container cnt = ウィンドウ.getContentPane();

f1 = new XFile( s );
f1.Xdelete();

Color col = ((Component)cnt).getBackground();
f1.Xappend( editwindow.getTitle() + &quot;\n&quot; + cnt.getWidth() +&quot;\n&quot; +cnt.getHeight() +&quot;\n&quot; + col.getRed()+ &quot;\n&quot;+ col.getGreen()+&quot;\n&quot;+col.getBlue()+&quot;\n&quot; );

f1.Xappend(&quot;xxscale=&quot;+xxscale.getText()+&quot;\n&quot;);

for( i=cnt.getComponentCount()-1,j=0;i&gt;=0;i--){

  if( cnt.getComponent(i) instanceof JLabel ){
    XJLabel lbl = (XJLabel)( cnt.getComponent(i) );    
    String name = lbl.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LBL&quot;+ i;
    String txt = lbl.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = lbl.getX();
    int y0 = lbl.getY();
    int wid = lbl.getWidth();
    int hei  = lbl.getHeight();
    Color  fcol = lbl.getForeground();
    Color  bcol = lbl.getBackground();
    Font f = lbl.getFont();

    String imagefile = lbl.ImageFile;
    if( imagefile==null || imagefile.equals(&quot;&quot;) || (!( new XFile(imagefile) ).isFile() ) ) imagefile = &quot;null&quot;;

    int ax = lbl.getHorizontalAlignment();
    int ay = lbl.getVerticalAlignment();

    f1.Xappend( &quot;LABEL;&quot;);
    f1.Xappend(  name + &quot;;&quot; + txt + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot;+ imagefile + &quot;;&quot; + ax + &quot;;&quot; + ay + &quot;;&quot; );
    if( lbl.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lbl.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lbl.print_paint_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( lbl.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JButton ){
    XJButton btn = (XJButton)( cnt.getComponent(i) );    
    String name = btn.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;BTN&quot;+ i;
    String txt = btn.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = btn.getX();
    int y0 = btn.getY();
    int wid = btn.getWidth();
    int hei  = btn.getHeight();
    Color  fcol = btn.getForeground();
    Color  bcol = btn.getBackground();
    Font f = btn.getFont();

    String imagefile = btn.ImageFile;
    if( imagefile==null || imagefile.equals(&quot;&quot;) || (!( new XFile(imagefile) ).isFile() ) ) imagefile = &quot;null&quot;;

    int ax = btn.getHorizontalAlignment();
    int ay = btn.getVerticalAlignment();

    f1.Xappend( &quot;BUTTON;&quot;);
    f1.Xappend(  name + &quot;;&quot; + txt + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot;+ imagefile + &quot;;&quot; + ax + &quot;;&quot; + ay + &quot;;&quot; );
    if( btn.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( btn.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( btn.print_clicked_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( btn.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JTextField ){
    XJTextField fld= (XJTextField)( cnt.getComponent(i) );    
    String name = fld.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;FLD&quot;+ i;
    String txt = fld.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = fld.getX();
    int y0 = fld.getY();
    int wid = fld.getWidth();
    int hei  = fld.getHeight();
    Color  fcol = fld.getForeground();
    Color  bcol = fld.getBackground();
    Font f = fld.getFont();

    f1.Xappend( &quot;TEXTFIELD;&quot;);
    f1.Xappend(  name + &quot;;&quot; + txt + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot; );
    if( fld.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( fld.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( fld.print_input_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( fld.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.HORIZONTAL ) ){
    XJHSlider sldr= (XJHSlider)( cnt.getComponent(i) );    
    String name = sldr.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;HSL&quot;+ i;
    int minval = sldr.getMinimum();
    int maxval = sldr.getMaximum();
    int x0 = sldr.getX();
    int y0 = sldr.getY();
    int wid = sldr.getWidth();
    int hei  = sldr.getHeight();
    Color  fcol = sldr.getForeground();
    Color  bcol = sldr.getBackground();

    f1.Xappend( &quot;HSLIDER;&quot;);
    f1.Xappend(  name + &quot;;&quot; + minval + &quot;;&quot; + maxval + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    if( sldr.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_changed_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( sldr.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( ( cnt.getComponent(i) instanceof JSlider ) &amp;&amp; ( ((JSlider)(cnt.getComponent(i))).getOrientation() == SwingConstants.VERTICAL ) ){
    XJVSlider sldr= (XJVSlider)( cnt.getComponent(i) );    
    String name = sldr.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;VSL&quot;+ i;
    int minval = sldr.getMinimum();
    int maxval = sldr.getMaximum();
    int x0 = sldr.getX();
    int y0 = sldr.getY();
    int wid = sldr.getWidth();
    int hei  = sldr.getHeight();
    Color  fcol = sldr.getForeground();
    Color  bcol = sldr.getBackground();

    f1.Xappend( &quot;VSLIDER;&quot;);
    f1.Xappend(  name + &quot;;&quot; + minval + &quot;;&quot; + maxval + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    if( sldr.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( sldr.print_changed_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( sldr.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JCheckBox ){
    XJCheckBox chk= (XJCheckBox)( cnt.getComponent(i) );    
    String name = chk.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;CHK&quot;+ i;
    int s1 = 0;
    if ( chk.isSelected() )  s1 =1;
    int x0 = chk.getX();
    int y0 = chk.getY();
    int wid = chk.getWidth();
    int hei  = chk.getHeight();
    Color  fcol = chk.getForeground();
    Color  bcol = chk.getBackground();

    f1.Xappend( &quot;CHECKBOX;&quot;);
    f1.Xappend(  name + &quot;;&quot;  + s1 + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    if( chk.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( chk.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( chk.print_check_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( chk.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JTextArea ){
    XJTextArea ara=  (XJTextArea)( cnt.getComponent(i) );    
    String name = ara.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;ARA&quot;+ i;
    String txt = ara.getText();
    if( txt == null || txt.equals(&quot;&quot;)) txt=&quot;null&quot;;
    int x0 = ara.getX();
    int y0 = ara.getY();
    int wid = ara.getWidth();
    int hei  = ara.getHeight();
    Color  fcol = ara.getForeground();
    Color  bcol = ara.getBackground();
    Font f = ara.getFont();

    f1.Xappend( &quot;TEXTAREA;&quot;);
    f1.Xappend(  name + &quot;;&quot; + getFirstLine(txt) + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot; );
    if( ara.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( ara.is_scrollable ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( ara.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( ara.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
  if( cnt.getComponent(i) instanceof JList ){
    XJList lst=  (XJList)( cnt.getComponent(i) );    
    String name = lst.getName();
    if( name == null || name.equals(&quot;&quot;) ) name = &quot;LST&quot;+ i;
    int x0 = lst.getX();
    int y0 = lst.getY();
    int wid = lst.getWidth();
    int hei  = lst.getHeight();
    Color  fcol = lst.getForeground();
    Color  bcol = lst.getBackground();
    Font f = lst.getFont();

    f1.Xappend( &quot;LIST;&quot;);
    f1.Xappend(  name + &quot;;&quot; + x0 + &quot;;&quot; + y0 + &quot;;&quot; + wid + &quot;;&quot; + hei + &quot;;&quot; );
    f1.Xappend( fcol.getRed() + &quot;;&quot; + fcol.getGreen() + &quot;;&quot; + fcol.getBlue() + &quot;;&quot;);
    f1.Xappend(  bcol.getRed() + &quot;;&quot; + bcol.getGreen() + &quot;;&quot; + bcol.getBlue() + &quot;;&quot;);
    f1.Xappend( f.getName() +&quot;;&quot;+ f.getSize() +&quot;;&quot; );
    if( lst.is_opaque ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lst.is_scrollable ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lst.print_created_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    if( lst.print_selected_pin ) f1.Xappend(&quot;1;&quot;); else f1.Xappend(&quot;0;&quot;);
    f1.Xappend( lst.super_class[AppTyp]+&quot;;&quot; );
    f1.Xappend( &quot;\n&quot; );

  }
}
</codetext>
</operation>
<pin>
<ID>_P5</ID>
<x0>471</x0>
<y0>208</y0>
<width>82</width>
<height>28</height>
<text>open(String fname)</text>
<px>100</px>
<py>45</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>134</x0>
<y0>243</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_S12</ID>
<x0>467</x0>
<y0>258</y0>
<width>70</width>
<height>40</height>
<text>      状態1</text>
<isinitstate>0</isinitstate>
</state>
<operation>
<ID>_O13</ID>
<state1>_S12</state1>
<state2>_SINIT</state2>
<x0>261</x0>
<y0>278</y0>
<width>143</width>
<height>69</height>
<inconnectx0>124</inconnectx0>
<inconnecty0>16</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description></description>
<codetext>// メニューをセーブする
JMenuBar メニューバー = ウィンドウ.getJMenuBar();
if( メニューバー != null ){
  int i;
  for( i = 0; i &lt; メニューバー.getComponentCount(); i++ ){
    f1.Xappend( メニューを文字列に変換(  (JMenu)メニューバー.getComponent( i ) ) + &quot;END;\n&quot; );
  }
}
</codetext>
</operation>
<codeclip>
<ID>_C14</ID>
<x0>205</x0>
<y0>6</y0>
<width>213</width>
<height>20</height>
<codetext>XFile f1;//出力ファイル
</codetext>
</codeclip>
<codeclip>
<ID>_C15</ID>
<x0>205</x0>
<y0>25</y0>
<width>142</width>
<height>21</height>
<codetext>JFrame ウィンドウ;
</codetext>
</codeclip>
<codeclip>
<ID>_C16</ID>
<x0>180</x0>
<y0>351</y0>
<width>308</width>
<height>20</height>
<codetext>private String メニューを文字列に変換( JMenu m ){
  String s = &quot;Menu;&quot; + m.getText() + &quot;;&quot; + m.getMnemonic() + &quot;;&quot;;
  int i;
  for( i = 0; i &lt; m.getItemCount(); i++){
    s = s + メニューを文字列に変換( (JMenu)m.getItem( i ) );
  }
  return( s + &quot;/Menu;&quot; );
}

</codetext>
</codeclip>
<pin>
<ID>_P17</ID>
<x0>470</x0>
<y0>127</y0>
<width>78</width>
<height>28</height>
<text>get(JFrame f)</text>
<px>101</px>
<py>22</py>
</pin>
<operation>
<ID>_O18</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>279</x0>
<y0>84</y0>
<width>117</width>
<height>68</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>47</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>47</outconnecty0>
<inpintext>in(JFrame f)</inpintext>
<inpinx0>37</inpinx0>
<inpiny0>47</inpiny0>
<inpinwidth>80</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ウィンドウを取得
// する
ウィンドウ = f;
</codetext>
</operation>
<action>
<ID>_A19</ID>
<comp1name>_P17</comp1name>
<comp2name>_O18</comp2name>
</action>
</aobject>
<relation>
<ID>_R21</ID>
<pin1name>_A6(_PX5)</pin1name>
<pin2name>_A20(_P5)</pin2name>
</relation>
<relation>
<ID>_R22</ID>
<pin1name>_P13</pin1name>
<pin2name>_A20(_P17)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R152</ID>
<pin1name>_A56(_P5)</pin1name>
<pin2name>_X151(_P2)</pin2name>
</relation>
<relation>
<ID>_R153</ID>
<pin1name>_X151(_P2)</pin1name>
<pin2name>_X94(_P2)</pin2name>
</relation>
<relation>
<ID>_R154</ID>
<pin1name>_A56(_P1)</pin1name>
<pin2name>_X151(_P13)</pin2name>
</relation>
<relation>
<ID>_R155</ID>
<pin1name>_X151(_P13)</pin1name>
<pin2name>_X94(_P13)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R119</ID>
<pin1name>_A85(_PX13)</pin1name>
<pin2name>_X118(_P77)</pin2name>
</relation>
<relation>
<ID>_R120</ID>
<pin1name>_X118(_P77)</pin1name>
<pin2name>_X106(_PX43)</pin2name>
</relation>
<relation>
<ID>_R121</ID>
<pin1name>_X106(_PX28)</pin1name>
<pin2name>_X118(_P76)</pin2name>
</relation>
<relation>
<ID>_R122</ID>
<pin1name>_X118(_P76)</pin1name>
<pin2name>_A85(_PX1)</pin2name>
</relation>
<relation>
<ID>_R123</ID>
<pin1name>_A85(_PX6)</pin1name>
<pin2name>_X118(_P75)</pin2name>
</relation>
<relation>
<ID>_R124</ID>
<pin1name>_X118(_P75)</pin1name>
<pin2name>_X106(_PX29)</pin2name>
</relation>
<relation>
<ID>_R125</ID>
<pin1name>_X118(_P136)</pin1name>
<pin2name>_X90(_P13)</pin2name>
</relation>
<relation>
<ID>_R126</ID>
<pin1name>_X118(_P106)</pin1name>
<pin2name>_X106(_P156)</pin2name>
</relation>
<relation>
<ID>_R127</ID>
<pin1name>_X36(_P50)</pin1name>
<pin2name>_X118(_P81)</pin2name>
</relation>
<relation>
<ID>_R129</ID>
<pin1name>_X36(_PX1)</pin1name>
<pin2name>_X118(_PX4)</pin2name>
</relation>
<relation>
<ID>_R130</ID>
<pin1name>_X118(_PX4)</pin1name>
<pin2name>_X106(_PX3)</pin2name>
</relation>
<relation>
<ID>_R132</ID>
<pin1name>_X106(_PX2)</pin1name>
<pin2name>_X118(_PX1)</pin2name>
</relation>
<relation>
<ID>_R133</ID>
<pin1name>_X106(_PX12)</pin1name>
<pin2name>_X118(_PX17)</pin2name>
</relation>
<xobject>
<ID>_X134</ID>
<x0>82</x0>
<y0>434</y0>
<width>686</width>
<height>26</height>
<ID_maker>9</ID_maker>
<objectname>MainWindow</objectname>
<description>新しいオブジェクト</description>
<aobject>
<ID>_A0</ID>
<x0>149</x0>
<y0>238</y0>
<width>249</width>
<height>99</height>
<ID_maker>26</ID_maker>
<objectname>Window</objectname>
<description>JAVAのJFrameウィンドウ</description>
<action>
<ID>_AX25</ID>
<comp1name>_PX24</comp1name>
<comp2name>_OX23</comp2name>
</action>
<action>
<ID>_AX22</ID>
<comp1name>_PX21</comp1name>
<comp2name>_OX20</comp2name>
</action>
<action>
<ID>_AX19</ID>
<comp1name>_PX18</comp1name>
<comp2name>_OX17</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX2</comp1name>
<comp2name>_OX5</comp2name>
</action>
<action>
<ID>_AX7</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX6</comp2name>
</action>
<codeclip>
<ID>_CX9</ID>
<x0>1</x0>
<y0>0</y0>
<width>275</width>
<height>23</height>
<codetext>Window0 window;//ウィンドウのインスタンス
Container container;//ウィンドウの表示領域
class Window0 extends JFrame implements WindowListener, ComponentListener, ContainerListener{
Window0(){
setTitle(&quot;GUIDesigner&quot;);
addWindowListener(this);
getContentPane().addComponentListener(this);
}
public void windowActivated(WindowEvent e){ Activated(); }
public void windowClosed(WindowEvent e){ Closed(); }
public void windowClosing(WindowEvent e){ Closing(); }
public void windowDeactivated(WindowEvent e){ Deactivated(); }
public void windowDeiconified(WindowEvent e){ Deiconfied(); }
public void windowIconified(WindowEvent e){ Iconfied(); }
public void windowOpened(WindowEvent e){ Opened(); }

public void componentHidden(ComponentEvent e) {}
public void componentMoved(ComponentEvent e)  {}
public void componentResized(ComponentEvent e){}
public void componentShown(ComponentEvent e)  {}
public void componentAdded(ContainerEvent e)  {}
public void componentRemoved(ContainerEvent e){}

}
</codetext>
</codeclip>
<operation>
<ID>_OX23</ID>
<state1>_SX3</state1>
<state2>_SX3</state2>
<x0>228</x0>
<y0>50</y0>
<width>152</width>
<height>76</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>52</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>52</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>53</inpinx0>
<inpiny0>56</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ウィンドウの下部に
コンポーネントを加える</description>
<codetext>container.add(c,BorderLayout.SOUTH);
window.pack();
</codetext>
</operation>
<operation>
<ID>_OX20</ID>
<state1>_SX3</state1>
<state2>_SX3</state2>
<x0>228</x0>
<y0>128</y0>
<width>153</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>18</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>18</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>53</inpinx0>
<inpiny0>50</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ウィンドウの左側に
コンポーネントを加える</description>
<codetext>container.add(c,BorderLayout.WEST);
window.pack();
</codetext>
</operation>
<operation>
<ID>_OX17</ID>
<state1>_SX3</state1>
<state2>_SX3</state2>
<x0>228</x0>
<y0>201</y0>
<width>154</width>
<height>63</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>54</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>100</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ウィンドウの右側に
コンポーネントを加える</description>
<codetext>container.add(c,BorderLayout.EAST);
window.pack();
</codetext>
</operation>
<operation>
<ID>_OX4</ID>
<state1>_SINIT</state1>
<state2>_SX3</state2>
<x0>51</x0>
<y0>268</y0>
<width>101</width>
<height>58</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>0</inconnecty0>
<outconnectx0>87</outconnectx0>
<outconnecty0>1</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>ウィンドウを
生成する</description>
<codetext>window = new Window0();
window.setVisible(true);
window.setLocation(420,0);
container=window.getContentPane();
mainwindow = window;
</codetext>
</operation>
<operation>
<ID>_OX5</ID>
<state1>_SX3</state1>
<state2>_SX3</state2>
<x0>228</x0>
<y0>267</y0>
<width>153</width>
<height>66</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>18</inconnecty0>
<outconnectx0>1</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>54</inpinx0>
<inpiny0>44</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ウィンドウの中央に
コンポーネントを加える</description>
<codetext>container.add(c,BorderLayout.CENTER);
window.pack();
</codetext>
</operation>
<operation>
<ID>_OX6</ID>
<state1>_SX3</state1>
<state2>_SX3</state2>
<x0>36</x0>
<y0>50</y0>
<width>154</width>
<height>66</height>
<inconnectx0>106</inconnectx0>
<inconnecty0>46</inconnecty0>
<outconnectx0>106</outconnectx0>
<outconnecty0>48</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>47</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>ウィンドウの上部に
コンポーネントを加える
</description>
<codetext>container.add(c,BorderLayout.NORTH);
window.pack();
</codetext>
</operation>
<pin>
<ID>_PX24</ID>
<x0>414</x0>
<y0>105</y0>
<width>145</width>
<height>21</height>
<text>AddSouth(Component c)</text>
<px>10</px>
<py>140</py>
</pin>
<pin>
<ID>_PX21</ID>
<x0>416</x0>
<y0>174</y0>
<width>140</width>
<height>25</height>
<text>AddWest(Component c)</text>
<px>9</px>
<py>117</py>
</pin>
<pin>
<ID>_PX18</ID>
<x0>417</x0>
<y0>241</y0>
<width>142</width>
<height>24</height>
<text>AddEast(Component c)</text>
<px>342</px>
<py>105</py>
</pin>
<pin>
<ID>_PX16</ID>
<x0>406</x0>
<y0>21</y0>
<width>57</width>
<height>23</height>
<text>Opened()</text>
<px>379</px>
<py>103</py>
</pin>
<pin>
<ID>_PX15</ID>
<x0>347</x0>
<y0>21</y0>
<width>59</width>
<height>23</height>
<text>Iconfied()</text>
<px>363</px>
<py>58</py>
</pin>
<pin>
<ID>_PX14</ID>
<x0>276</x0>
<y0>21</y0>
<width>71</width>
<height>23</height>
<text>Deiconfied()</text>
<px>365</px>
<py>98</py>
</pin>
<pin>
<ID>_PX13</ID>
<x0>457</x0>
<y0>0</y0>
<width>80</width>
<height>21</height>
<text>Deactivated()</text>
<px>364</px>
<py>47</py>
</pin>
<pin>
<ID>_PX12</ID>
<x0>397</x0>
<y0>0</y0>
<width>60</width>
<height>21</height>
<text>Closing()</text>
<px>164</px>
<py>78</py>
</pin>
<pin>
<ID>_PX11</ID>
<x0>341</x0>
<y0>0</y0>
<width>56</width>
<height>21</height>
<text>Closed()</text>
<px>359</px>
<py>20</py>
</pin>
<pin>
<ID>_PX10</ID>
<x0>276</x0>
<y0>0</y0>
<width>65</width>
<height>21</height>
<text>Activated()</text>
<px>80</px>
<py>102</py>
</pin>
<pin>
<ID>_PX1</ID>
<x0>0</x0>
<y0>146</y0>
<width>141</width>
<height>21</height>
<text>AddNorth(Component c)</text>
<px>11</px>
<py>168</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>417</x0>
<y0>305</y0>
<width>147</width>
<height>29</height>
<text>AddCenter(Component c)</text>
<px>102</px>
<py>32</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>6</x0>
<y0>194</y0>
<width>70</width>
<height>40</height>
<text>   初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX3</ID>
<x0>135</x0>
<y0>195</y0>
<width>70</width>
<height>40</height>
<text>   待機状態</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<aobject>
<ID>_A1</ID>
<x0>253</x0>
<y0>110</y0>
<width>143</width>
<height>106</height>
<ID_maker>12</ID_maker>
<objectname>VBoxPanel</objectname>
<description>縦方向のBoxLayoutに設定されたコンテナ
</description>
<action>
<ID>_AX11</ID>
<comp1name>_PX3</comp1name>
<comp2name>_OX9</comp2name>
</action>
<action>
<ID>_AX10</ID>
<comp1name>_OX9</comp1name>
<comp2name>_PX2</comp2name>
</action>
<action>
<ID>_AX8</ID>
<comp1name>_PX1</comp1name>
<comp2name>_OX7</comp2name>
</action>
<codeclip>
<ID>_CX4</ID>
<x0>95</x0>
<y0>70</y0>
<width>99</width>
<height>21</height>
<codetext>JPanel panel;
</codetext>
</codeclip>
<operation>
<ID>_OX6</ID>
<state1>_SINIT</state1>
<state2>_SX5</state2>
<x0>106</x0>
<y0>94</y0>
<width>82</width>
<height>49</height>
<inconnectx0>1</inconnectx0>
<inconnecty0>15</inconnecty0>
<outconnectx0>62</outconnectx0>
<outconnecty0>9</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>20</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>0</inpinlinkcount>
<description>初期設定
</description>
<codetext>panel = new JPanel();
panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
</codetext>
</operation>
<operation>
<ID>_OX7</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>301</x0>
<y0>27</y0>
<width>136</width>
<height>84</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>13</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>13</outconnecty0>
<inpintext>in(Component c)</inpintext>
<inpinx0>35</inpinx0>
<inpiny0>62</inpiny0>
<inpinwidth>101</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>コンポーネントを
自分に加える</description>
<codetext>panel.add(c);
</codetext>
</operation>
<operation>
<ID>_OX9</ID>
<state1>_SX5</state1>
<state2>_SX5</state2>
<x0>302</x0>
<y0>127</y0>
<width>142</width>
<height>87</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>19</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>19</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>66</inpiny0>
<inpinwidth>28</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out(Container c)</outpintext>
<outpinx0>35</outpinx0>
<outpiny0>66</outpiny0>
<outpinwidth>106</outpinwidth>
<outpinheight>21</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>上位コンポーネントに
自分を加える</description>
<codetext>c = panel;
</codetext>
</operation>
<pin>
<ID>_PX1</ID>
<x0>472</x0>
<y0>56</y0>
<width>116</width>
<height>32</height>
<text>add(Component c)</text>
<px>20</px>
<py>44</py>
</pin>
<pin>
<ID>_PX2</ID>
<x0>476</x0>
<y0>170</y0>
<width>114</width>
<height>31</height>
<text>join(Container c)</text>
<px>25</px>
<py>64</py>
</pin>
<pin>
<ID>_PX3</ID>
<x0>198</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>Start()</text>
<px>100</px>
<py>86</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>17</x0>
<y0>69</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<state>
<ID>_SX5</ID>
<x0>212</x0>
<y0>74</y0>
<width>70</width>
<height>40</height>
<text>  待機状態</text>
<isinitstate>0</isinitstate>
</state>
</aobject>
<aobject>
<ID>_A7</ID>
<x0>492</x0>
<y0>319</y0>
<width>95</width>
<height>51</height>
<ID_maker>3</ID_maker>
<objectname>Finaliser</objectname>
<description>プログラムを終了させるオブジェクト</description>
<action>
<ID>_A2</ID>
<comp1name>_P1</comp1name>
<comp2name>_O0</comp2name>
</action>
<operation>
<ID>_O0</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>122</x0>
<y0>61</y0>
<width>130</width>
<height>90</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>68</inpiny0>
<inpinwidth>39</inpinwidth>
<inpinheight>22</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description>プログラムを
終了する</description>
<codetext>System.exit(0);
</codetext>
</operation>
<pin>
<ID>_P1</ID>
<x0>317</x0>
<y0>96</y0>
<width>60</width>
<height>30</height>
<text>exit()</text>
<px>11</px>
<py>31</py>
</pin>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>10</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
</aobject>
<pin>
<ID>_P2</ID>
<x0>522</x0>
<y0>150</y0>
<width>47</width>
<height>28</height>
<text>start()</text>
<px>606</px>
<py>4</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>395</x0>
<y0>55</y0>
<width>109</width>
<height>30</height>
<text>in(Component c)</text>
<px>237</px>
<py>7</py>
</pin>
<relation>
<ID>_R4</ID>
<pin1name>_A1(_PX2)</pin1name>
<pin2name>_A0(_PX2)</pin2name>
</relation>
<relation>
<ID>_R5</ID>
<pin1name>_P3</pin1name>
<pin2name>_A1(_PX1)</pin2name>
</relation>
<relation>
<ID>_R6</ID>
<pin1name>_P2</pin1name>
<pin2name>_A1(_PX3)</pin2name>
</relation>
<relation>
<ID>_R8</ID>
<pin1name>_A0(_PX12)</pin1name>
<pin2name>_A7(_P1)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R135</ID>
<pin1name>_X106(_P131)</pin1name>
<pin2name>_X134(_P3)</pin2name>
</relation>
<relation>
<ID>_R136</ID>
<pin1name>_X106(_PX1)</pin1name>
<pin2name>_X134(_P3)</pin2name>
</relation>
<relation>
<ID>_R137</ID>
<pin1name>_X118(_P73)</pin1name>
<pin2name>_X134(_P3)</pin2name>
</relation>
<relation>
<ID>_R138</ID>
<pin1name>_X36(_P73)</pin1name>
<pin2name>_X134(_P3)</pin2name>
</relation>
<relation>
<ID>_R139</ID>
<pin1name>_X90(_P1)</pin1name>
<pin2name>_X134(_P2)</pin2name>
</relation>
<relation>
<ID>_R140</ID>
<pin1name>_X134(_P2)</pin1name>
<pin2name>_X36(_PX1)</pin2name>
</relation>
<aobject>
<ID>_A141</ID>
<x0>280</x0>
<y0>299</y0>
<width>100</width>
<height>76</height>
<ID_maker>4</ID_maker>
<objectname>AutoLoader</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>10</x0>
<y0>102</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_P0</ID>
<x0>359</x0>
<y0>117</y0>
<width>54</width>
<height>26</height>
<text>start()</text>
<px>26</px>
<py>56</py>
</pin>
<operation>
<ID>_O1</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>134</x0>
<y0>104</y0>
<width>161</width>
<height>75</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>121</inpinx0>
<inpiny0>56</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ファイル&quot;Layout.dat&quot;
// があればロードする
if(  ( new XFile( &quot;Layout.dat&quot; ) ).isFile() ) open(&quot;Layout.dat&quot;);
mainwindow.setBounds(editwindow.getX()+editwindow.getWidth(),0,260,400);
mainwindow.validate();
mainwindow.repaint();
</codetext>
</operation>
<action>
<ID>_A2</ID>
<comp1name>_P0</comp1name>
<comp2name>_O1</comp2name>
</action>
<pin>
<ID>_P3</ID>
<x0>322</x0>
<y0>212</y0>
<width>88</width>
<height>30</height>
<text>open(String f)</text>
<px>8</px>
<py>26</py>
</pin>
</aobject>
<relation>
<ID>_R142</ID>
<pin1name>_X106(_PX3)</pin1name>
<pin2name>_A141(_P0)</pin2name>
</relation>
<relation>
<ID>_R143</ID>
<pin1name>_A141(_P3)</pin1name>
<pin2name>_X118(_P132)</pin2name>
</relation>
<relation>
<ID>_R144</ID>
<pin1name>_X118(_P106)</pin1name>
<pin2name>_X90(_P27)</pin2name>
</relation>
<codeclip>
<ID>_C145</ID>
<x0>294</x0>
<y0>18</y0>
<width>138</width>
<height>34</height>
<codetext>// 倍率用テキスト
JTextField xxscale;
</codetext>
</codeclip>
</xobject>
<relation>
<ID>_R1</ID>
<pin1name>_PSTART</pin1name>
<pin2name>_X0(_PX7)</pin2name>
</relation>
<プロパティ>
<ID>properties</ID>
<LookandFeel>javax.swing.plaf.metal.MetalLookAndFeel</LookandFeel>
<MainWinx0>0</MainWinx0>
<MainWiny0>0</MainWiny0>
<MainWinWidth>1024</MainWinWidth>
<MainWinHeight>740</MainWinHeight>
<MesgWinx0>0</MesgWinx0>
<MesgWiny0>0</MesgWiny0>
<MesgWinWidth>1024</MesgWinWidth>
<MesgWinHeight>745</MesgWinHeight>
<FileWinx0>36</FileWinx0>
<FileWiny0>478</FileWiny0>
<FileWinWidth>578</FileWinWidth>
<FileWinHeight>262</FileWinHeight>
<EditWinx0>347</EditWinx0>
<EditWiny0>0</EditWiny0>
<EditWinWidth>676</EditWinWidth>
<EditWinHeight>541</EditWinHeight>
<PropWinx0>1</PropWinx0>
<PropWiny0>1</PropWiny0>
<PropWinWidth>615</PropWinWidth>
<PropWinHeight>448</PropWinHeight>
<DividerLocation1>2</DividerLocation1>
<DividerLocation2>2</DividerLocation2>
<ToolBarVisible>1</ToolBarVisible>
<ViewSourceAtCompile>0</ViewSourceAtCompile>
<NoSourceCreate>0</NoSourceCreate>
<JavaEditCommand>geany</JavaEditCommand>
<JavaViewCommand></JavaViewCommand>
<HelpCommand>xdg-open ./help/manual.html</HelpCommand>
<ApplicationType>0</ApplicationType>
<CompileCommand0>./compile_java</CompileCommand0>
<RunCommand0>./run_java</RunCommand0>
<GUIDesignerCommand0>java -jar guidsin.jar -java</GUIDesignerCommand0>
<ImportFiles0> import java.awt.*;
 import java.awt.event.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.geom.*;
import java.awt.print.*;
import javax.swing.border.*;
import javax.swing.filechooser.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.image.BufferedImage;
import javax.sound.sampled.*;
import javax.swing.plaf.metal.MetalLookAndFeel;

class Starter{
  public static void main( String args[] ){
    %AppName% ap = new %AppName%();
    ap.ARGS = args;
    ap.Start();
  }
}
</ImportFiles0>
<ProgramStartupCode0> String[] ARGS;
</ProgramStartupCode0>
<NativeHelpCommand0></NativeHelpCommand0>
<CompileCommand1></CompileCommand1>
<RunCommand1></RunCommand1>
<GUIDesignerCommand1>java -jar guidsin.jar -applet</GUIDesignerCommand1>
<ImportFiles1> import java.awt.*;
 import java.awt.event.*;
 import java.applet.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
 public class javatext extends Applet {
   %AppName% ap;
   public void init() {
     ap = new %AppName%();
     ap.APPLET = this;
     ap.Start();
   }
 }
</ImportFiles1>
<ProgramStartupCode1> Applet APPLET;
</ProgramStartupCode1>
<NativeHelpCommand1></NativeHelpCommand1>
<CompileCommand2></CompileCommand2>
<RunCommand2></RunCommand2>
<GUIDesignerCommand2></GUIDesignerCommand2>
<ImportFiles2>#include &lt;stdio.h&gt;

void Startup();
</ImportFiles2>
<ProgramStartupCode2>int main(){
 Startup();
 %AppName%::Start();
 }
</ProgramStartupCode2>
<NativeHelpCommand2></NativeHelpCommand2>
<CompileCommand3></CompileCommand3>
<RunCommand3></RunCommand3>
<GUIDesignerCommand3>java -jar guidsin.jar -cpp</GUIDesignerCommand3>
<ImportFiles3>#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;math.h&gt;
#include &quot;Ekagen.h&quot;
void Startup();
</ImportFiles3>
<ProgramStartupCode3>void Emain(){
Startup();
%AppName%::Start();
}
</ProgramStartupCode3>
<NativeHelpCommand3></NativeHelpCommand3>
<MoveStep>8</MoveStep>
<ImageEditCommand></ImageEditCommand>
<CompilerFileName>javac.exe</CompilerFileName>
<CompileCommand4>./compile_android Test com example test</CompileCommand4>
<RunCommand4>./run_android Test com example test</RunCommand4>
<GUIDesignerCommand4>java -jar guidsin.jar -android</GUIDesignerCommand4>
<ImportFiles4>package com.example.test;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.widget.Button;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.widget.EditText;
import android.text.SpannableStringBuilder;
import android.text.TextWatcher;
import android.text.Editable;
import android.graphics.Matrix;
import android.graphics.Typeface;
import android.graphics.RectF;
import android.graphics.BitmapFactory;
import java.io.*;
 import java.net.*;
import java.util.*;
import java.text.SimpleDateFormat;
import android.media.MediaPlayer;
import android.os.Handler;
import android.content.res.Configuration;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.app.Activity;
import android.graphics.Color;

import android.widget.AbsoluteLayout;
import android.widget.*;
import android.view.Gravity;
import android.view.View.OnClickListener;

import android.hardware.Camera;

public class HelloWorld extends Activity {
  public void onCreate(Bundle bundle) {
    super.onCreate(bundle);
    %AppName% ap = new %AppName%();
    ap.ACTIVITY = this;
    ap.Start();
  }
}
</ImportFiles4>
<ProgramStartupCode4>Activity ACTIVITY;
</ProgramStartupCode4>
<NativeHelpCommand4>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.test&quot;
    android:versionCode=&quot;1&quot;
    android:versionName=&quot;1.0&quot; &gt;

    
    
  &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.camera&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.usb.host&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot;/&gt;
  &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;

  &lt;uses-sdk android:minSdkVersion=&quot;3&quot; android:targetSdkVersion=&quot;21&quot;/&gt;
  
 
    &lt;application android:label=&quot;@string/app_name&quot; &gt;
        &lt;activity
            android:name=&quot;HelloWorld&quot;
            android:label=&quot;@string/app_name&quot; &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</NativeHelpCommand4>
<HtmlEditCommand></HtmlEditCommand>
<CompileCommand5></CompileCommand5>
<RunCommand5></RunCommand5>
<GUIDesignerCommand5></GUIDesignerCommand5>
<ImportFiles5></ImportFiles5>
<ProgramStartupCode5>gosub @_PSTART
end
</ProgramStartupCode5>
<NativeHelpCommand5></NativeHelpCommand5>
<NoOptimizePin>0</NoOptimizePin>
<CompileCommand6>./compile_c</CompileCommand6>
<RunCommand6>./run_c</RunCommand6>
<GUIDesignerCommand6></GUIDesignerCommand6>
<ImportFiles6>#include &lt;setjmp.h&gt;
#include &lt;pthread.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;math.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;netdb.h&gt;

#include &lt;X11/Xlib.h&gt;
#include &lt;X11/Xutil.h&gt;
#include &lt;X11/Xlocale.h&gt; /* ロケール用ヘッダーファイル */
#include &lt;X11/xpm.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;signal.h&gt;
#include &lt;unistd.h&gt;
#include &lt;termios.h&gt;
#include &lt;errno.h&gt;
</ImportFiles6>
<ProgramStartupCode6>int ARGC; char** ARGV;
int main( int argc, char** argv ){
  ARGC=argc;
  ARGV=argv;
  _PSTART();
}
</ProgramStartupCode6>
<NativeHelpCommand6></NativeHelpCommand6>
<IDF_LocalVariable5>\</IDF_LocalVariable5>
<IDF_LocalVariable7>\</IDF_LocalVariable7>
<CompileCommand7></CompileCommand7>
<RunCommand7></RunCommand7>
<GUIDesignerCommand7></GUIDesignerCommand7>
<ImportFiles7></ImportFiles7>
<ProgramStartupCode7></ProgramStartupCode7>
<NativeHelpCommand7></NativeHelpCommand7>
</プロパティ>
</xobject>
